MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-11-10 17:45:50,425][torch_points3d.trainer][INFO] - DEVICE : cuda
load_m2f_masks:  True
initialize train dataset
temporarily hard code N-views in get_view_dependent_features()
initialize val dataset
temporarily hard code N-views in get_view_dependent_features()
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-11-10 17:46:03,060][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  259
nc_in:  128
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
[2022-11-10 17:46:03,906][torch_points3d.core.schedulers.bn_schedulers][INFO] - Setting batchnorm momentum at 0.02
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D
[2022-11-10 17:46:04,128][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-11-10 17:46:04,128][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=256, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=256, out_features=512, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=512, out_features=256, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=256, out_features=512, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=512, out_features=256, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=256, out_features=512, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=512, out_features=256, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((256,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=256, out_features=256, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=256, out_features=512, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=512, out_features=256, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
              (dropout): Dropout(p=0.2, inplace=False)
            )
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=259, out_channels=128, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=224, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=224, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-11-10 17:46:04,131][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    dampening: 0.1
    foreach: None
    initial_lr: 0.01
    lr: 0.01
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-11-10 17:46:04,132][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: ExponentialLR({'gamma': 0.955}, update_scheduler_on=on_epoch)[0m
[2022-11-10 17:46:04,132][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: BNMomentumScheduler(base_momentum: 0.02, update_scheduler_on=on_epoch)[0m
[2022-11-10 17:46:04,132][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-11-10 17:46:04,133][torch_points3d.trainer][INFO] - Model size = 33933332
[2022-11-10 17:46:04,134][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.05, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.05, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.05, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.05, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.05, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
    ColorJitter(brightness=[0.4, 1.6], contrast=[0.4, 1.6], saturation=[0.30000000000000004, 1.7], hue=None),
    RandomHorizontalFlip(p=0.5),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.05, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
Size of [0;95mtrain_dataset [0m= 3
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 3
[0;95mBatch size =[0m 3
[2022-11-10 17:46:10,649][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-11-10 17:46:10,650][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-11-10 17:46:12,134][torch_points3d.trainer][INFO] - EPOCH 1 / 301
  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:28<?, ?it/s, [0;92mdata_loading=26.69, iteration=1.931, train_acc=4.054, train_loss_cross_entropy=3.210, train_loss_seg=3.210, train_macc=3.404, train_miou=0.950[0m)]100%|##########| 1/1 [00:28<00:00, 28.62s/it, [0;92mdata_loading=26.69, iteration=1.931, train_acc=4.054, train_loss_cross_entropy=3.210, train_loss_seg=3.210, train_macc=3.404, train_miou=0.950[0m)]100%|##########| 1/1 [00:28<00:00, 28.62s/it, [0;92mdata_loading=26.69, iteration=1.931, train_acc=4.054, train_loss_cross_entropy=3.210, train_loss_seg=3.210, train_macc=3.404, train_miou=0.950[0m)][2022-11-10 17:46:41,377][torch_points3d.trainer][INFO] - Learning rate = 0.009550
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 3.2101852893829346
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 3.2101852893829346
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 4.05436254889129
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 3.4048627565289653
[2022-11-10 17:46:41,378][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 0.9506758060585572
[2022-11-10 17:46:41,379][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '8.55', 1: '0.03', 2: '0.28', 3: '0.60', 4: '0.00', 5: '2.24', 6: '3.93', 7: '1.04', 8: '0.10', 9: '0.00', 10: '0.00', 11: '0.14', 12: '0.52', 13: '0.05', 14: '0.60', 15: '0.00', 16: '0.44', 17: '0.00', 18: '0.00', 19: '0.51'}
[2022-11-10 17:46:41,379][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:46:41,379][torch_points3d.trainer][INFO] - EPOCH 2 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:26<?, ?it/s, [0;92mdata_loading=25.33, iteration=1.113, train_acc=6.688, train_loss_cross_entropy=3.131, train_loss_seg=3.131, train_macc=4.083, train_miou=1.265[0m)]100%|##########| 1/1 [00:26<00:00, 26.45s/it, [0;92mdata_loading=25.33, iteration=1.113, train_acc=6.688, train_loss_cross_entropy=3.131, train_loss_seg=3.131, train_macc=4.083, train_miou=1.265[0m)]100%|##########| 1/1 [00:26<00:00, 26.45s/it, [0;92mdata_loading=25.33, iteration=1.113, train_acc=6.688, train_loss_cross_entropy=3.131, train_loss_seg=3.131, train_macc=4.083, train_miou=1.265[0m)][2022-11-10 17:47:08,436][torch_points3d.trainer][INFO] - Learning rate = 0.009120
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 3.13135027885437
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 3.13135027885437
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 6.688151090459417
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 4.082979211881562
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 1.2651453859159298
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '13.20', 1: '0.11', 2: '0.45', 3: '0.67', 4: '0.14', 5: '2.46', 6: '4.59', 7: '0.59', 8: '0.54', 9: '0.00', 10: '0.00', 11: '0.16', 12: '0.90', 13: '0.00', 14: '0.60', 15: '0.00', 16: '0.42', 17: '0.00', 18: '0.00', 19: '0.48'}
[2022-11-10 17:47:08,437][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:47:08,438][torch_points3d.trainer][INFO] - EPOCH 3 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:26<?, ?it/s, [0;92mdata_loading=25.15, iteration=1.142, train_acc=10.21, train_loss_cross_entropy=3.000, train_loss_seg=3.000, train_macc=4.239, train_miou=1.434[0m)]100%|##########| 1/1 [00:26<00:00, 26.30s/it, [0;92mdata_loading=25.15, iteration=1.142, train_acc=10.21, train_loss_cross_entropy=3.000, train_loss_seg=3.000, train_macc=4.239, train_miou=1.434[0m)]100%|##########| 1/1 [00:26<00:00, 26.30s/it, [0;92mdata_loading=25.15, iteration=1.142, train_acc=10.21, train_loss_cross_entropy=3.000, train_loss_seg=3.000, train_macc=4.239, train_miou=1.434[0m)][2022-11-10 17:47:35,360][torch_points3d.trainer][INFO] - Learning rate = 0.008710
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 3.0005929470062256
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 3.0005929470062256
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 10.212459598976762
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 4.239259490471574
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 1.4347671870503231
[2022-11-10 17:47:35,362][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '17.36', 1: '0.79', 2: '0.33', 3: '0.71', 4: '0.00', 5: '1.98', 6: '3.83', 7: '1.39', 8: '0.24', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.90', 13: '0.03', 14: '0.32', 15: '0.00', 16: '0.37', 17: '0.00', 18: '0.00', 19: '0.45'}
[2022-11-10 17:47:35,363][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:47:35,363][torch_points3d.trainer][INFO] - EPOCH 4 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:27<?, ?it/s, [0;92mdata_loading=26.08, iteration=1.165, train_acc=19.29, train_loss_cross_entropy=2.834, train_loss_seg=2.834, train_macc=5.977, train_miou=2.106[0m)]100%|##########| 1/1 [00:27<00:00, 27.25s/it, [0;92mdata_loading=26.08, iteration=1.165, train_acc=19.29, train_loss_cross_entropy=2.834, train_loss_seg=2.834, train_macc=5.977, train_miou=2.106[0m)]100%|##########| 1/1 [00:27<00:00, 27.25s/it, [0;92mdata_loading=26.08, iteration=1.165, train_acc=19.29, train_loss_cross_entropy=2.834, train_loss_seg=2.834, train_macc=5.977, train_miou=2.106[0m)][2022-11-10 17:48:03,252][torch_points3d.trainer][INFO] - Learning rate = 0.008318
[2022-11-10 17:48:03,254][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.8345439434051514
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.8345439434051514
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 19.299379904193728
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 5.977827719724255
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 2.1069192276274444
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '23.44', 1: '8.22', 2: '0.48', 3: '0.08', 4: '0.24', 5: '1.67', 6: '4.61', 7: '0.47', 8: '0.10', 9: '0.00', 10: '0.00', 11: '0.22', 12: '1.18', 13: '0.03', 14: '0.16', 15: '0.00', 16: '0.49', 17: '0.00', 18: '0.00', 19: '0.75'}
[2022-11-10 17:48:03,255][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:03,256][torch_points3d.trainer][INFO] - EPOCH 5 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:26<?, ?it/s, [0;92mdata_loading=25.14, iteration=1.094, train_acc=30.86, train_loss_cross_entropy=2.662, train_loss_seg=2.662, train_macc=7.719, train_miou=3.167[0m)]100%|##########| 1/1 [00:26<00:00, 26.24s/it, [0;92mdata_loading=25.14, iteration=1.094, train_acc=30.86, train_loss_cross_entropy=2.662, train_loss_seg=2.662, train_macc=7.719, train_miou=3.167[0m)]100%|##########| 1/1 [00:26<00:00, 26.24s/it, [0;92mdata_loading=25.14, iteration=1.094, train_acc=30.86, train_loss_cross_entropy=2.662, train_loss_seg=2.662, train_macc=7.719, train_miou=3.167[0m)][2022-11-10 17:48:30,106][torch_points3d.trainer][INFO] - Learning rate = 0.007944
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.662872791290283
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.662872791290283
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 30.86314912435308
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 7.719424391645416
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 3.1676826565344305
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '27.77', 1: '26.52', 2: '0.51', 3: '0.41', 4: '0.00', 5: '1.27', 6: '4.25', 7: '0.39', 8: '0.18', 9: '0.00', 10: '0.00', 11: '0.00', 12: '1.32', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.21', 17: '0.00', 18: '0.00', 19: '0.53'}
[2022-11-10 17:48:30,107][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:30,108][torch_points3d.trainer][INFO] - EPOCH 6 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:25<?, ?it/s, [0;92mdata_loading=24.76, iteration=1.142, train_acc=39.75, train_loss_cross_entropy=2.491, train_loss_seg=2.491, train_macc=8.979, train_miou=3.865[0m)]100%|##########| 1/1 [00:25<00:00, 25.91s/it, [0;92mdata_loading=24.76, iteration=1.142, train_acc=39.75, train_loss_cross_entropy=2.491, train_loss_seg=2.491, train_macc=8.979, train_miou=3.865[0m)]100%|##########| 1/1 [00:25<00:00, 25.91s/it, [0;92mdata_loading=24.76, iteration=1.142, train_acc=39.75, train_loss_cross_entropy=2.491, train_loss_seg=2.491, train_macc=8.979, train_miou=3.865[0m)][2022-11-10 17:48:56,635][torch_points3d.trainer][INFO] - Learning rate = 0.007586
[2022-11-10 17:48:56,636][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.4918060302734375
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.4918060302734375
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 39.75151505946324
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 8.979591533038654
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 3.8649974366761883
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '30.73', 1: '42.07', 2: '0.31', 3: '0.11', 4: '0.00', 5: '0.75', 6: '2.71', 7: '0.05', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.16', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.11', 17: '0.00', 18: '0.00', 19: '0.31'}
[2022-11-10 17:48:56,637][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:48:56,638][torch_points3d.trainer][INFO] - EPOCH 7 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:25<?, ?it/s, [0;92mdata_loading=24.86, iteration=1.107, train_acc=46.81, train_loss_cross_entropy=2.333, train_loss_seg=2.333, train_macc=10.26, train_miou=4.638[0m)]100%|##########| 1/1 [00:25<00:00, 25.97s/it, [0;92mdata_loading=24.86, iteration=1.107, train_acc=46.81, train_loss_cross_entropy=2.333, train_loss_seg=2.333, train_macc=10.26, train_miou=4.638[0m)]100%|##########| 1/1 [00:25<00:00, 25.97s/it, [0;92mdata_loading=24.86, iteration=1.107, train_acc=46.81, train_loss_cross_entropy=2.333, train_loss_seg=2.333, train_macc=10.26, train_miou=4.638[0m)][2022-11-10 17:49:23,227][torch_points3d.trainer][INFO] - Learning rate = 0.007245
[2022-11-10 17:49:23,227][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.333034038543701
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.333034038543701
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 46.81127262298299
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 10.260641195320156
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 4.638784203968868
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '34.38', 1: '55.57', 2: '0.18', 3: '0.00', 4: '0.00', 5: '0.39', 6: '1.72', 7: '0.10', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.18', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.26', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-11-10 17:49:23,228][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:49:23,229][torch_points3d.trainer][INFO] - EPOCH 8 / 301

  0%|          | 0/1 [00:00<?, ?it/s]  0%|          | 0/1 [00:26<?, ?it/s, [0;92mdata_loading=25.34, iteration=1.172, train_acc=50.50, train_loss_cross_entropy=2.208, train_loss_seg=2.208, train_macc=10.85, train_miou=5.478[0m)]100%|##########| 1/1 [00:26<00:00, 26.52s/it, [0;92mdata_loading=25.34, iteration=1.172, train_acc=50.50, train_loss_cross_entropy=2.208, train_loss_seg=2.208, train_macc=10.85, train_miou=5.478[0m)]100%|##########| 1/1 [00:26<00:00, 26.52s/it, [0;92mdata_loading=25.34, iteration=1.172, train_acc=50.50, train_loss_cross_entropy=2.208, train_loss_seg=2.208, train_macc=10.85, train_miou=5.478[0m)][2022-11-10 17:49:50,367][torch_points3d.trainer][INFO] - Learning rate = 0.006919
[2022-11-10 17:49:50,368][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:49:50,368][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.2088046073913574
[2022-11-10 17:49:50,368][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.2088046073913574
[2022-11-10 17:49:50,368][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 50.50777202072538
[2022-11-10 17:49:50,368][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 10.855714990028993
[2022-11-10 17:49:50,369][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 5.478063775953668
[2022-11-10 17:49:50,369][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '37.28', 1: '60.40', 2: '0.02', 3: '0.00', 4: '0.00', 5: '0.13', 6: '0.78', 7: '0.00', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-11-10 17:49:50,369][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-10 17:49:50,369][torch_points3d.trainer][INFO] - EPOCH 9 / 301

  0%|          | 0/1 [00:00<?, ?it/s]slurmstepd: error: *** JOB 10256035 ON r28n2 CANCELLED AT 2022-11-10T17:50:09 ***
