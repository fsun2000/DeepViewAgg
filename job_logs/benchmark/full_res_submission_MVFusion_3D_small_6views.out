MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-12-10 11:22:43,455][torch_points3d.trainer][INFO] - DEVICE : cuda
[2022-12-10 11:22:44,514][torch_points3d.metrics.model_checkpoint][INFO] - Loading checkpoint from /home/fsun/DeepViewAgg/outputs/2022-12-09/02-10-58/MVFusion_3D_small_6views.pt
Load predicted 2D semantic segmentation labels from directory  submission_masks_25k
initialize train dataset
dataset has already been remapped! skipping this step...
initialize val dataset
initialize test dataset
line 720 scannet.py: split == 'test'
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small_6views
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-12-10 11:24:01,188][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
[2022-12-10 11:24:01,924][torch_points3d.metrics.model_checkpoint][INFO] - Available weights : ['latest', 'acc', 'macc', 'miou']
[2022-12-10 11:24:01,924][torch_points3d.metrics.model_checkpoint][INFO] - Model loaded from MVFusion_3D_small_6views.pt:latest
[2022-12-10 11:24:02,481][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-12-10 11:24:02,484][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    base_momentum: 0.85
    dampening: 0
    foreach: None
    initial_lr: 0.012
    lr: 1.2066078413381546e-06
    max_lr: 0.3
    max_momentum: 0.95
    maximize: False
    min_lr: 1.2e-06
    momentum: 0.9499999977973773
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-12-10 11:24:02,485][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: OneCycleLR({'max_lr': 0.3, 'epochs': 60, 'steps_per_epoch': 252, 'anneal_strategy': 'cos', 'cycle_momentum': True, 'base_momentum': 0.85, 'max_momentum': 0.95, 'three_phase': False}, update_scheduler_on=on_num_batch)[0m
[2022-12-10 11:24:02,485][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-12-10 11:24:02,485][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-12-10 11:24:02,486][torch_points3d.trainer][INFO] - Model size = 30911764
creating test loader
NOTE: this flag has not been tested by Feng 
[2022-12-10 11:24:02,487][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1513
Size of [0;95mtest_dataset [0m= 100
Size of [0;95mval_dataset [0m= 1
[0;95mBatch size =[0m 1
[2022-12-10 11:24:10,808][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['test', 'val'] [0m
[2022-12-10 11:24:10,809][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m

 Evaluation of validation set is disabled in trainer.py at line 217 

  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:20<?, ?it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  1%|1         | 1/100 [00:20<33:35, 20.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  1%|1         | 1/100 [00:21<33:35, 20.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  2%|2         | 2/100 [00:21<15:12,  9.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  2%|2         | 2/100 [00:22<15:12,  9.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  3%|3         | 3/100 [00:22<08:57,  5.54s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  3%|3         | 3/100 [00:24<08:57,  5.54s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  4%|4         | 4/100 [00:24<06:00,  3.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  4%|4         | 4/100 [00:25<06:00,  3.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  5%|5         | 5/100 [00:25<04:23,  2.77s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  5%|5         | 5/100 [00:26<04:23,  2.77s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  6%|6         | 6/100 [00:26<03:33,  2.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  6%|6         | 6/100 [00:27<03:33,  2.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  7%|7         | 7/100 [00:27<02:42,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  7%|7         | 7/100 [00:28<02:42,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  8%|8         | 8/100 [00:28<02:24,  1.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  8%|8         | 8/100 [00:29<02:24,  1.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  9%|9         | 9/100 [00:29<02:11,  1.45s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  9%|9         | 9/100 [00:30<02:11,  1.45s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 10%|#         | 10/100 [00:30<02:03,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 10%|#         | 10/100 [00:31<02:03,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 11%|#1        | 11/100 [00:31<01:58,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 11%|#1        | 11/100 [00:33<01:58,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 12%|#2        | 12/100 [00:33<01:57,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 12%|#2        | 12/100 [00:34<01:57,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 13%|#3        | 13/100 [00:34<01:57,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 13%|#3        | 13/100 [00:36<01:57,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 14%|#4        | 14/100 [00:36<02:08,  1.49s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 14%|#4        | 14/100 [00:38<02:08,  1.49s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 15%|#5        | 15/100 [00:38<02:27,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 15%|#5        | 15/100 [00:40<02:27,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 16%|#6        | 16/100 [00:40<02:33,  1.82s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 16%|#6        | 16/100 [00:42<02:33,  1.82s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 17%|#7        | 17/100 [00:42<02:23,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 17%|#7        | 17/100 [00:44<02:23,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 18%|#8        | 18/100 [00:44<02:24,  1.77s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 18%|#8        | 18/100 [00:45<02:24,  1.77s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 19%|#9        | 19/100 [00:45<02:21,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 19%|#9        | 19/100 [00:46<02:21,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 20%|##        | 20/100 [00:46<02:02,  1.54s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 20%|##        | 20/100 [00:48<02:02,  1.54s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 21%|##1       | 21/100 [00:48<02:12,  1.68s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 21%|##1       | 21/100 [00:50<02:12,  1.68s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 22%|##2       | 22/100 [00:50<02:11,  1.68s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 22%|##2       | 22/100 [00:52<02:11,  1.68s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 23%|##3       | 23/100 [00:52<02:11,  1.71s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 23%|##3       | 23/100 [00:54<02:11,  1.71s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 24%|##4       | 24/100 [00:54<02:16,  1.80s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 24%|##4       | 24/100 [00:56<02:16,  1.80s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 25%|##5       | 25/100 [00:56<02:25,  1.94s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 25%|##5       | 25/100 [00:59<02:25,  1.94s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 26%|##6       | 26/100 [00:59<02:41,  2.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 26%|##6       | 26/100 [01:02<02:41,  2.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 27%|##7       | 27/100 [01:02<02:50,  2.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 27%|##7       | 27/100 [01:05<02:50,  2.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 28%|##8       | 28/100 [01:05<03:04,  2.56s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 28%|##8       | 28/100 [01:06<03:04,  2.56s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 29%|##9       | 29/100 [01:06<02:38,  2.24s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 29%|##9       | 29/100 [01:09<02:38,  2.24s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 30%|###       | 30/100 [01:09<02:48,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 30%|###       | 30/100 [01:11<02:48,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 31%|###1      | 31/100 [01:11<02:43,  2.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 31%|###1      | 31/100 [01:14<02:43,  2.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 32%|###2      | 32/100 [01:14<02:54,  2.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 32%|###2      | 32/100 [01:17<02:54,  2.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 33%|###3      | 33/100 [01:17<02:58,  2.67s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 33%|###3      | 33/100 [01:20<02:58,  2.67s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 34%|###4      | 34/100 [01:20<03:02,  2.76s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 34%|###4      | 34/100 [01:22<03:02,  2.76s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 35%|###5      | 35/100 [01:22<02:52,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 35%|###5      | 35/100 [01:24<02:52,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 36%|###6      | 36/100 [01:24<02:20,  2.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 36%|###6      | 36/100 [01:26<02:20,  2.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 37%|###7      | 37/100 [01:26<02:18,  2.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 37%|###7      | 37/100 [01:29<02:18,  2.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 38%|###8      | 38/100 [01:29<02:33,  2.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 38%|###8      | 38/100 [01:31<02:33,  2.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 39%|###9      | 39/100 [01:31<02:26,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 39%|###9      | 39/100 [01:34<02:26,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 40%|####      | 40/100 [01:34<02:38,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 40%|####      | 40/100 [01:55<02:38,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 41%|####1     | 41/100 [01:55<07:55,  8.07s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 41%|####1     | 41/100 [01:57<07:55,  8.07s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 42%|####2     | 42/100 [01:57<06:03,  6.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 42%|####2     | 42/100 [02:00<06:03,  6.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 43%|####3     | 43/100 [02:00<05:01,  5.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 43%|####3     | 43/100 [02:01<05:01,  5.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 44%|####4     | 44/100 [02:01<03:42,  3.98s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 44%|####4     | 44/100 [02:02<03:42,  3.98s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 45%|####5     | 45/100 [02:02<02:46,  3.02s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 45%|####5     | 45/100 [02:05<02:46,  3.02s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 46%|####6     | 46/100 [02:05<02:45,  3.07s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 46%|####6     | 46/100 [02:09<02:45,  3.07s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 47%|####6     | 47/100 [02:09<02:52,  3.25s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 47%|####6     | 47/100 [02:11<02:52,  3.25s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 48%|####8     | 48/100 [02:11<02:36,  3.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 48%|####8     | 48/100 [02:14<02:36,  3.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 49%|####9     | 49/100 [02:14<02:34,  3.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 49%|####9     | 49/100 [02:17<02:34,  3.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 50%|#####     | 50/100 [02:17<02:30,  3.00s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 50%|#####     | 50/100 [02:27<02:30,  3.00s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 51%|#####1    | 51/100 [02:27<04:05,  5.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 51%|#####1    | 51/100 [02:29<04:05,  5.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 52%|#####2    | 52/100 [02:29<03:12,  4.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 52%|#####2    | 52/100 [02:30<03:12,  4.01s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 53%|#####3    | 53/100 [02:30<02:31,  3.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 53%|#####3    | 53/100 [02:31<02:31,  3.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 54%|#####4    | 54/100 [02:31<02:01,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 54%|#####4    | 54/100 [02:33<02:01,  2.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 55%|#####5    | 55/100 [02:33<01:45,  2.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 55%|#####5    | 55/100 [02:34<01:45,  2.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 56%|#####6    | 56/100 [02:34<01:29,  2.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 56%|#####6    | 56/100 [02:35<01:29,  2.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 57%|#####6    | 57/100 [02:35<01:10,  1.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 57%|#####6    | 57/100 [02:36<01:10,  1.65s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 58%|#####8    | 58/100 [02:36<01:07,  1.60s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 58%|#####8    | 58/100 [02:38<01:07,  1.60s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 59%|#####8    | 59/100 [02:38<01:00,  1.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 59%|#####8    | 59/100 [02:41<01:00,  1.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 60%|######    | 60/100 [02:41<01:17,  1.94s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 60%|######    | 60/100 [02:42<01:17,  1.94s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 61%|######1   | 61/100 [02:42<01:09,  1.78s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 61%|######1   | 61/100 [02:44<01:09,  1.78s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 62%|######2   | 62/100 [02:44<01:13,  1.92s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 62%|######2   | 62/100 [02:46<01:13,  1.92s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 63%|######3   | 63/100 [02:46<01:09,  1.88s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 63%|######3   | 63/100 [02:49<01:09,  1.88s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 64%|######4   | 64/100 [02:49<01:14,  2.06s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 64%|######4   | 64/100 [02:51<01:14,  2.06s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 65%|######5   | 65/100 [02:51<01:13,  2.10s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 65%|######5   | 65/100 [02:53<01:13,  2.10s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 66%|######6   | 66/100 [02:53<01:17,  2.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 66%|######6   | 66/100 [02:56<01:17,  2.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 67%|######7   | 67/100 [02:56<01:18,  2.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 67%|######7   | 67/100 [02:59<01:18,  2.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 68%|######8   | 68/100 [02:59<01:22,  2.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 68%|######8   | 68/100 [03:01<01:22,  2.57s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 69%|######9   | 69/100 [03:01<01:14,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 69%|######9   | 69/100 [03:04<01:14,  2.41s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 70%|#######   | 70/100 [03:04<01:15,  2.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 70%|#######   | 70/100 [03:06<01:15,  2.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 71%|#######1  | 71/100 [03:06<01:06,  2.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 71%|#######1  | 71/100 [03:07<01:06,  2.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 72%|#######2  | 72/100 [03:07<00:53,  1.90s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 72%|#######2  | 72/100 [03:08<00:53,  1.90s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 73%|#######3  | 73/100 [03:08<00:43,  1.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 73%|#######3  | 73/100 [03:09<00:43,  1.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 74%|#######4  | 74/100 [03:09<00:39,  1.53s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 74%|#######4  | 74/100 [03:10<00:39,  1.53s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 75%|#######5  | 75/100 [03:10<00:36,  1.47s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 75%|#######5  | 75/100 [03:11<00:36,  1.47s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 76%|#######6  | 76/100 [03:11<00:32,  1.35s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 76%|#######6  | 76/100 [03:12<00:32,  1.35s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 77%|#######7  | 77/100 [03:12<00:29,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 77%|#######7  | 77/100 [03:14<00:29,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 78%|#######8  | 78/100 [03:14<00:27,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 78%|#######8  | 78/100 [03:15<00:27,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 79%|#######9  | 79/100 [03:15<00:27,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 79%|#######9  | 79/100 [03:16<00:27,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 80%|########  | 80/100 [03:16<00:25,  1.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 80%|########  | 80/100 [03:18<00:25,  1.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 81%|########1 | 81/100 [03:18<00:25,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 81%|########1 | 81/100 [03:19<00:25,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 82%|########2 | 82/100 [03:19<00:23,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 82%|########2 | 82/100 [03:20<00:23,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 83%|########2 | 83/100 [03:20<00:21,  1.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 83%|########2 | 83/100 [03:21<00:21,  1.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 84%|########4 | 84/100 [03:21<00:19,  1.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 84%|########4 | 84/100 [03:22<00:19,  1.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 85%|########5 | 85/100 [03:22<00:17,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 85%|########5 | 85/100 [03:23<00:17,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 86%|########6 | 86/100 [03:23<00:16,  1.15s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 86%|########6 | 86/100 [03:25<00:16,  1.15s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 87%|########7 | 87/100 [03:25<00:14,  1.14s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 87%|########7 | 87/100 [03:25<00:14,  1.14s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 88%|########8 | 88/100 [03:25<00:11,  1.02it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 88%|########8 | 88/100 [03:26<00:11,  1.02it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 89%|########9 | 89/100 [03:26<00:09,  1.14it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 89%|########9 | 89/100 [03:27<00:09,  1.14it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 90%|######### | 90/100 [03:27<00:09,  1.09it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 90%|######### | 90/100 [03:28<00:09,  1.09it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 91%|#########1| 91/100 [03:28<00:08,  1.01it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 91%|#########1| 91/100 [03:29<00:08,  1.01it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 92%|#########2| 92/100 [03:29<00:07,  1.01it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 92%|#########2| 92/100 [03:30<00:07,  1.01it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 93%|#########3| 93/100 [03:30<00:07,  1.02s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 93%|#########3| 93/100 [03:30<00:07,  1.02s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 94%|#########3| 94/100 [03:30<00:04,  1.21it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 94%|#########3| 94/100 [03:31<00:04,  1.21it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 95%|#########5| 95/100 [03:31<00:03,  1.54it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 95%|#########5| 95/100 [03:31<00:03,  1.54it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 96%|#########6| 96/100 [03:31<00:02,  1.87it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 96%|#########6| 96/100 [03:31<00:02,  1.87it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 97%|#########7| 97/100 [03:31<00:01,  2.15it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 97%|#########7| 97/100 [03:32<00:01,  2.15it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 98%|#########8| 98/100 [03:32<00:00,  2.39it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 98%|#########8| 98/100 [03:32<00:00,  2.39it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 99%|#########9| 99/100 [03:32<00:00,  2.57it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 99%|#########9| 99/100 [03:32<00:00,  2.57it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]100%|##########| 100/100 [03:32<00:00,  2.91it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]100%|##########| 100/100 [03:32<00:00,  2.13s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)][2022-12-10 11:28:40,449][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-10 11:28:40,449][torch_points3d.metrics.base_tracker][INFO] -     test_acc = 0
[2022-12-10 11:28:40,449][torch_points3d.metrics.base_tracker][INFO] -     test_macc = 0
[2022-12-10 11:28:40,450][torch_points3d.metrics.base_tracker][INFO] -     test_miou = 0
[2022-12-10 11:28:40,450][torch_points3d.metrics.base_tracker][INFO] -     test_miou_per_class = {}
[2022-12-10 11:28:40,450][torch_points3d.metrics.base_tracker][INFO] - ==================================================

./scripts/eval_superconvergence_benchmark.sh: line 60: syntax error near unexpected token `}'
./scripts/eval_superconvergence_benchmark.sh: line 60: `}'
