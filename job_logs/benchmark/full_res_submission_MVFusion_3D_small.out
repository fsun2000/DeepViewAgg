MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-12-09 11:37:46,018][torch_points3d.trainer][INFO] - DEVICE : cuda
[2022-12-09 11:37:46,884][torch_points3d.metrics.model_checkpoint][INFO] - Loading checkpoint from /home/fsun/DeepViewAgg/outputs/2022-12-04/15-22-16/MVFusion_3D_small.pt
Load predicted 2D semantic segmentation labels from directory  submission_masks_25k
initialize train dataset
dataset has already been remapped! skipping this step...
initialize val dataset
initialize test dataset
line 720 scannet.py: split == 'test'
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-12-09 11:38:14,237][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
[2022-12-09 11:38:14,906][torch_points3d.metrics.model_checkpoint][INFO] - Available weights : ['latest', 'acc', 'macc', 'miou']
[2022-12-09 11:38:14,906][torch_points3d.metrics.model_checkpoint][INFO] - Model loaded from MVFusion_3D_small.pt:latest
[2022-12-09 11:38:15,192][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-12-09 11:38:15,196][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    base_momentum: 0.85
    dampening: 0
    foreach: None
    initial_lr: 0.012
    lr: 1.2104906088521062e-06
    max_lr: 0.3
    max_momentum: 0.95
    maximize: False
    min_lr: 1.2e-06
    momentum: 0.9499999965031164
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-12-09 11:38:15,196][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: OneCycleLR({'max_lr': 0.3, 'epochs': 60, 'steps_per_epoch': 200, 'anneal_strategy': 'cos', 'cycle_momentum': True, 'base_momentum': 0.85, 'max_momentum': 0.95, 'three_phase': False}, update_scheduler_on=on_num_batch)[0m
[2022-12-09 11:38:15,196][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-12-09 11:38:15,196][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-12-09 11:38:15,197][torch_points3d.trainer][INFO] - Model size = 30911764
creating test loader
NOTE: this flag has not been tested by Feng 
[2022-12-09 11:38:15,198][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1513
Size of [0;95mtest_dataset [0m= 100
Size of [0;95mval_dataset [0m= 1
[0;95mBatch size =[0m 1
[2022-12-09 11:38:22,636][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['test', 'val'] [0m
[2022-12-09 11:38:22,636][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m

 Evaluation of validation set is disabled in trainer.py at line 217 

  0%|          | 0/100 [00:00<?, ?it/s]  0%|          | 0/100 [00:20<?, ?it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  1%|1         | 1/100 [00:20<33:20, 20.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  1%|1         | 1/100 [00:21<33:20, 20.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  2%|2         | 2/100 [00:21<15:18,  9.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  2%|2         | 2/100 [00:23<15:18,  9.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  3%|3         | 3/100 [00:23<09:06,  5.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  3%|3         | 3/100 [00:24<09:06,  5.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  4%|4         | 4/100 [00:24<06:11,  3.87s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  4%|4         | 4/100 [00:25<06:11,  3.87s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  5%|5         | 5/100 [00:25<04:30,  2.85s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  5%|5         | 5/100 [00:26<04:30,  2.85s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  6%|6         | 6/100 [00:26<03:34,  2.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  6%|6         | 6/100 [00:27<03:34,  2.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  7%|7         | 7/100 [00:27<02:40,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  7%|7         | 7/100 [00:28<02:40,  1.73s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  8%|8         | 8/100 [00:28<02:19,  1.52s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  8%|8         | 8/100 [00:29<02:19,  1.52s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  9%|9         | 9/100 [00:29<02:10,  1.43s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]  9%|9         | 9/100 [00:30<02:10,  1.43s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 10%|#         | 10/100 [00:30<02:03,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 10%|#         | 10/100 [00:31<02:03,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 11%|#1        | 11/100 [00:31<01:56,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 11%|#1        | 11/100 [00:32<01:56,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 12%|#2        | 12/100 [00:32<01:50,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 12%|#2        | 12/100 [00:34<01:50,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 13%|#3        | 13/100 [00:34<01:44,  1.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 13%|#3        | 13/100 [00:35<01:44,  1.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 14%|#4        | 14/100 [00:35<01:42,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 14%|#4        | 14/100 [00:36<01:42,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 15%|#5        | 15/100 [00:36<01:38,  1.16s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 15%|#5        | 15/100 [00:37<01:38,  1.16s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 16%|#6        | 16/100 [00:37<01:37,  1.16s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 16%|#6        | 16/100 [00:38<01:37,  1.16s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 17%|#7        | 17/100 [00:38<01:34,  1.14s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 17%|#7        | 17/100 [00:39<01:34,  1.14s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 18%|#8        | 18/100 [00:39<01:32,  1.13s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 18%|#8        | 18/100 [00:40<01:32,  1.13s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 19%|#9        | 19/100 [00:40<01:31,  1.13s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 19%|#9        | 19/100 [00:41<01:31,  1.13s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 20%|##        | 20/100 [00:41<01:20,  1.00s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 20%|##        | 20/100 [00:42<01:20,  1.00s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 21%|##1       | 21/100 [00:42<01:22,  1.04s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 21%|##1       | 21/100 [00:43<01:22,  1.04s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 22%|##2       | 22/100 [00:43<01:14,  1.05it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 22%|##2       | 22/100 [00:44<01:14,  1.05it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 23%|##3       | 23/100 [00:44<01:08,  1.12it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 23%|##3       | 23/100 [00:45<01:08,  1.12it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 24%|##4       | 24/100 [00:45<01:15,  1.00it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 24%|##4       | 24/100 [00:46<01:15,  1.00it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 25%|##5       | 25/100 [00:46<01:20,  1.08s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 25%|##5       | 25/100 [00:48<01:20,  1.08s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 26%|##6       | 26/100 [00:48<01:27,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 26%|##6       | 26/100 [00:49<01:27,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 27%|##7       | 27/100 [00:49<01:27,  1.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 27%|##7       | 27/100 [00:50<01:27,  1.20s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 28%|##8       | 28/100 [00:50<01:33,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 28%|##8       | 28/100 [00:51<01:33,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 29%|##9       | 29/100 [00:51<01:24,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 29%|##9       | 29/100 [00:53<01:24,  1.19s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 30%|###       | 30/100 [00:53<01:37,  1.39s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 30%|###       | 30/100 [00:55<01:37,  1.39s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 31%|###1      | 31/100 [00:55<01:35,  1.38s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 31%|###1      | 31/100 [00:56<01:35,  1.38s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 32%|###2      | 32/100 [00:56<01:37,  1.43s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 32%|###2      | 32/100 [00:58<01:37,  1.43s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 33%|###3      | 33/100 [00:58<01:39,  1.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 33%|###3      | 33/100 [00:59<01:39,  1.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 34%|###4      | 34/100 [00:59<01:39,  1.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 34%|###4      | 34/100 [01:01<01:39,  1.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 35%|###5      | 35/100 [01:01<01:38,  1.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 35%|###5      | 35/100 [01:02<01:38,  1.51s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 36%|###6      | 36/100 [01:02<01:24,  1.32s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 36%|###6      | 36/100 [01:03<01:24,  1.32s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 37%|###7      | 37/100 [01:03<01:24,  1.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 37%|###7      | 37/100 [01:04<01:24,  1.34s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 38%|###8      | 38/100 [01:04<01:24,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 38%|###8      | 38/100 [01:06<01:24,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 39%|###9      | 39/100 [01:06<01:19,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 39%|###9      | 39/100 [01:07<01:19,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 40%|####      | 40/100 [01:07<01:17,  1.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 40%|####      | 40/100 [01:24<01:17,  1.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 41%|####1     | 41/100 [01:24<05:59,  6.09s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 41%|####1     | 41/100 [01:25<05:59,  6.09s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 42%|####2     | 42/100 [01:25<04:26,  4.59s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 42%|####2     | 42/100 [01:26<04:26,  4.59s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 43%|####3     | 43/100 [01:26<03:21,  3.53s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 43%|####3     | 43/100 [01:27<03:21,  3.53s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 44%|####4     | 44/100 [01:27<02:30,  2.69s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 44%|####4     | 44/100 [01:28<02:30,  2.69s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 45%|####5     | 45/100 [01:28<01:55,  2.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 45%|####5     | 45/100 [01:29<01:55,  2.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 46%|####6     | 46/100 [01:29<01:44,  1.93s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 46%|####6     | 46/100 [01:31<01:44,  1.93s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 47%|####6     | 47/100 [01:31<01:35,  1.80s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 47%|####6     | 47/100 [01:32<01:35,  1.80s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 48%|####8     | 48/100 [01:32<01:30,  1.74s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 48%|####8     | 48/100 [01:34<01:30,  1.74s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 49%|####9     | 49/100 [01:34<01:26,  1.70s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 49%|####9     | 49/100 [01:35<01:26,  1.70s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 50%|#####     | 50/100 [01:35<01:19,  1.60s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 50%|#####     | 50/100 [01:37<01:19,  1.60s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 51%|#####1    | 51/100 [01:37<01:19,  1.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 51%|#####1    | 51/100 [01:38<01:19,  1.63s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 52%|#####2    | 52/100 [01:38<01:09,  1.44s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 52%|#####2    | 52/100 [01:39<01:09,  1.44s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 53%|#####3    | 53/100 [01:39<01:02,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 53%|#####3    | 53/100 [01:40<01:02,  1.33s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 54%|#####4    | 54/100 [01:40<00:59,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 54%|#####4    | 54/100 [01:42<00:59,  1.30s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 55%|#####5    | 55/100 [01:42<01:02,  1.40s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 55%|#####5    | 55/100 [01:43<01:02,  1.40s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 56%|#####6    | 56/100 [01:43<01:02,  1.42s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 56%|#####6    | 56/100 [01:44<01:02,  1.42s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 57%|#####6    | 57/100 [01:44<00:54,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 57%|#####6    | 57/100 [01:45<00:54,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 58%|#####8    | 58/100 [01:45<00:49,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 58%|#####8    | 58/100 [01:46<00:49,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 59%|#####8    | 59/100 [01:46<00:44,  1.10s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 59%|#####8    | 59/100 [01:48<00:44,  1.10s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 60%|######    | 60/100 [01:48<00:48,  1.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 60%|######    | 60/100 [01:49<00:48,  1.22s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 61%|######1   | 61/100 [01:49<00:43,  1.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 61%|######1   | 61/100 [01:50<00:43,  1.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 62%|######2   | 62/100 [01:50<00:47,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 62%|######2   | 62/100 [01:52<00:47,  1.26s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 63%|######3   | 63/100 [01:52<00:48,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 63%|######3   | 63/100 [01:56<00:48,  1.31s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 64%|######4   | 64/100 [01:56<01:19,  2.21s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 64%|######4   | 64/100 [01:57<01:19,  2.21s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 65%|######5   | 65/100 [01:57<01:07,  1.92s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 65%|######5   | 65/100 [01:58<01:07,  1.92s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 66%|######6   | 66/100 [01:58<00:53,  1.59s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 66%|######6   | 66/100 [01:59<00:53,  1.59s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 67%|######7   | 67/100 [01:59<00:45,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 67%|######7   | 67/100 [02:00<00:45,  1.37s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 68%|######8   | 68/100 [02:00<00:40,  1.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 68%|######8   | 68/100 [02:01<00:40,  1.27s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 69%|######9   | 69/100 [02:01<00:39,  1.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 69%|######9   | 69/100 [02:06<00:39,  1.29s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 70%|#######   | 70/100 [02:06<01:13,  2.44s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 70%|#######   | 70/100 [02:08<01:13,  2.44s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 71%|#######1  | 71/100 [02:08<01:01,  2.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 71%|#######1  | 71/100 [02:09<01:01,  2.11s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 72%|#######2  | 72/100 [02:09<00:48,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 72%|#######2  | 72/100 [02:10<00:48,  1.75s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 73%|#######3  | 73/100 [02:10<00:41,  1.52s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 73%|#######3  | 73/100 [02:11<00:41,  1.52s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 74%|#######4  | 74/100 [02:11<00:38,  1.50s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 74%|#######4  | 74/100 [02:12<00:38,  1.50s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 75%|#######5  | 75/100 [02:12<00:36,  1.47s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 75%|#######5  | 75/100 [02:14<00:36,  1.47s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 76%|#######6  | 76/100 [02:14<00:33,  1.39s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 76%|#######6  | 76/100 [02:15<00:33,  1.39s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 77%|#######7  | 77/100 [02:15<00:31,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 77%|#######7  | 77/100 [02:16<00:31,  1.36s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 78%|#######8  | 78/100 [02:16<00:29,  1.32s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 78%|#######8  | 78/100 [02:17<00:29,  1.32s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 79%|#######9  | 79/100 [02:17<00:26,  1.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 79%|#######9  | 79/100 [02:18<00:26,  1.28s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 80%|########  | 80/100 [02:18<00:20,  1.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 80%|########  | 80/100 [02:19<00:20,  1.03s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 81%|########1 | 81/100 [02:19<00:22,  1.17s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 81%|########1 | 81/100 [02:20<00:22,  1.17s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 82%|########2 | 82/100 [02:20<00:21,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 82%|########2 | 82/100 [02:21<00:21,  1.18s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 83%|########2 | 83/100 [02:21<00:18,  1.06s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 83%|########2 | 83/100 [02:22<00:18,  1.06s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 84%|########4 | 84/100 [02:22<00:14,  1.11it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 84%|########4 | 84/100 [02:22<00:14,  1.11it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 85%|########5 | 85/100 [02:22<00:12,  1.19it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 85%|########5 | 85/100 [02:23<00:12,  1.19it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 86%|########6 | 86/100 [02:23<00:09,  1.47it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 86%|########6 | 86/100 [02:24<00:09,  1.47it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 87%|########7 | 87/100 [02:24<00:09,  1.40it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 87%|########7 | 87/100 [02:24<00:09,  1.40it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 88%|########8 | 88/100 [02:24<00:06,  1.80it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 88%|########8 | 88/100 [02:24<00:06,  1.80it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 89%|########9 | 89/100 [02:24<00:05,  2.13it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 89%|########9 | 89/100 [02:24<00:05,  2.13it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 90%|######### | 90/100 [02:24<00:04,  2.38it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 90%|######### | 90/100 [02:25<00:04,  2.38it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 91%|#########1| 91/100 [02:25<00:03,  2.33it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 91%|#########1| 91/100 [02:25<00:03,  2.33it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 92%|#########2| 92/100 [02:25<00:03,  2.47it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 92%|#########2| 92/100 [02:26<00:03,  2.47it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 93%|#########3| 93/100 [02:26<00:02,  2.45it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 93%|#########3| 93/100 [02:26<00:02,  2.45it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 94%|#########3| 94/100 [02:26<00:02,  2.60it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 94%|#########3| 94/100 [02:26<00:02,  2.60it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 95%|#########5| 95/100 [02:26<00:01,  3.10it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 95%|#########5| 95/100 [02:26<00:01,  3.10it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 96%|#########6| 96/100 [02:26<00:01,  3.08it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 96%|#########6| 96/100 [02:27<00:01,  3.08it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 97%|#########7| 97/100 [02:27<00:01,  2.99it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 97%|#########7| 97/100 [02:27<00:01,  2.99it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 98%|#########8| 98/100 [02:27<00:00,  3.06it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 98%|#########8| 98/100 [02:27<00:00,  3.06it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 99%|#########9| 99/100 [02:27<00:00,  3.06it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)] 99%|#########9| 99/100 [02:28<00:00,  3.06it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]100%|##########| 100/100 [02:28<00:00,  3.49it/s, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)]100%|##########| 100/100 [02:28<00:00,  1.48s/it, [0;93mtest_acc=0    , test_macc=0    , test_miou=0    [0m)][2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] -     test_acc = 0
[2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] -     test_macc = 0
[2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] -     test_miou = 0
[2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] -     test_miou_per_class = {}
[2022-12-09 11:41:31,058][torch_points3d.metrics.base_tracker][INFO] - ==================================================

