MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-12-09 01:52:24,000][torch_points3d.trainer][INFO] - DEVICE : cuda
wandb: W&B is a tool that helps track and visualize machine learning experiments
wandb: No credentials found.  Run "wandb login" to visualize your metrics
wandb: Tracking run with wandb version 0.8.36
wandb: Wandb version 0.13.6 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Run data is saved locally in wandb/run-20221209_005224-hyrpgfow

Load predicted 2D semantic segmentation labels from directory  submission_masks_25k
initialize train dataset
dataset has already been remapped! skipping this step...
initialize val dataset
initialize test dataset
line 720 scannet.py: split == 'test'
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-12-09 01:52:50,097][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
[2022-12-09 01:52:51,691][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-12-09 01:52:51,691][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-12-09 01:52:51,696][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    base_momentum: 0.85
    dampening: 0
    foreach: None
    initial_lr: 0.012
    lr: 0.01200000000000001
    max_lr: 0.3
    max_momentum: 0.95
    maximize: False
    min_lr: 1.2e-06
    momentum: 0.95
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-12-09 01:52:51,696][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: OneCycleLR({'max_lr': 0.3, 'epochs': 50, 'steps_per_epoch': 252, 'anneal_strategy': 'cos', 'cycle_momentum': True, 'base_momentum': 0.85, 'max_momentum': 0.95, 'three_phase': False}, update_scheduler_on=on_num_batch)[0m
[2022-12-09 01:52:51,696][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-12-09 01:52:51,696][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-12-09 01:52:51,697][torch_points3d.trainer][INFO] - Model size = 30911764
creating test loader
NOTE: this flag has not been tested by Feng 
[2022-12-09 01:52:51,699][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1513
Size of [0;95mtest_dataset [0m= 100
Size of [0;95mval_dataset [0m= 1
[0;95mBatch size =[0m 1
[2022-12-09 01:52:58,992][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['test', 'val'] [0m
[2022-12-09 01:52:58,992][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-12-09 01:53:01,125][torch_points3d.trainer][INFO] - EPOCH 1 / 6
  0% 0/1513 [00:00<?, ?it/s]  0% 0/1513 [00:16<?, ?it/s, [0;92mdata_loading=15.63, iteration=1.181, learning_rate=0.012, mix_3d=0.000, train_acc=0.124, train_loss_cross_entropy=3.54 , train_loss_seg=3.54 , train_macc=0.342, train_miou=0.069[0m)]early break in training!!! 
  0% 0/1513 [00:16<?, ?it/s, [0;92mdata_loading=15.63, iteration=1.181, learning_rate=0.012, mix_3d=0.000, train_acc=0.124, train_loss_cross_entropy=3.54 , train_loss_seg=3.54 , train_macc=0.342, train_miou=0.069[0m)][2022-12-09 01:53:19,504][torch_points3d.trainer][INFO] - Learning rate = 0.012000
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 3.5399656295776367
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 3.5399656295776367
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 0.12421470033203545
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 0.34215207645331225
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 0.06912024829628823
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '0.11', 1: '0.02', 2: '0.00', 3: '0.00', 4: '0.00', 5: '0.00', 6: '0.00', 7: '0.07', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.23', 18: '0.00', 19: '0.96'}
[2022-12-09 01:53:19,505][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:53:19,511][torch_points3d.trainer][INFO] - EPOCH 2 / 6

  0% 0/1513 [00:00<?, ?it/s]  0% 0/1513 [00:40<?, ?it/s, [0;92mdata_loading=39.66, iteration=0.821, learning_rate=0.012, mix_3d=0.014, train_acc=16.85, train_loss_cross_entropy=2.987, train_loss_seg=2.987, train_macc=12.69, train_miou=1.252[0m)]early break in training!!! 
  0% 0/1513 [00:40<?, ?it/s, [0;92mdata_loading=39.66, iteration=0.821, learning_rate=0.012, mix_3d=0.014, train_acc=16.85, train_loss_cross_entropy=2.987, train_loss_seg=2.987, train_macc=12.69, train_miou=1.252[0m)][2022-12-09 01:54:01,590][torch_points3d.trainer][INFO] - Learning rate = 0.012000
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.987154960632324
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.987154960632324
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 16.850602409638554
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 12.693511965317597
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 1.2525121617837693
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '1.45', 1: '0.01', 2: '0.00', 3: '0.00', 4: '0.00', 5: '0.00', 6: '0.00', 7: '0.09', 8: '0.00', 9: '23.50', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-12-09 01:54:01,591][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:01,593][torch_points3d.trainer][INFO] - EPOCH 3 / 6

  0% 0/1513 [00:00<?, ?it/s]  0% 0/1513 [00:26<?, ?it/s, [0;92mdata_loading=25.87, iteration=0.877, learning_rate=0.012, mix_3d=0.015, train_acc=6.131, train_loss_cross_entropy=3.011, train_loss_seg=3.011, train_macc=6.994, train_miou=0.884[0m)]early break in training!!! 
  0% 0/1513 [00:26<?, ?it/s, [0;92mdata_loading=25.87, iteration=0.877, learning_rate=0.012, mix_3d=0.015, train_acc=6.131, train_loss_cross_entropy=3.011, train_loss_seg=3.011, train_macc=6.994, train_miou=0.884[0m)][2022-12-09 01:54:29,912][torch_points3d.trainer][INFO] - Learning rate = 0.012000
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 3.0110557079315186
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 3.0110557079315186
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 6.131318963305107
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 6.994083840326656
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 0.8846795323356885
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '12.42', 1: '0.52', 2: '0.00', 3: '1.30', 4: '0.15', 5: '0.00', 6: '0.00', 7: '0.04', 8: '0.07', 9: '0.04', 10: '0.00', 11: '0.00', 12: '1.80', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '1.34'}
[2022-12-09 01:54:29,913][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:29,924][torch_points3d.trainer][INFO] - EPOCH 4 / 6

  0% 0/1513 [00:00<?, ?it/s]  0% 0/1513 [00:16<?, ?it/s, [0;92mdata_loading=16.22, iteration=0.611, learning_rate=0.012, mix_3d=0.000, train_acc=16.47, train_loss_cross_entropy=2.965, train_loss_seg=2.965, train_macc=16.79, train_miou=1.169[0m)]early break in training!!! 
  0% 0/1513 [00:16<?, ?it/s, [0;92mdata_loading=16.22, iteration=0.611, learning_rate=0.012, mix_3d=0.000, train_acc=16.47, train_loss_cross_entropy=2.965, train_loss_seg=2.965, train_macc=16.79, train_miou=1.169[0m)][2022-12-09 01:54:48,262][torch_points3d.trainer][INFO] - Learning rate = 0.012001
[2022-12-09 01:54:48,262][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.9654605388641357
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.9654605388641357
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 16.47929238654212
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 16.792129529989314
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 1.1698652530956388
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '19.09', 1: '4.08', 2: '0.00', 3: '0.00', 4: '0.02', 5: '0.00', 6: '0.20', 7: '0.00', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-12-09 01:54:48,263][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:54:48,271][torch_points3d.trainer][INFO] - EPOCH 5 / 6

  0% 0/1513 [00:00<?, ?it/s]  0% 0/1513 [00:22<?, ?it/s, [0;92mdata_loading=21.98, iteration=0.518, learning_rate=0.012, mix_3d=0.000, train_acc=54.00, train_loss_cross_entropy=2.351, train_loss_seg=2.351, train_macc=16.54, train_miou=4.720[0m)]early break in training!!! 
  0% 0/1513 [00:22<?, ?it/s, [0;92mdata_loading=21.98, iteration=0.518, learning_rate=0.012, mix_3d=0.000, train_acc=54.00, train_loss_cross_entropy=2.351, train_loss_seg=2.351, train_macc=16.54, train_miou=4.720[0m)][2022-12-09 01:55:12,343][torch_points3d.trainer][INFO] - Learning rate = 0.012001
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.351040840148926
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.351040840148926
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 54.00122174709835
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 16.544428527695683
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 4.720349612418118
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '52.23', 1: '32.74', 2: '0.00', 3: '0.00', 4: '0.00', 5: '0.00', 6: '0.00', 7: '0.00', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-12-09 01:55:12,344][torch_points3d.metrics.base_tracker][INFO] - ==================================================

  0% 0/1 [00:00<?, ?it/s]creating test loader
NOTE: this flag has not been tested by Feng 
  0% 0/1 [00:16<?, ?it/s, [0;93mval_acc=34.65, val_loss_cross_entropy=2.669, val_loss_seg=2.669, val_macc=13.48, val_miou=5.663[0m)]100% 1/1 [00:16<00:00, 16.55s/it, [0;93mval_acc=34.65, val_loss_cross_entropy=2.669, val_loss_seg=2.669, val_macc=13.48, val_miou=5.663[0m)]100% 1/1 [00:16<00:00, 16.55s/it, [0;93mval_acc=34.65, val_loss_cross_entropy=2.669, val_loss_seg=2.669, val_macc=13.48, val_miou=5.663[0m)][2022-12-09 01:55:33,830][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-12-09 01:55:33,831][torch_points3d.metrics.base_tracker][INFO] -     val_loss_seg = 2.6697635650634766
[2022-12-09 01:55:33,831][torch_points3d.metrics.base_tracker][INFO] -     val_loss_cross_entropy = 2.6697635650634766
[2022-12-09 01:55:33,831][torch_points3d.metrics.base_tracker][INFO] -     val_acc = 34.65396248520569
[2022-12-09 01:55:33,831][torch_points3d.metrics.base_tracker][INFO] -     val_macc = 13.487971114925386
[2022-12-09 01:55:33,831][torch_points3d.metrics.base_tracker][INFO] -     val_miou = 5.6630307794858785
[2022-12-09 01:55:33,832][torch_points3d.metrics.base_tracker][INFO] -     val_miou_per_class = {0: '22.16', 1: '45.79', 2: '0.00', 3: '0.00', 4: '0.00', 5: '0.00', 6: '0.00', 7: '0.00', 8: '0.00', 9: '0.00', 10: '0.00', 11: '0.00', 12: '0.00', 13: '0.00', 14: '0.00', 15: '0.00', 16: '0.00', 17: '0.00', 18: '0.00', 19: '0.00'}
[2022-12-09 01:55:33,832][torch_points3d.metrics.base_tracker][INFO] - ==================================================
creating test loader
NOTE: this flag has not been tested by Feng 


wandb: Waiting for W&B process to finish, PID 28431
wandb: Program ended successfully.
wandb: You can sync this run to the cloud by running: 
wandb: wandb sync wandb/run-20221209_005224-hyrpgfow
./scripts/train_superconvergence_benchmark.sh: line 60: training.wandb.log=False: command not found
