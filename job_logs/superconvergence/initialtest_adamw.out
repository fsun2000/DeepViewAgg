MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-11-21 19:03:56,930][torch_points3d.trainer][INFO] - DEVICE : cuda
load_m2f_masks:  True
initialize train dataset
initialize val dataset
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-11-21 19:04:51,902][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
[2022-11-21 19:04:53,807][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-11-21 19:04:53,807][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-11-21 19:04:53,810][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    eps: 1e-08
    foreach: None
    initial_lr: 0.0001
    lr: 0.0001
    maximize: False
    weight_decay: 0.0001
)[0m
[2022-11-21 19:04:53,810][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: ExponentialLR({'gamma': 0.9855}, update_scheduler_on=on_epoch)[0m
[2022-11-21 19:04:53,810][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-11-21 19:04:53,810][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-11-21 19:04:53,811][torch_points3d.trainer][INFO] - Model size = 30911764
[2022-11-21 19:04:53,812][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1201
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 312
[0;95mBatch size =[0m 6
[2022-11-21 19:05:00,957][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-11-21 19:05:00,957][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-11-21 19:05:09,152][torch_points3d.trainer][INFO] - EPOCH 1 / 2
Executing lr range test
[2022-11-21 19:05:09,154][torch_points3d.trainer][INFO] - Initial learning rate = 0.000100
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 0/200 [01:50<?, ?it/s, [0;92mdata_loading=106.4, iteration=4.410, learning_rate=0.000, train_acc=3.967, train_loss_cross_entropy=3.188, train_loss_seg=3.188, train_loss_smooth=3.188, train_macc=4.971, train_miou=1.092[0m)]  0%|          | 1/200 [01:50<6:07:36, 110.84s/it, [0;92mdata_loading=106.4, iteration=4.410, learning_rate=0.000, train_acc=3.967, train_loss_cross_entropy=3.188, train_loss_seg=3.188, train_loss_smooth=3.188, train_macc=4.971, train_miou=1.092[0m)]  0%|          | 1/200 [01:54<6:07:36, 110.84s/it, [0;92mdata_loading=1.512, iteration=2.448, learning_rate=0.000, train_acc=7.083, train_loss_cross_entropy=3.153, train_loss_seg=3.153, train_loss_smooth=3.153, train_macc=5.832, train_miou=1.697[0m)]  1%|1         | 2/200 [01:54<2:38:17, 47.97s/it, [0;92mdata_loading=1.512, iteration=2.448, learning_rate=0.000, train_acc=7.083, train_loss_cross_entropy=3.153, train_loss_seg=3.153, train_loss_smooth=3.153, train_macc=5.832, train_miou=1.697[0m)]   1%|1         | 2/200 [01:58<2:38:17, 47.97s/it, [0;92mdata_loading=0.668, iteration=2.698, learning_rate=0.000, train_acc=11.19, train_loss_cross_entropy=3.102, train_loss_seg=3.102, train_loss_smooth=3.101, train_macc=6.306, train_miou=2.323[0m)]  2%|1         | 3/200 [01:58<1:30:37, 27.60s/it, [0;92mdata_loading=0.668, iteration=2.698, learning_rate=0.000, train_acc=11.19, train_loss_cross_entropy=3.102, train_loss_seg=3.102, train_loss_smooth=3.101, train_macc=6.306, train_miou=2.323[0m)]  2%|1         | 3/200 [02:01<1:30:37, 27.60s/it, [0;92mdata_loading=0.597, iteration=2.532, learning_rate=0.000, train_acc=14.12, train_loss_cross_entropy=3.052, train_loss_seg=3.052, train_loss_smooth=3.050, train_macc=6.825, train_miou=2.695[0m)]  2%|2         | 4/200 [02:01<58:36, 17.94s/it, [0;92mdata_loading=0.597, iteration=2.532, learning_rate=0.000, train_acc=14.12, train_loss_cross_entropy=3.052, train_loss_seg=3.052, train_loss_smooth=3.050, train_macc=6.825, train_miou=2.695[0m)]    2%|2         | 4/200 [02:04<58:36, 17.94s/it, [0;92mdata_loading=0.642, iteration=2.566, learning_rate=0.000, train_acc=17.27, train_loss_cross_entropy=2.988, train_loss_seg=2.988, train_loss_smooth=2.984, train_macc=6.926, train_miou=3.143[0m)]  2%|2         | 5/200 [02:04<41:02, 12.63s/it, [0;92mdata_loading=0.642, iteration=2.566, learning_rate=0.000, train_acc=17.27, train_loss_cross_entropy=2.988, train_loss_seg=2.988, train_loss_smooth=2.984, train_macc=6.926, train_miou=3.143[0m)]  2%|2         | 5/200 [02:07<41:02, 12.63s/it, [0;92mdata_loading=0.802, iteration=2.361, learning_rate=0.000, train_acc=20.38, train_loss_cross_entropy=2.938, train_loss_seg=2.938, train_loss_smooth=2.931, train_macc=7.032, train_miou=3.455[0m)]  3%|3         | 6/200 [02:07<30:25,  9.41s/it, [0;92mdata_loading=0.802, iteration=2.361, learning_rate=0.000, train_acc=20.38, train_loss_cross_entropy=2.938, train_loss_seg=2.938, train_loss_smooth=2.931, train_macc=7.032, train_miou=3.455[0m)]  3%|3         | 6/200 [02:10<30:25,  9.41s/it, [0;92mdata_loading=0.567, iteration=2.572, learning_rate=0.000, train_acc=21.73, train_loss_cross_entropy=2.897, train_loss_seg=2.897, train_loss_smooth=2.889, train_macc=6.992, train_miou=3.621[0m)]  4%|3         | 7/200 [02:10<23:40,  7.36s/it, [0;92mdata_loading=0.567, iteration=2.572, learning_rate=0.000, train_acc=21.73, train_loss_cross_entropy=2.897, train_loss_seg=2.897, train_loss_smooth=2.889, train_macc=6.992, train_miou=3.621[0m)]  4%|3         | 7/200 [02:20<23:40,  7.36s/it, [0;92mdata_loading=6.816, iteration=3.155, learning_rate=0.000, train_acc=22.09, train_loss_cross_entropy=2.880, train_loss_seg=2.880, train_loss_smooth=2.872, train_macc=6.992, train_miou=3.738[0m)]  4%|4         | 8/200 [02:20<26:12,  8.19s/it, [0;92mdata_loading=6.816, iteration=3.155, learning_rate=0.000, train_acc=22.09, train_loss_cross_entropy=2.880, train_loss_seg=2.880, train_loss_smooth=2.872, train_macc=6.992, train_miou=3.738[0m)]  4%|4         | 8/200 [02:24<26:12,  8.19s/it, [0;92mdata_loading=0.896, iteration=2.651, learning_rate=0.000, train_acc=23.52, train_loss_cross_entropy=2.838, train_loss_seg=2.838, train_loss_smooth=2.827, train_macc=7.236, train_miou=3.941[0m)]  4%|4         | 9/200 [02:24<21:27,  6.74s/it, [0;92mdata_loading=0.896, iteration=2.651, learning_rate=0.000, train_acc=23.52, train_loss_cross_entropy=2.838, train_loss_seg=2.838, train_loss_smooth=2.827, train_macc=7.236, train_miou=3.941[0m)]  4%|4         | 9/200 [02:27<21:27,  6.74s/it, [0;92mdata_loading=0.592, iteration=2.453, learning_rate=0.000, train_acc=25.93, train_loss_cross_entropy=2.777, train_loss_seg=2.777, train_loss_smooth=2.761, train_macc=7.542, train_miou=4.249[0m)]  5%|5         | 10/200 [02:27<17:43,  5.60s/it, [0;92mdata_loading=0.592, iteration=2.453, learning_rate=0.000, train_acc=25.93, train_loss_cross_entropy=2.777, train_loss_seg=2.777, train_loss_smooth=2.761, train_macc=7.542, train_miou=4.249[0m)]  5%|5         | 10/200 [02:31<17:43,  5.60s/it, [0;92mdata_loading=1.226, iteration=2.455, learning_rate=0.000, train_acc=27.22, train_loss_cross_entropy=2.740, train_loss_seg=2.740, train_loss_smooth=2.722, train_macc=7.707, train_miou=4.389[0m)]  6%|5         | 11/200 [02:31<15:47,  5.01s/it, [0;92mdata_loading=1.226, iteration=2.455, learning_rate=0.000, train_acc=27.22, train_loss_cross_entropy=2.740, train_loss_seg=2.740, train_loss_smooth=2.722, train_macc=7.707, train_miou=4.389[0m)]  6%|5         | 11/200 [02:34<15:47,  5.01s/it, [0;92mdata_loading=0.756, iteration=2.371, learning_rate=0.000, train_acc=28.47, train_loss_cross_entropy=2.695, train_loss_seg=2.695, train_loss_smooth=2.674, train_macc=7.886, train_miou=4.580[0m)]  6%|6         | 12/200 [02:34<13:54,  4.44s/it, [0;92mdata_loading=0.756, iteration=2.371, learning_rate=0.000, train_acc=28.47, train_loss_cross_entropy=2.695, train_loss_seg=2.695, train_loss_smooth=2.674, train_macc=7.886, train_miou=4.580[0m)]  6%|6         | 12/200 [02:36<13:54,  4.44s/it, [0;92mdata_loading=0.569, iteration=1.820, learning_rate=0.000, train_acc=29.80, train_loss_cross_entropy=2.653, train_loss_seg=2.653, train_loss_smooth=2.628, train_macc=8.087, train_miou=4.743[0m)]  6%|6         | 13/200 [02:36<11:54,  3.82s/it, [0;92mdata_loading=0.569, iteration=1.820, learning_rate=0.000, train_acc=29.80, train_loss_cross_entropy=2.653, train_loss_seg=2.653, train_loss_smooth=2.628, train_macc=8.087, train_miou=4.743[0m)]  6%|6         | 13/200 [02:40<11:54,  3.82s/it, [0;92mdata_loading=0.727, iteration=2.808, learning_rate=0.000, train_acc=31.83, train_loss_cross_entropy=2.620, train_loss_seg=2.620, train_loss_smooth=2.593, train_macc=8.367, train_miou=4.972[0m)]  7%|7         | 14/200 [02:40<11:34,  3.73s/it, [0;92mdata_loading=0.727, iteration=2.808, learning_rate=0.000, train_acc=31.83, train_loss_cross_entropy=2.620, train_loss_seg=2.620, train_loss_smooth=2.593, train_macc=8.367, train_miou=4.972[0m)]  7%|7         | 14/200 [02:43<11:34,  3.73s/it, [0;92mdata_loading=0.919, iteration=2.418, learning_rate=0.000, train_acc=33.39, train_loss_cross_entropy=2.582, train_loss_seg=2.582, train_loss_smooth=2.552, train_macc=8.540, train_miou=5.131[0m)]  8%|7         | 15/200 [02:43<11:08,  3.61s/it, [0;92mdata_loading=0.919, iteration=2.418, learning_rate=0.000, train_acc=33.39, train_loss_cross_entropy=2.582, train_loss_seg=2.582, train_loss_smooth=2.552, train_macc=8.540, train_miou=5.131[0m)]  8%|7         | 15/200 [02:46<11:08,  3.61s/it, [0;92mdata_loading=0.653, iteration=2.524, learning_rate=0.000, train_acc=34.74, train_loss_cross_entropy=2.538, train_loss_seg=2.538, train_loss_smooth=2.503, train_macc=8.617, train_miou=5.283[0m)]  8%|8         | 16/200 [02:46<10:40,  3.48s/it, [0;92mdata_loading=0.653, iteration=2.524, learning_rate=0.000, train_acc=34.74, train_loss_cross_entropy=2.538, train_loss_seg=2.538, train_loss_smooth=2.503, train_macc=8.617, train_miou=5.283[0m)]  8%|8         | 16/200 [02:50<10:40,  3.48s/it, [0;92mdata_loading=0.751, iteration=2.674, learning_rate=0.000, train_acc=35.68, train_loss_cross_entropy=2.512, train_loss_seg=2.512, train_loss_smooth=2.474, train_macc=8.680, train_miou=5.373[0m)]  8%|8         | 17/200 [02:50<10:34,  3.47s/it, [0;92mdata_loading=0.751, iteration=2.674, learning_rate=0.000, train_acc=35.68, train_loss_cross_entropy=2.512, train_loss_seg=2.512, train_loss_smooth=2.474, train_macc=8.680, train_miou=5.373[0m)]  8%|8         | 17/200 [02:52<10:34,  3.47s/it, [0;92mdata_loading=0.561, iteration=1.690, learning_rate=0.000, train_acc=36.49, train_loss_cross_entropy=2.479, train_loss_seg=2.479, train_loss_smooth=2.438, train_macc=8.718, train_miou=5.430[0m)]  9%|9         | 18/200 [02:52<09:24,  3.10s/it, [0;92mdata_loading=0.561, iteration=1.690, learning_rate=0.000, train_acc=36.49, train_loss_cross_entropy=2.479, train_loss_seg=2.479, train_loss_smooth=2.438, train_macc=8.718, train_miou=5.430[0m)]  9%|9         | 18/200 [02:54<09:24,  3.10s/it, [0;92mdata_loading=0.629, iteration=1.607, learning_rate=0.000, train_acc=37.47, train_loss_cross_entropy=2.441, train_loss_seg=2.441, train_loss_smooth=2.395, train_macc=8.745, train_miou=5.520[0m)] 10%|9         | 19/200 [02:54<08:34,  2.84s/it, [0;92mdata_loading=0.629, iteration=1.607, learning_rate=0.000, train_acc=37.47, train_loss_cross_entropy=2.441, train_loss_seg=2.441, train_loss_smooth=2.395, train_macc=8.745, train_miou=5.520[0m)] 10%|9         | 19/200 [02:57<08:34,  2.84s/it, [0;92mdata_loading=0.683, iteration=2.153, learning_rate=0.000, train_acc=38.58, train_loss_cross_entropy=2.398, train_loss_seg=2.398, train_loss_smooth=2.347, train_macc=8.856, train_miou=5.625[0m)] 10%|#         | 20/200 [02:57<08:31,  2.84s/it, [0;92mdata_loading=0.683, iteration=2.153, learning_rate=0.000, train_acc=38.58, train_loss_cross_entropy=2.398, train_loss_seg=2.398, train_loss_smooth=2.347, train_macc=8.856, train_miou=5.625[0m)] 10%|#         | 20/200 [03:00<08:31,  2.84s/it, [0;92mdata_loading=0.640, iteration=2.596, learning_rate=0.000, train_acc=39.29, train_loss_cross_entropy=2.367, train_loss_seg=2.367, train_loss_smooth=2.312, train_macc=8.854, train_miou=5.674[0m)] 10%|#         | 21/200 [03:00<08:49,  2.96s/it, [0;92mdata_loading=0.640, iteration=2.596, learning_rate=0.000, train_acc=39.29, train_loss_cross_entropy=2.367, train_loss_seg=2.367, train_loss_smooth=2.312, train_macc=8.854, train_miou=5.674[0m)] 10%|#         | 21/200 [03:04<08:49,  2.96s/it, [0;92mdata_loading=0.741, iteration=2.771, learning_rate=0.000, train_acc=40.52, train_loss_cross_entropy=2.337, train_loss_seg=2.337, train_loss_smooth=2.278, train_macc=8.945, train_miou=5.748[0m)] 11%|#1        | 22/200 [03:04<09:16,  3.13s/it, [0;92mdata_loading=0.741, iteration=2.771, learning_rate=0.000, train_acc=40.52, train_loss_cross_entropy=2.337, train_loss_seg=2.337, train_loss_smooth=2.278, train_macc=8.945, train_miou=5.748[0m)] 11%|#1        | 22/200 [03:25<09:16,  3.13s/it, [0;92mdata_loading=18.30, iteration=2.896, learning_rate=0.000, train_acc=41.44, train_loss_cross_entropy=2.313, train_loss_seg=2.313, train_loss_smooth=2.252, train_macc=9.016, train_miou=5.777[0m)] 12%|#1        | 23/200 [03:25<25:13,  8.55s/it, [0;92mdata_loading=18.30, iteration=2.896, learning_rate=0.000, train_acc=41.44, train_loss_cross_entropy=2.313, train_loss_seg=2.313, train_loss_smooth=2.252, train_macc=9.016, train_miou=5.777[0m)] 12%|#1        | 23/200 [03:27<25:13,  8.55s/it, [0;92mdata_loading=0.755, iteration=1.628, learning_rate=0.000, train_acc=41.91, train_loss_cross_entropy=2.285, train_loss_seg=2.285, train_loss_smooth=2.220, train_macc=9.055, train_miou=5.812[0m)] 12%|#2        | 24/200 [03:27<19:39,  6.70s/it, [0;92mdata_loading=0.755, iteration=1.628, learning_rate=0.000, train_acc=41.91, train_loss_cross_entropy=2.285, train_loss_seg=2.285, train_loss_smooth=2.220, train_macc=9.055, train_miou=5.812[0m)] 12%|#2        | 24/200 [03:30<19:39,  6.70s/it, [0;92mdata_loading=0.653, iteration=1.696, learning_rate=0.000, train_acc=42.43, train_loss_cross_entropy=2.258, train_loss_seg=2.258, train_loss_smooth=2.19 , train_macc=9.040, train_miou=5.849[0m)] 12%|#2        | 25/200 [03:30<15:43,  5.39s/it, [0;92mdata_loading=0.653, iteration=1.696, learning_rate=0.000, train_acc=42.43, train_loss_cross_entropy=2.258, train_loss_seg=2.258, train_loss_smooth=2.19 , train_macc=9.040, train_miou=5.849[0m)] 12%|#2        | 25/200 [03:33<15:43,  5.39s/it, [0;92mdata_loading=0.569, iteration=2.432, learning_rate=0.000, train_acc=43.05, train_loss_cross_entropy=2.233, train_loss_seg=2.233, train_loss_smooth=2.160, train_macc=9.112, train_miou=5.884[0m)] 13%|#3        | 26/200 [03:33<13:33,  4.68s/it, [0;92mdata_loading=0.569, iteration=2.432, learning_rate=0.000, train_acc=43.05, train_loss_cross_entropy=2.233, train_loss_seg=2.233, train_loss_smooth=2.160, train_macc=9.112, train_miou=5.884[0m)] 13%|#3        | 26/200 [03:36<13:33,  4.68s/it, [0;92mdata_loading=0.726, iteration=2.617, learning_rate=0.000, train_acc=43.00, train_loss_cross_entropy=2.230, train_loss_seg=2.230, train_loss_smooth=2.160, train_macc=9.073, train_miou=5.844[0m)] 14%|#3        | 27/200 [03:36<12:19,  4.28s/it, [0;92mdata_loading=0.726, iteration=2.617, learning_rate=0.000, train_acc=43.00, train_loss_cross_entropy=2.230, train_loss_seg=2.230, train_loss_smooth=2.160, train_macc=9.073, train_miou=5.844[0m)] 14%|#3        | 27/200 [03:39<12:19,  4.28s/it, [0;92mdata_loading=0.683, iteration=2.430, learning_rate=0.000, train_acc=43.50, train_loss_cross_entropy=2.207, train_loss_seg=2.207, train_loss_smooth=2.134, train_macc=9.109, train_miou=5.871[0m)] 14%|#4        | 28/200 [03:39<11:15,  3.93s/it, [0;92mdata_loading=0.683, iteration=2.430, learning_rate=0.000, train_acc=43.50, train_loss_cross_entropy=2.207, train_loss_seg=2.207, train_loss_smooth=2.134, train_macc=9.109, train_miou=5.871[0m)] 14%|#4        | 28/200 [03:42<11:15,  3.93s/it, [0;92mdata_loading=0.689, iteration=2.620, learning_rate=0.000, train_acc=43.89, train_loss_cross_entropy=2.190, train_loss_seg=2.190, train_loss_smooth=2.115, train_macc=9.156, train_miou=5.900[0m)] 14%|#4        | 29/200 [03:42<10:39,  3.74s/it, [0;92mdata_loading=0.689, iteration=2.620, learning_rate=0.000, train_acc=43.89, train_loss_cross_entropy=2.190, train_loss_seg=2.190, train_loss_smooth=2.115, train_macc=9.156, train_miou=5.900[0m)] 14%|#4        | 29/200 [03:45<10:39,  3.74s/it, [0;92mdata_loading=0.756, iteration=1.568, learning_rate=0.000, train_acc=44.23, train_loss_cross_entropy=2.164, train_loss_seg=2.164, train_loss_smooth=2.084, train_macc=9.191, train_miou=5.938[0m)] 15%|#5        | 30/200 [03:45<09:23,  3.32s/it, [0;92mdata_loading=0.756, iteration=1.568, learning_rate=0.000, train_acc=44.23, train_loss_cross_entropy=2.164, train_loss_seg=2.164, train_loss_smooth=2.084, train_macc=9.191, train_miou=5.938[0m)] 15%|#5        | 30/200 [03:48<09:23,  3.32s/it, [0;92mdata_loading=0.716, iteration=2.388, learning_rate=0.000, train_acc=44.79, train_loss_cross_entropy=2.143, train_loss_seg=2.143, train_loss_smooth=2.059, train_macc=9.286, train_miou=6.010[0m)] 16%|#5        | 31/200 [03:48<09:09,  3.25s/it, [0;92mdata_loading=0.716, iteration=2.388, learning_rate=0.000, train_acc=44.79, train_loss_cross_entropy=2.143, train_loss_seg=2.143, train_loss_smooth=2.059, train_macc=9.286, train_miou=6.010[0m)] 16%|#5        | 31/200 [03:51<09:09,  3.25s/it, [0;92mdata_loading=1.258, iteration=2.412, learning_rate=0.000, train_acc=45.25, train_loss_cross_entropy=2.120, train_loss_seg=2.120, train_loss_smooth=2.032, train_macc=9.386, train_miou=6.076[0m)] 16%|#6        | 32/200 [03:51<09:27,  3.38s/it, [0;92mdata_loading=1.258, iteration=2.412, learning_rate=0.000, train_acc=45.25, train_loss_cross_entropy=2.120, train_loss_seg=2.120, train_loss_smooth=2.032, train_macc=9.386, train_miou=6.076[0m)] 16%|#6        | 32/200 [03:55<09:27,  3.38s/it, [0;92mdata_loading=0.551, iteration=2.593, learning_rate=0.000, train_acc=45.97, train_loss_cross_entropy=2.095, train_loss_seg=2.095, train_loss_smooth=2.001, train_macc=9.508, train_miou=6.188[0m)] 16%|#6        | 33/200 [03:55<09:12,  3.31s/it, [0;92mdata_loading=0.551, iteration=2.593, learning_rate=0.000, train_acc=45.97, train_loss_cross_entropy=2.095, train_loss_seg=2.095, train_loss_smooth=2.001, train_macc=9.508, train_miou=6.188[0m)] 16%|#6        | 33/200 [03:58<09:12,  3.31s/it, [0;92mdata_loading=0.629, iteration=2.454, learning_rate=0.000, train_acc=46.15, train_loss_cross_entropy=2.084, train_loss_seg=2.084, train_loss_smooth=1.990, train_macc=9.546, train_miou=6.219[0m)] 17%|#7        | 34/200 [03:58<08:58,  3.24s/it, [0;92mdata_loading=0.629, iteration=2.454, learning_rate=0.000, train_acc=46.15, train_loss_cross_entropy=2.084, train_loss_seg=2.084, train_loss_smooth=1.990, train_macc=9.546, train_miou=6.219[0m)] 17%|#7        | 34/200 [04:01<08:58,  3.24s/it, [0;92mdata_loading=0.626, iteration=2.509, learning_rate=0.000, train_acc=46.67, train_loss_cross_entropy=2.063, train_loss_seg=2.063, train_loss_smooth=1.965, train_macc=9.636, train_miou=6.299[0m)] 18%|#7        | 35/200 [04:01<08:49,  3.21s/it, [0;92mdata_loading=0.626, iteration=2.509, learning_rate=0.000, train_acc=46.67, train_loss_cross_entropy=2.063, train_loss_seg=2.063, train_loss_smooth=1.965, train_macc=9.636, train_miou=6.299[0m)] 18%|#7        | 35/200 [04:04<08:49,  3.21s/it, [0;92mdata_loading=0.609, iteration=2.738, learning_rate=0.000, train_acc=46.90, train_loss_cross_entropy=2.051, train_loss_seg=2.051, train_loss_smooth=1.951, train_macc=9.716, train_miou=6.359[0m)] 18%|#8        | 36/200 [04:04<08:53,  3.25s/it, [0;92mdata_loading=0.609, iteration=2.738, learning_rate=0.000, train_acc=46.90, train_loss_cross_entropy=2.051, train_loss_seg=2.051, train_loss_smooth=1.951, train_macc=9.716, train_miou=6.359[0m)] 18%|#8        | 36/200 [04:07<08:53,  3.25s/it, [0;92mdata_loading=0.653, iteration=2.653, learning_rate=0.000, train_acc=47.32, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.932, train_macc=9.939, train_miou=6.515[0m)] 18%|#8        | 37/200 [04:07<08:52,  3.27s/it, [0;92mdata_loading=0.653, iteration=2.653, learning_rate=0.000, train_acc=47.32, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.932, train_macc=9.939, train_miou=6.515[0m)] 18%|#8        | 37/200 [04:11<08:52,  3.27s/it, [0;92mdata_loading=0.735, iteration=2.851, learning_rate=0.000, train_acc=47.66, train_loss_cross_entropy=2.019, train_loss_seg=2.019, train_loss_smooth=1.914, train_macc=10.16, train_miou=6.672[0m)] 19%|#9        | 38/200 [04:11<09:04,  3.36s/it, [0;92mdata_loading=0.735, iteration=2.851, learning_rate=0.000, train_acc=47.66, train_loss_cross_entropy=2.019, train_loss_seg=2.019, train_loss_smooth=1.914, train_macc=10.16, train_miou=6.672[0m)] 19%|#9        | 38/200 [04:15<09:04,  3.36s/it, [0;92mdata_loading=0.672, iteration=2.991, learning_rate=0.000, train_acc=48.17, train_loss_cross_entropy=2.002, train_loss_seg=2.002, train_loss_smooth=1.894, train_macc=10.35, train_miou=6.819[0m)] 20%|#9        | 39/200 [04:15<09:16,  3.45s/it, [0;92mdata_loading=0.672, iteration=2.991, learning_rate=0.000, train_acc=48.17, train_loss_cross_entropy=2.002, train_loss_seg=2.002, train_loss_smooth=1.894, train_macc=10.35, train_miou=6.819[0m)] 20%|#9        | 39/200 [04:18<09:16,  3.45s/it, [0;92mdata_loading=0.664, iteration=2.716, learning_rate=0.001, train_acc=48.52, train_loss_cross_entropy=1.989, train_loss_seg=1.989, train_loss_smooth=1.878, train_macc=10.56, train_miou=6.976[0m)] 20%|##        | 40/200 [04:18<09:09,  3.43s/it, [0;92mdata_loading=0.664, iteration=2.716, learning_rate=0.001, train_acc=48.52, train_loss_cross_entropy=1.989, train_loss_seg=1.989, train_loss_smooth=1.878, train_macc=10.56, train_miou=6.976[0m)] 20%|##        | 40/200 [04:21<09:09,  3.43s/it, [0;92mdata_loading=0.627, iteration=2.410, learning_rate=0.001, train_acc=48.88, train_loss_cross_entropy=1.976, train_loss_seg=1.976, train_loss_smooth=1.864, train_macc=10.75, train_miou=7.130[0m)] 20%|##        | 41/200 [04:21<08:46,  3.31s/it, [0;92mdata_loading=0.627, iteration=2.410, learning_rate=0.001, train_acc=48.88, train_loss_cross_entropy=1.976, train_loss_seg=1.976, train_loss_smooth=1.864, train_macc=10.75, train_miou=7.130[0m)] 20%|##        | 41/200 [04:25<08:46,  3.31s/it, [0;92mdata_loading=0.865, iteration=2.748, learning_rate=0.001, train_acc=49.55, train_loss_cross_entropy=1.955, train_loss_seg=1.955, train_loss_smooth=1.837, train_macc=11.02, train_miou=7.348[0m)] 21%|##1       | 42/200 [04:25<08:57,  3.40s/it, [0;92mdata_loading=0.865, iteration=2.748, learning_rate=0.001, train_acc=49.55, train_loss_cross_entropy=1.955, train_loss_seg=1.955, train_loss_smooth=1.837, train_macc=11.02, train_miou=7.348[0m)] 21%|##1       | 42/200 [04:28<08:57,  3.40s/it, [0;92mdata_loading=0.731, iteration=2.609, learning_rate=0.001, train_acc=50.14, train_loss_cross_entropy=1.935, train_loss_seg=1.935, train_loss_smooth=1.812, train_macc=11.35, train_miou=7.607[0m)] 22%|##1       | 43/200 [04:28<08:51,  3.39s/it, [0;92mdata_loading=0.731, iteration=2.609, learning_rate=0.001, train_acc=50.14, train_loss_cross_entropy=1.935, train_loss_seg=1.935, train_loss_smooth=1.812, train_macc=11.35, train_miou=7.607[0m)] 22%|##1       | 43/200 [04:31<08:51,  3.39s/it, [0;92mdata_loading=0.821, iteration=1.663, learning_rate=0.001, train_acc=50.47, train_loss_cross_entropy=1.919, train_loss_seg=1.919, train_loss_smooth=1.791, train_macc=11.52, train_miou=7.774[0m)] 22%|##2       | 44/200 [04:31<08:05,  3.12s/it, [0;92mdata_loading=0.821, iteration=1.663, learning_rate=0.001, train_acc=50.47, train_loss_cross_entropy=1.919, train_loss_seg=1.919, train_loss_smooth=1.791, train_macc=11.52, train_miou=7.774[0m)] 22%|##2       | 44/200 [04:34<08:05,  3.12s/it, [0;92mdata_loading=0.497, iteration=2.521, learning_rate=0.001, train_acc=50.59, train_loss_cross_entropy=1.906, train_loss_seg=1.906, train_loss_smooth=1.777, train_macc=11.65, train_miou=7.873[0m)] 22%|##2       | 45/200 [04:34<07:58,  3.09s/it, [0;92mdata_loading=0.497, iteration=2.521, learning_rate=0.001, train_acc=50.59, train_loss_cross_entropy=1.906, train_loss_seg=1.906, train_loss_smooth=1.777, train_macc=11.65, train_miou=7.873[0m)] 22%|##2       | 45/200 [04:36<07:58,  3.09s/it, [0;92mdata_loading=0.605, iteration=2.271, learning_rate=0.001, train_acc=50.96, train_loss_cross_entropy=1.887, train_loss_seg=1.887, train_loss_smooth=1.752, train_macc=11.77, train_miou=7.985[0m)] 23%|##3       | 46/200 [04:36<07:45,  3.02s/it, [0;92mdata_loading=0.605, iteration=2.271, learning_rate=0.001, train_acc=50.96, train_loss_cross_entropy=1.887, train_loss_seg=1.887, train_loss_smooth=1.752, train_macc=11.77, train_miou=7.985[0m)] 23%|##3       | 46/200 [04:39<07:45,  3.02s/it, [0;92mdata_loading=0.608, iteration=2.249, learning_rate=0.001, train_acc=51.39, train_loss_cross_entropy=1.868, train_loss_seg=1.868, train_loss_smooth=1.726, train_macc=11.99, train_miou=8.183[0m)] 24%|##3       | 47/200 [04:39<07:34,  2.97s/it, [0;92mdata_loading=0.608, iteration=2.249, learning_rate=0.001, train_acc=51.39, train_loss_cross_entropy=1.868, train_loss_seg=1.868, train_loss_smooth=1.726, train_macc=11.99, train_miou=8.183[0m)] 24%|##3       | 47/200 [04:43<07:34,  2.97s/it, [0;92mdata_loading=0.678, iteration=2.597, learning_rate=0.001, train_acc=51.68, train_loss_cross_entropy=1.852, train_loss_seg=1.852, train_loss_smooth=1.708, train_macc=12.21, train_miou=8.377[0m)] 24%|##4       | 48/200 [04:43<07:45,  3.06s/it, [0;92mdata_loading=0.678, iteration=2.597, learning_rate=0.001, train_acc=51.68, train_loss_cross_entropy=1.852, train_loss_seg=1.852, train_loss_smooth=1.708, train_macc=12.21, train_miou=8.377[0m)] 24%|##4       | 48/200 [04:48<07:45,  3.06s/it, [0;92mdata_loading=2.434, iteration=2.499, learning_rate=0.001, train_acc=52.24, train_loss_cross_entropy=1.833, train_loss_seg=1.833, train_loss_smooth=1.682, train_macc=12.49, train_miou=8.610[0m)] 24%|##4       | 49/200 [04:48<09:07,  3.63s/it, [0;92mdata_loading=2.434, iteration=2.499, learning_rate=0.001, train_acc=52.24, train_loss_cross_entropy=1.833, train_loss_seg=1.833, train_loss_smooth=1.682, train_macc=12.49, train_miou=8.610[0m)] 24%|##4       | 49/200 [04:51<09:07,  3.63s/it, [0;92mdata_loading=0.608, iteration=2.439, learning_rate=0.001, train_acc=52.49, train_loss_cross_entropy=1.820, train_loss_seg=1.820, train_loss_smooth=1.666, train_macc=12.80, train_miou=8.853[0m)] 25%|##5       | 50/200 [04:51<08:37,  3.45s/it, [0;92mdata_loading=0.608, iteration=2.439, learning_rate=0.001, train_acc=52.49, train_loss_cross_entropy=1.820, train_loss_seg=1.820, train_loss_smooth=1.666, train_macc=12.80, train_miou=8.853[0m)] 25%|##5       | 50/200 [04:52<08:37,  3.45s/it, [0;92mdata_loading=0.467, iteration=1.439, learning_rate=0.001, train_acc=52.69, train_loss_cross_entropy=1.805, train_loss_seg=1.805, train_loss_smooth=1.648, train_macc=12.97, train_miou=9.001[0m)] 26%|##5       | 51/200 [04:52<07:25,  2.99s/it, [0;92mdata_loading=0.467, iteration=1.439, learning_rate=0.001, train_acc=52.69, train_loss_cross_entropy=1.805, train_loss_seg=1.805, train_loss_smooth=1.648, train_macc=12.97, train_miou=9.001[0m)] 26%|##5       | 51/200 [04:56<07:25,  2.99s/it, [0;92mdata_loading=1.140, iteration=2.317, learning_rate=0.001, train_acc=52.83, train_loss_cross_entropy=1.796, train_loss_seg=1.796, train_loss_smooth=1.638, train_macc=13.20, train_miou=9.192[0m)] 26%|##6       | 52/200 [04:56<07:43,  3.13s/it, [0;92mdata_loading=1.140, iteration=2.317, learning_rate=0.001, train_acc=52.83, train_loss_cross_entropy=1.796, train_loss_seg=1.796, train_loss_smooth=1.638, train_macc=13.20, train_miou=9.192[0m)] 26%|##6       | 52/200 [04:59<07:43,  3.13s/it, [0;92mdata_loading=0.733, iteration=2.369, learning_rate=0.002, train_acc=53.47, train_loss_cross_entropy=1.775, train_loss_seg=1.775, train_loss_smooth=1.609, train_macc=13.60, train_miou=9.531[0m)] 26%|##6       | 53/200 [04:59<07:38,  3.12s/it, [0;92mdata_loading=0.733, iteration=2.369, learning_rate=0.002, train_acc=53.47, train_loss_cross_entropy=1.775, train_loss_seg=1.775, train_loss_smooth=1.609, train_macc=13.60, train_miou=9.531[0m)] 26%|##6       | 53/200 [05:02<07:38,  3.12s/it, [0;92mdata_loading=0.734, iteration=2.504, learning_rate=0.002, train_acc=53.52, train_loss_cross_entropy=1.769, train_loss_seg=1.769, train_loss_smooth=1.603, train_macc=13.77, train_miou=9.642[0m)] 27%|##7       | 54/200 [05:02<07:40,  3.16s/it, [0;92mdata_loading=0.734, iteration=2.504, learning_rate=0.002, train_acc=53.52, train_loss_cross_entropy=1.769, train_loss_seg=1.769, train_loss_smooth=1.603, train_macc=13.77, train_miou=9.642[0m)] 27%|##7       | 54/200 [05:05<07:40,  3.16s/it, [0;92mdata_loading=0.667, iteration=2.355, learning_rate=0.002, train_acc=53.82, train_loss_cross_entropy=1.751, train_loss_seg=1.751, train_loss_smooth=1.580, train_macc=13.98, train_miou=9.827[0m)] 28%|##7       | 55/200 [05:05<07:31,  3.12s/it, [0;92mdata_loading=0.667, iteration=2.355, learning_rate=0.002, train_acc=53.82, train_loss_cross_entropy=1.751, train_loss_seg=1.751, train_loss_smooth=1.580, train_macc=13.98, train_miou=9.827[0m)] 28%|##7       | 55/200 [05:09<07:31,  3.12s/it, [0;92mdata_loading=0.700, iteration=2.639, learning_rate=0.002, train_acc=54.25, train_loss_cross_entropy=1.735, train_loss_seg=1.735, train_loss_smooth=1.558, train_macc=14.35, train_miou=10.13[0m)] 28%|##8       | 56/200 [05:09<07:38,  3.18s/it, [0;92mdata_loading=0.700, iteration=2.639, learning_rate=0.002, train_acc=54.25, train_loss_cross_entropy=1.735, train_loss_seg=1.735, train_loss_smooth=1.558, train_macc=14.35, train_miou=10.13[0m)] 28%|##8       | 56/200 [05:12<07:38,  3.18s/it, [0;92mdata_loading=0.653, iteration=2.634, learning_rate=0.002, train_acc=54.61, train_loss_cross_entropy=1.720, train_loss_seg=1.720, train_loss_smooth=1.539, train_macc=14.81, train_miou=10.49[0m)] 28%|##8       | 57/200 [05:12<07:39,  3.22s/it, [0;92mdata_loading=0.653, iteration=2.634, learning_rate=0.002, train_acc=54.61, train_loss_cross_entropy=1.720, train_loss_seg=1.720, train_loss_smooth=1.539, train_macc=14.81, train_miou=10.49[0m)] 28%|##8       | 57/200 [05:16<07:39,  3.22s/it, [0;92mdata_loading=1.161, iteration=2.651, learning_rate=0.002, train_acc=54.99, train_loss_cross_entropy=1.703, train_loss_seg=1.703, train_loss_smooth=1.515, train_macc=15.05, train_miou=10.70[0m)] 29%|##9       | 58/200 [05:16<08:02,  3.39s/it, [0;92mdata_loading=1.161, iteration=2.651, learning_rate=0.002, train_acc=54.99, train_loss_cross_entropy=1.703, train_loss_seg=1.703, train_loss_smooth=1.515, train_macc=15.05, train_miou=10.70[0m)] 29%|##9       | 58/200 [05:19<08:02,  3.39s/it, [0;92mdata_loading=0.742, iteration=2.746, learning_rate=0.002, train_acc=55.35, train_loss_cross_entropy=1.689, train_loss_seg=1.689, train_loss_smooth=1.496, train_macc=15.41, train_miou=10.99[0m)] 30%|##9       | 59/200 [05:19<08:02,  3.42s/it, [0;92mdata_loading=0.742, iteration=2.746, learning_rate=0.002, train_acc=55.35, train_loss_cross_entropy=1.689, train_loss_seg=1.689, train_loss_smooth=1.496, train_macc=15.41, train_miou=10.99[0m)] 30%|##9       | 59/200 [05:22<08:02,  3.42s/it, [0;92mdata_loading=0.669, iteration=2.437, learning_rate=0.003, train_acc=55.59, train_loss_cross_entropy=1.680, train_loss_seg=1.680, train_loss_smooth=1.487, train_macc=15.77, train_miou=11.28[0m)] 30%|###       | 60/200 [05:22<07:45,  3.33s/it, [0;92mdata_loading=0.669, iteration=2.437, learning_rate=0.003, train_acc=55.59, train_loss_cross_entropy=1.680, train_loss_seg=1.680, train_loss_smooth=1.487, train_macc=15.77, train_miou=11.28[0m)] 30%|###       | 60/200 [05:27<07:45,  3.33s/it, [0;92mdata_loading=2.194, iteration=2.774, learning_rate=0.003, train_acc=55.93, train_loss_cross_entropy=1.666, train_loss_seg=1.666, train_loss_smooth=1.468, train_macc=16.15, train_miou=11.58[0m)] 30%|###       | 61/200 [05:27<08:51,  3.82s/it, [0;92mdata_loading=2.194, iteration=2.774, learning_rate=0.003, train_acc=55.93, train_loss_cross_entropy=1.666, train_loss_seg=1.666, train_loss_smooth=1.468, train_macc=16.15, train_miou=11.58[0m)] 30%|###       | 61/200 [05:31<08:51,  3.82s/it, [0;92mdata_loading=0.817, iteration=2.664, learning_rate=0.003, train_acc=56.38, train_loss_cross_entropy=1.651, train_loss_seg=1.651, train_loss_smooth=1.447, train_macc=16.52, train_miou=11.88[0m)] 31%|###1      | 62/200 [05:31<08:33,  3.72s/it, [0;92mdata_loading=0.817, iteration=2.664, learning_rate=0.003, train_acc=56.38, train_loss_cross_entropy=1.651, train_loss_seg=1.651, train_loss_smooth=1.447, train_macc=16.52, train_miou=11.88[0m)] 31%|###1      | 62/200 [05:34<08:33,  3.72s/it, [0;92mdata_loading=0.654, iteration=2.558, learning_rate=0.003, train_acc=56.79, train_loss_cross_entropy=1.636, train_loss_seg=1.636, train_loss_smooth=1.427, train_macc=16.94, train_miou=12.22[0m)] 32%|###1      | 63/200 [05:34<08:08,  3.57s/it, [0;92mdata_loading=0.654, iteration=2.558, learning_rate=0.003, train_acc=56.79, train_loss_cross_entropy=1.636, train_loss_seg=1.636, train_loss_smooth=1.427, train_macc=16.94, train_miou=12.22[0m)] 32%|###1      | 63/200 [05:37<08:08,  3.57s/it, [0;92mdata_loading=0.614, iteration=2.441, learning_rate=0.003, train_acc=57.14, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_loss_smooth=1.407, train_macc=17.28, train_miou=12.49[0m)] 32%|###2      | 64/200 [05:37<07:44,  3.41s/it, [0;92mdata_loading=0.614, iteration=2.441, learning_rate=0.003, train_acc=57.14, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_loss_smooth=1.407, train_macc=17.28, train_miou=12.49[0m)] 32%|###2      | 64/200 [05:40<07:44,  3.41s/it, [0;92mdata_loading=0.522, iteration=2.388, learning_rate=0.004, train_acc=57.48, train_loss_cross_entropy=1.606, train_loss_seg=1.606, train_loss_smooth=1.386, train_macc=17.62, train_miou=12.75[0m)] 32%|###2      | 65/200 [05:40<07:20,  3.26s/it, [0;92mdata_loading=0.522, iteration=2.388, learning_rate=0.004, train_acc=57.48, train_loss_cross_entropy=1.606, train_loss_seg=1.606, train_loss_smooth=1.386, train_macc=17.62, train_miou=12.75[0m)] 32%|###2      | 65/200 [05:44<07:20,  3.26s/it, [0;92mdata_loading=0.624, iteration=2.939, learning_rate=0.004, train_acc=58.07, train_loss_cross_entropy=1.591, train_loss_seg=1.591, train_loss_smooth=1.365, train_macc=18.00, train_miou=13.07[0m)] 33%|###3      | 66/200 [05:44<07:29,  3.35s/it, [0;92mdata_loading=0.624, iteration=2.939, learning_rate=0.004, train_acc=58.07, train_loss_cross_entropy=1.591, train_loss_seg=1.591, train_loss_smooth=1.365, train_macc=18.00, train_miou=13.07[0m)] 33%|###3      | 66/200 [05:47<07:29,  3.35s/it, [0;92mdata_loading=0.765, iteration=2.596, learning_rate=0.004, train_acc=58.47, train_loss_cross_entropy=1.575, train_loss_seg=1.575, train_loss_smooth=1.341, train_macc=18.37, train_miou=13.36[0m)] 34%|###3      | 67/200 [05:47<07:26,  3.36s/it, [0;92mdata_loading=0.765, iteration=2.596, learning_rate=0.004, train_acc=58.47, train_loss_cross_entropy=1.575, train_loss_seg=1.575, train_loss_smooth=1.341, train_macc=18.37, train_miou=13.36[0m)] 34%|###3      | 67/200 [05:50<07:26,  3.36s/it, [0;92mdata_loading=0.605, iteration=2.665, learning_rate=0.004, train_acc=58.74, train_loss_cross_entropy=1.563, train_loss_seg=1.563, train_loss_smooth=1.326, train_macc=18.67, train_miou=13.60[0m)] 34%|###4      | 68/200 [05:50<07:19,  3.33s/it, [0;92mdata_loading=0.605, iteration=2.665, learning_rate=0.004, train_acc=58.74, train_loss_cross_entropy=1.563, train_loss_seg=1.563, train_loss_smooth=1.326, train_macc=18.67, train_miou=13.60[0m)] 34%|###4      | 68/200 [05:54<07:19,  3.33s/it, [0;92mdata_loading=0.691, iteration=2.777, learning_rate=0.005, train_acc=59.06, train_loss_cross_entropy=1.549, train_loss_seg=1.549, train_loss_smooth=1.306, train_macc=18.96, train_miou=13.83[0m)] 34%|###4      | 69/200 [05:54<07:21,  3.37s/it, [0;92mdata_loading=0.691, iteration=2.777, learning_rate=0.005, train_acc=59.06, train_loss_cross_entropy=1.549, train_loss_seg=1.549, train_loss_smooth=1.306, train_macc=18.96, train_miou=13.83[0m)] 34%|###4      | 69/200 [05:57<07:21,  3.37s/it, [0;92mdata_loading=0.810, iteration=2.462, learning_rate=0.005, train_acc=59.33, train_loss_cross_entropy=1.536, train_loss_seg=1.536, train_loss_smooth=1.290, train_macc=19.26, train_miou=14.07[0m)] 35%|###5      | 70/200 [05:57<07:14,  3.34s/it, [0;92mdata_loading=0.810, iteration=2.462, learning_rate=0.005, train_acc=59.33, train_loss_cross_entropy=1.536, train_loss_seg=1.536, train_loss_smooth=1.290, train_macc=19.26, train_miou=14.07[0m)] 35%|###5      | 70/200 [06:00<07:14,  3.34s/it, [0;92mdata_loading=0.697, iteration=2.578, learning_rate=0.005, train_acc=59.69, train_loss_cross_entropy=1.524, train_loss_seg=1.524, train_loss_smooth=1.272, train_macc=19.52, train_miou=14.29[0m)] 36%|###5      | 71/200 [06:00<07:08,  3.32s/it, [0;92mdata_loading=0.697, iteration=2.578, learning_rate=0.005, train_acc=59.69, train_loss_cross_entropy=1.524, train_loss_seg=1.524, train_loss_smooth=1.272, train_macc=19.52, train_miou=14.29[0m)] 36%|###5      | 71/200 [06:03<07:08,  3.32s/it, [0;92mdata_loading=0.617, iteration=2.373, learning_rate=0.006, train_acc=59.96, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.259, train_macc=19.98, train_miou=14.66[0m)] 36%|###6      | 72/200 [06:03<06:52,  3.22s/it, [0;92mdata_loading=0.617, iteration=2.373, learning_rate=0.006, train_acc=59.96, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.259, train_macc=19.98, train_miou=14.66[0m)] 36%|###6      | 72/200 [06:07<06:52,  3.22s/it, [0;92mdata_loading=0.742, iteration=2.585, learning_rate=0.006, train_acc=60.27, train_loss_cross_entropy=1.502, train_loss_seg=1.502, train_loss_smooth=1.245, train_macc=20.48, train_miou=15.05[0m)] 36%|###6      | 73/200 [06:07<06:53,  3.25s/it, [0;92mdata_loading=0.742, iteration=2.585, learning_rate=0.006, train_acc=60.27, train_loss_cross_entropy=1.502, train_loss_seg=1.502, train_loss_smooth=1.245, train_macc=20.48, train_miou=15.05[0m)] 36%|###6      | 73/200 [06:09<06:53,  3.25s/it, [0;92mdata_loading=0.634, iteration=1.848, learning_rate=0.006, train_acc=60.45, train_loss_cross_entropy=1.495, train_loss_seg=1.495, train_loss_smooth=1.237, train_macc=20.70, train_miou=15.23[0m)] 37%|###7      | 74/200 [06:09<06:20,  3.02s/it, [0;92mdata_loading=0.634, iteration=1.848, learning_rate=0.006, train_acc=60.45, train_loss_cross_entropy=1.495, train_loss_seg=1.495, train_loss_smooth=1.237, train_macc=20.70, train_miou=15.23[0m)] 37%|###7      | 74/200 [06:23<06:20,  3.02s/it, [0;92mdata_loading=11.65, iteration=2.845, learning_rate=0.007, train_acc=60.95, train_loss_cross_entropy=1.482, train_loss_seg=1.482, train_loss_smooth=1.22 , train_macc=21.18, train_miou=15.62[0m)] 38%|###7      | 75/200 [06:23<13:28,  6.47s/it, [0;92mdata_loading=11.65, iteration=2.845, learning_rate=0.007, train_acc=60.95, train_loss_cross_entropy=1.482, train_loss_seg=1.482, train_loss_smooth=1.22 , train_macc=21.18, train_miou=15.62[0m)] 38%|###7      | 75/200 [06:27<13:28,  6.47s/it, [0;92mdata_loading=0.774, iteration=2.518, learning_rate=0.007, train_acc=61.28, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.203, train_macc=21.44, train_miou=15.83[0m)] 38%|###8      | 76/200 [06:27<11:23,  5.52s/it, [0;92mdata_loading=0.774, iteration=2.518, learning_rate=0.007, train_acc=61.28, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.203, train_macc=21.44, train_miou=15.83[0m)] 38%|###8      | 76/200 [06:32<11:23,  5.52s/it, [0;92mdata_loading=2.794, iteration=2.808, learning_rate=0.008, train_acc=61.61, train_loss_cross_entropy=1.460, train_loss_seg=1.460, train_loss_smooth=1.190, train_macc=21.83, train_miou=16.15[0m)] 38%|###8      | 77/200 [06:32<11:21,  5.54s/it, [0;92mdata_loading=2.794, iteration=2.808, learning_rate=0.008, train_acc=61.61, train_loss_cross_entropy=1.460, train_loss_seg=1.460, train_loss_smooth=1.190, train_macc=21.83, train_miou=16.15[0m)] 38%|###8      | 77/200 [06:35<11:21,  5.54s/it, [0;92mdata_loading=0.647, iteration=1.539, learning_rate=0.008, train_acc=61.71, train_loss_cross_entropy=1.453, train_loss_seg=1.453, train_loss_smooth=1.183, train_macc=21.90, train_miou=16.21[0m)] 39%|###9      | 78/200 [06:35<09:13,  4.53s/it, [0;92mdata_loading=0.647, iteration=1.539, learning_rate=0.008, train_acc=61.71, train_loss_cross_entropy=1.453, train_loss_seg=1.453, train_loss_smooth=1.183, train_macc=21.90, train_miou=16.21[0m)] 39%|###9      | 78/200 [06:38<09:13,  4.53s/it, [0;92mdata_loading=0.737, iteration=2.628, learning_rate=0.009, train_acc=62.02, train_loss_cross_entropy=1.443, train_loss_seg=1.443, train_loss_smooth=1.169, train_macc=22.26, train_miou=16.50[0m)] 40%|###9      | 79/200 [06:38<08:26,  4.18s/it, [0;92mdata_loading=0.737, iteration=2.628, learning_rate=0.009, train_acc=62.02, train_loss_cross_entropy=1.443, train_loss_seg=1.443, train_loss_smooth=1.169, train_macc=22.26, train_miou=16.50[0m)] 40%|###9      | 79/200 [06:41<08:26,  4.18s/it, [0;92mdata_loading=0.911, iteration=2.604, learning_rate=0.009, train_acc=62.26, train_loss_cross_entropy=1.433, train_loss_seg=1.433, train_loss_smooth=1.158, train_macc=22.53, train_miou=16.71[0m)] 40%|####      | 80/200 [06:41<07:58,  3.98s/it, [0;92mdata_loading=0.911, iteration=2.604, learning_rate=0.009, train_acc=62.26, train_loss_cross_entropy=1.433, train_loss_seg=1.433, train_loss_smooth=1.158, train_macc=22.53, train_miou=16.71[0m)] 40%|####      | 80/200 [06:44<07:58,  3.98s/it, [0;92mdata_loading=0.667, iteration=1.647, learning_rate=0.010, train_acc=62.38, train_loss_cross_entropy=1.424, train_loss_seg=1.424, train_loss_smooth=1.147, train_macc=22.66, train_miou=16.80[0m)] 40%|####      | 81/200 [06:44<06:54,  3.48s/it, [0;92mdata_loading=0.667, iteration=1.647, learning_rate=0.010, train_acc=62.38, train_loss_cross_entropy=1.424, train_loss_seg=1.424, train_loss_smooth=1.147, train_macc=22.66, train_miou=16.80[0m)] 40%|####      | 81/200 [06:47<06:54,  3.48s/it, [0;92mdata_loading=0.796, iteration=2.31 , learning_rate=0.010, train_acc=62.60, train_loss_cross_entropy=1.417, train_loss_seg=1.417, train_loss_smooth=1.138, train_macc=22.95, train_miou=17.03[0m)] 41%|####1     | 82/200 [06:47<06:37,  3.37s/it, [0;92mdata_loading=0.796, iteration=2.31 , learning_rate=0.010, train_acc=62.60, train_loss_cross_entropy=1.417, train_loss_seg=1.417, train_loss_smooth=1.138, train_macc=22.95, train_miou=17.03[0m)] 41%|####1     | 82/200 [06:49<06:37,  3.37s/it, [0;92mdata_loading=0.690, iteration=1.732, learning_rate=0.011, train_acc=62.73, train_loss_cross_entropy=1.409, train_loss_seg=1.409, train_loss_smooth=1.128, train_macc=23.07, train_miou=17.12[0m)] 42%|####1     | 83/200 [06:49<06:01,  3.09s/it, [0;92mdata_loading=0.690, iteration=1.732, learning_rate=0.011, train_acc=62.73, train_loss_cross_entropy=1.409, train_loss_seg=1.409, train_loss_smooth=1.128, train_macc=23.07, train_miou=17.12[0m)] 42%|####1     | 83/200 [06:56<06:01,  3.09s/it, [0;92mdata_loading=3.867, iteration=2.637, learning_rate=0.012, train_acc=62.88, train_loss_cross_entropy=1.403, train_loss_seg=1.403, train_loss_smooth=1.123, train_macc=23.44, train_miou=17.39[0m)] 42%|####2     | 84/200 [06:56<07:56,  4.11s/it, [0;92mdata_loading=3.867, iteration=2.637, learning_rate=0.012, train_acc=62.88, train_loss_cross_entropy=1.403, train_loss_seg=1.403, train_loss_smooth=1.123, train_macc=23.44, train_miou=17.39[0m)] 42%|####2     | 84/200 [06:59<07:56,  4.11s/it, [0;92mdata_loading=0.666, iteration=2.439, learning_rate=0.012, train_acc=63.05, train_loss_cross_entropy=1.395, train_loss_seg=1.395, train_loss_smooth=1.114, train_macc=23.70, train_miou=17.60[0m)] 42%|####2     | 85/200 [06:59<07:18,  3.81s/it, [0;92mdata_loading=0.666, iteration=2.439, learning_rate=0.012, train_acc=63.05, train_loss_cross_entropy=1.395, train_loss_seg=1.395, train_loss_smooth=1.114, train_macc=23.70, train_miou=17.60[0m)] 42%|####2     | 85/200 [07:02<07:18,  3.81s/it, [0;92mdata_loading=0.720, iteration=2.772, learning_rate=0.013, train_acc=63.28, train_loss_cross_entropy=1.386, train_loss_seg=1.386, train_loss_smooth=1.102, train_macc=24.02, train_miou=17.84[0m)] 43%|####3     | 86/200 [07:02<07:03,  3.71s/it, [0;92mdata_loading=0.720, iteration=2.772, learning_rate=0.013, train_acc=63.28, train_loss_cross_entropy=1.386, train_loss_seg=1.386, train_loss_smooth=1.102, train_macc=24.02, train_miou=17.84[0m)] 43%|####3     | 86/200 [07:05<07:03,  3.71s/it, [0;92mdata_loading=0.599, iteration=2.409, learning_rate=0.014, train_acc=63.46, train_loss_cross_entropy=1.379, train_loss_seg=1.379, train_loss_smooth=1.093, train_macc=24.27, train_miou=18.05[0m)] 44%|####3     | 87/200 [07:05<06:35,  3.50s/it, [0;92mdata_loading=0.599, iteration=2.409, learning_rate=0.014, train_acc=63.46, train_loss_cross_entropy=1.379, train_loss_seg=1.379, train_loss_smooth=1.093, train_macc=24.27, train_miou=18.05[0m)] 44%|####3     | 87/200 [07:09<06:35,  3.50s/it, [0;92mdata_loading=1.481, iteration=2.433, learning_rate=0.015, train_acc=63.66, train_loss_cross_entropy=1.371, train_loss_seg=1.371, train_loss_smooth=1.085, train_macc=24.46, train_miou=18.21[0m)] 44%|####4     | 88/200 [07:09<06:46,  3.63s/it, [0;92mdata_loading=1.481, iteration=2.433, learning_rate=0.015, train_acc=63.66, train_loss_cross_entropy=1.371, train_loss_seg=1.371, train_loss_smooth=1.085, train_macc=24.46, train_miou=18.21[0m)] 44%|####4     | 88/200 [07:13<06:46,  3.63s/it, [0;92mdata_loading=0.619, iteration=3.060, learning_rate=0.016, train_acc=64.00, train_loss_cross_entropy=1.364, train_loss_seg=1.364, train_loss_smooth=1.076, train_macc=24.94, train_miou=18.60[0m)] 44%|####4     | 89/200 [07:13<06:44,  3.64s/it, [0;92mdata_loading=0.619, iteration=3.060, learning_rate=0.016, train_acc=64.00, train_loss_cross_entropy=1.364, train_loss_seg=1.364, train_loss_smooth=1.076, train_macc=24.94, train_miou=18.60[0m)] 44%|####4     | 89/200 [07:16<06:44,  3.64s/it, [0;92mdata_loading=0.755, iteration=2.696, learning_rate=0.017, train_acc=64.30, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.063, train_macc=25.30, train_miou=18.90[0m)] 45%|####5     | 90/200 [07:16<06:34,  3.59s/it, [0;92mdata_loading=0.755, iteration=2.696, learning_rate=0.017, train_acc=64.30, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.063, train_macc=25.30, train_miou=18.90[0m)] 45%|####5     | 90/200 [07:20<06:34,  3.59s/it, [0;92mdata_loading=0.627, iteration=2.759, learning_rate=0.018, train_acc=64.63, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_loss_smooth=1.052, train_macc=25.67, train_miou=19.21[0m)] 46%|####5     | 91/200 [07:20<06:24,  3.53s/it, [0;92mdata_loading=0.627, iteration=2.759, learning_rate=0.018, train_acc=64.63, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_loss_smooth=1.052, train_macc=25.67, train_miou=19.21[0m)] 46%|####5     | 91/200 [07:23<06:24,  3.53s/it, [0;92mdata_loading=0.712, iteration=2.804, learning_rate=0.019, train_acc=64.81, train_loss_cross_entropy=1.341, train_loss_seg=1.341, train_loss_smooth=1.046, train_macc=25.91, train_miou=19.38[0m)] 46%|####6     | 92/200 [07:23<06:20,  3.52s/it, [0;92mdata_loading=0.712, iteration=2.804, learning_rate=0.019, train_acc=64.81, train_loss_cross_entropy=1.341, train_loss_seg=1.341, train_loss_smooth=1.046, train_macc=25.91, train_miou=19.38[0m)] 46%|####6     | 92/200 [07:26<06:20,  3.52s/it, [0;92mdata_loading=0.791, iteration=1.847, learning_rate=0.020, train_acc=64.93, train_loss_cross_entropy=1.334, train_loss_seg=1.334, train_loss_smooth=1.039, train_macc=26.04, train_miou=19.48[0m)] 46%|####6     | 93/200 [07:26<05:48,  3.26s/it, [0;92mdata_loading=0.791, iteration=1.847, learning_rate=0.020, train_acc=64.93, train_loss_cross_entropy=1.334, train_loss_seg=1.334, train_loss_smooth=1.039, train_macc=26.04, train_miou=19.48[0m)] 46%|####6     | 93/200 [07:29<05:48,  3.26s/it, [0;92mdata_loading=0.645, iteration=2.402, learning_rate=0.021, train_acc=65.09, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.030, train_macc=26.26, train_miou=19.65[0m)] 47%|####6     | 94/200 [07:29<05:38,  3.19s/it, [0;92mdata_loading=0.645, iteration=2.402, learning_rate=0.021, train_acc=65.09, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.030, train_macc=26.26, train_miou=19.65[0m)] 47%|####6     | 94/200 [07:38<05:38,  3.19s/it, [0;92mdata_loading=5.624, iteration=3.001, learning_rate=0.023, train_acc=65.31, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_loss_smooth=1.025, train_macc=26.52, train_miou=19.87[0m)] 48%|####7     | 95/200 [07:38<08:26,  4.82s/it, [0;92mdata_loading=5.624, iteration=3.001, learning_rate=0.023, train_acc=65.31, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_loss_smooth=1.025, train_macc=26.52, train_miou=19.87[0m)] 48%|####7     | 95/200 [07:41<08:26,  4.82s/it, [0;92mdata_loading=1.237, iteration=2.486, learning_rate=0.024, train_acc=65.40, train_loss_cross_entropy=1.319, train_loss_seg=1.319, train_loss_smooth=1.026, train_macc=26.65, train_miou=19.97[0m)] 48%|####8     | 96/200 [07:41<07:47,  4.49s/it, [0;92mdata_loading=1.237, iteration=2.486, learning_rate=0.024, train_acc=65.40, train_loss_cross_entropy=1.319, train_loss_seg=1.319, train_loss_smooth=1.026, train_macc=26.65, train_miou=19.97[0m)] 48%|####8     | 96/200 [07:52<07:47,  4.49s/it, [0;92mdata_loading=8.009, iteration=2.540, learning_rate=0.025, train_acc=65.57, train_loss_cross_entropy=1.313, train_loss_seg=1.313, train_loss_smooth=1.020, train_macc=26.92, train_miou=20.21[0m)] 48%|####8     | 97/200 [07:52<10:50,  6.31s/it, [0;92mdata_loading=8.009, iteration=2.540, learning_rate=0.025, train_acc=65.57, train_loss_cross_entropy=1.313, train_loss_seg=1.313, train_loss_smooth=1.020, train_macc=26.92, train_miou=20.21[0m)] 48%|####8     | 97/200 [07:55<10:50,  6.31s/it, [0;92mdata_loading=0.470, iteration=2.371, learning_rate=0.027, train_acc=65.73, train_loss_cross_entropy=1.308, train_loss_seg=1.308, train_loss_smooth=1.015, train_macc=27.03, train_miou=20.29[0m)] 49%|####9     | 98/200 [07:55<08:57,  5.27s/it, [0;92mdata_loading=0.470, iteration=2.371, learning_rate=0.027, train_acc=65.73, train_loss_cross_entropy=1.308, train_loss_seg=1.308, train_loss_smooth=1.015, train_macc=27.03, train_miou=20.29[0m)] 49%|####9     | 98/200 [07:58<08:57,  5.27s/it, [0;92mdata_loading=0.744, iteration=2.439, learning_rate=0.029, train_acc=65.97, train_loss_cross_entropy=1.299, train_loss_seg=1.299, train_loss_smooth=1.001, train_macc=27.25, train_miou=20.48[0m)] 50%|####9     | 99/200 [07:58<07:49,  4.64s/it, [0;92mdata_loading=0.744, iteration=2.439, learning_rate=0.029, train_acc=65.97, train_loss_cross_entropy=1.299, train_loss_seg=1.299, train_loss_smooth=1.001, train_macc=27.25, train_miou=20.48[0m)] 50%|####9     | 99/200 [08:01<07:49,  4.64s/it, [0;92mdata_loading=0.663, iteration=2.469, learning_rate=0.030, train_acc=66.14, train_loss_cross_entropy=1.291, train_loss_seg=1.291, train_loss_smooth=0.989, train_macc=27.37, train_miou=20.59[0m)] 50%|#####     | 100/200 [08:01<06:59,  4.19s/it, [0;92mdata_loading=0.663, iteration=2.469, learning_rate=0.030, train_acc=66.14, train_loss_cross_entropy=1.291, train_loss_seg=1.291, train_loss_smooth=0.989, train_macc=27.37, train_miou=20.59[0m)] 50%|#####     | 100/200 [08:04<06:59,  4.19s/it, [0;92mdata_loading=0.651, iteration=2.535, learning_rate=0.032, train_acc=66.24, train_loss_cross_entropy=1.286, train_loss_seg=1.286, train_loss_smooth=0.985, train_macc=27.47, train_miou=20.68[0m)] 50%|#####     | 101/200 [08:04<06:25,  3.89s/it, [0;92mdata_loading=0.651, iteration=2.535, learning_rate=0.032, train_acc=66.24, train_loss_cross_entropy=1.286, train_loss_seg=1.286, train_loss_smooth=0.985, train_macc=27.47, train_miou=20.68[0m)] 50%|#####     | 101/200 [08:08<06:25,  3.89s/it, [0;92mdata_loading=0.812, iteration=2.622, learning_rate=0.034, train_acc=66.44, train_loss_cross_entropy=1.279, train_loss_seg=1.279, train_loss_smooth=0.976, train_macc=27.68, train_miou=20.87[0m)] 51%|#####1    | 102/200 [08:08<06:07,  3.75s/it, [0;92mdata_loading=0.812, iteration=2.622, learning_rate=0.034, train_acc=66.44, train_loss_cross_entropy=1.279, train_loss_seg=1.279, train_loss_smooth=0.976, train_macc=27.68, train_miou=20.87[0m)] 51%|#####1    | 102/200 [08:11<06:07,  3.75s/it, [0;92mdata_loading=0.749, iteration=2.618, learning_rate=0.036, train_acc=66.63, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_loss_smooth=0.968, train_macc=27.96, train_miou=21.12[0m)] 52%|#####1    | 103/200 [08:11<05:52,  3.64s/it, [0;92mdata_loading=0.749, iteration=2.618, learning_rate=0.036, train_acc=66.63, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_loss_smooth=0.968, train_macc=27.96, train_miou=21.12[0m)] 52%|#####1    | 103/200 [08:14<05:52,  3.64s/it, [0;92mdata_loading=0.662, iteration=2.643, learning_rate=0.038, train_acc=66.79, train_loss_cross_entropy=1.266, train_loss_seg=1.266, train_loss_smooth=0.958, train_macc=28.13, train_miou=21.26[0m)] 52%|#####2    | 104/200 [08:14<05:39,  3.54s/it, [0;92mdata_loading=0.662, iteration=2.643, learning_rate=0.038, train_acc=66.79, train_loss_cross_entropy=1.266, train_loss_seg=1.266, train_loss_smooth=0.958, train_macc=28.13, train_miou=21.26[0m)] 52%|#####2    | 104/200 [08:17<05:39,  3.54s/it, [0;92mdata_loading=0.820, iteration=1.711, learning_rate=0.041, train_acc=66.89, train_loss_cross_entropy=1.261, train_loss_seg=1.261, train_loss_smooth=0.952, train_macc=28.24, train_miou=21.35[0m)] 52%|#####2    | 105/200 [08:17<05:07,  3.24s/it, [0;92mdata_loading=0.820, iteration=1.711, learning_rate=0.041, train_acc=66.89, train_loss_cross_entropy=1.261, train_loss_seg=1.261, train_loss_smooth=0.952, train_macc=28.24, train_miou=21.35[0m)] 52%|#####2    | 105/200 [08:39<05:07,  3.24s/it, [0;92mdata_loading=19.24, iteration=2.530, learning_rate=0.043, train_acc=66.99, train_loss_cross_entropy=1.257, train_loss_seg=1.257, train_loss_smooth=0.951, train_macc=28.40, train_miou=21.46[0m)] 53%|#####3    | 106/200 [08:39<13:47,  8.80s/it, [0;92mdata_loading=19.24, iteration=2.530, learning_rate=0.043, train_acc=66.99, train_loss_cross_entropy=1.257, train_loss_seg=1.257, train_loss_smooth=0.951, train_macc=28.40, train_miou=21.46[0m)] 53%|#####3    | 106/200 [08:42<13:47,  8.80s/it, [0;92mdata_loading=0.605, iteration=2.620, learning_rate=0.046, train_acc=67.11, train_loss_cross_entropy=1.255, train_loss_seg=1.255, train_loss_smooth=0.953, train_macc=28.61, train_miou=21.63[0m)] 54%|#####3    | 107/200 [08:42<11:02,  7.13s/it, [0;92mdata_loading=0.605, iteration=2.620, learning_rate=0.046, train_acc=67.11, train_loss_cross_entropy=1.255, train_loss_seg=1.255, train_loss_smooth=0.953, train_macc=28.61, train_miou=21.63[0m)] 54%|#####3    | 107/200 [08:45<11:02,  7.13s/it, [0;92mdata_loading=0.623, iteration=2.251, learning_rate=0.048, train_acc=67.27, train_loss_cross_entropy=1.248, train_loss_seg=1.248, train_loss_smooth=0.943, train_macc=28.76, train_miou=21.74[0m)] 54%|#####4    | 108/200 [08:45<08:58,  5.85s/it, [0;92mdata_loading=0.623, iteration=2.251, learning_rate=0.048, train_acc=67.27, train_loss_cross_entropy=1.248, train_loss_seg=1.248, train_loss_smooth=0.943, train_macc=28.76, train_miou=21.74[0m)] 54%|#####4    | 108/200 [08:48<08:58,  5.85s/it, [0;92mdata_loading=0.684, iteration=2.517, learning_rate=0.051, train_acc=67.47, train_loss_cross_entropy=1.242, train_loss_seg=1.242, train_loss_smooth=0.935, train_macc=29.00, train_miou=21.95[0m)] 55%|#####4    | 109/200 [08:48<07:40,  5.06s/it, [0;92mdata_loading=0.684, iteration=2.517, learning_rate=0.051, train_acc=67.47, train_loss_cross_entropy=1.242, train_loss_seg=1.242, train_loss_smooth=0.935, train_macc=29.00, train_miou=21.95[0m)] 55%|#####4    | 109/200 [08:51<07:40,  5.06s/it, [0;92mdata_loading=0.628, iteration=2.715, learning_rate=0.054, train_acc=67.58, train_loss_cross_entropy=1.239, train_loss_seg=1.239, train_loss_smooth=0.935, train_macc=29.23, train_miou=22.14[0m)] 55%|#####5    | 110/200 [08:51<06:48,  4.54s/it, [0;92mdata_loading=0.628, iteration=2.715, learning_rate=0.054, train_acc=67.58, train_loss_cross_entropy=1.239, train_loss_seg=1.239, train_loss_smooth=0.935, train_macc=29.23, train_miou=22.14[0m)] 55%|#####5    | 110/200 [08:54<06:48,  4.54s/it, [0;92mdata_loading=0.595, iteration=2.445, learning_rate=0.058, train_acc=67.75, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_loss_smooth=0.929, train_macc=29.43, train_miou=22.30[0m)] 56%|#####5    | 111/200 [08:54<06:04,  4.09s/it, [0;92mdata_loading=0.595, iteration=2.445, learning_rate=0.058, train_acc=67.75, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_loss_smooth=0.929, train_macc=29.43, train_miou=22.30[0m)] 56%|#####5    | 111/200 [08:58<06:04,  4.09s/it, [0;92mdata_loading=0.742, iteration=2.424, learning_rate=0.061, train_acc=67.87, train_loss_cross_entropy=1.229, train_loss_seg=1.229, train_loss_smooth=0.924, train_macc=29.73, train_miou=22.54[0m)] 56%|#####6    | 112/200 [08:58<05:35,  3.81s/it, [0;92mdata_loading=0.742, iteration=2.424, learning_rate=0.061, train_acc=67.87, train_loss_cross_entropy=1.229, train_loss_seg=1.229, train_loss_smooth=0.924, train_macc=29.73, train_miou=22.54[0m)] 56%|#####6    | 112/200 [09:01<05:35,  3.81s/it, [0;92mdata_loading=0.711, iteration=2.528, learning_rate=0.065, train_acc=67.94, train_loss_cross_entropy=1.227, train_loss_seg=1.227, train_loss_smooth=0.924, train_macc=29.98, train_miou=22.73[0m)] 56%|#####6    | 113/200 [09:01<05:16,  3.64s/it, [0;92mdata_loading=0.711, iteration=2.528, learning_rate=0.065, train_acc=67.94, train_loss_cross_entropy=1.227, train_loss_seg=1.227, train_loss_smooth=0.924, train_macc=29.98, train_miou=22.73[0m)] 56%|#####6    | 113/200 [09:04<05:16,  3.64s/it, [0;92mdata_loading=0.819, iteration=2.825, learning_rate=0.069, train_acc=68.01, train_loss_cross_entropy=1.223, train_loss_seg=1.223, train_loss_smooth=0.922, train_macc=30.17, train_miou=22.85[0m)] 57%|#####6    | 114/200 [09:04<05:13,  3.64s/it, [0;92mdata_loading=0.819, iteration=2.825, learning_rate=0.069, train_acc=68.01, train_loss_cross_entropy=1.223, train_loss_seg=1.223, train_loss_smooth=0.922, train_macc=30.17, train_miou=22.85[0m)] 57%|#####6    | 114/200 [09:08<05:13,  3.64s/it, [0;92mdata_loading=1.098, iteration=2.667, learning_rate=0.073, train_acc=68.14, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_loss_smooth=0.917, train_macc=30.53, train_miou=23.10[0m)] 57%|#####7    | 115/200 [09:08<05:12,  3.68s/it, [0;92mdata_loading=1.098, iteration=2.667, learning_rate=0.073, train_acc=68.14, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_loss_smooth=0.917, train_macc=30.53, train_miou=23.10[0m)] 57%|#####7    | 115/200 [09:12<05:12,  3.68s/it, [0;92mdata_loading=0.649, iteration=2.634, learning_rate=0.077, train_acc=68.34, train_loss_cross_entropy=1.212, train_loss_seg=1.212, train_loss_smooth=0.907, train_macc=30.67, train_miou=23.24[0m)] 58%|#####8    | 116/200 [09:12<04:59,  3.56s/it, [0;92mdata_loading=0.649, iteration=2.634, learning_rate=0.077, train_acc=68.34, train_loss_cross_entropy=1.212, train_loss_seg=1.212, train_loss_smooth=0.907, train_macc=30.67, train_miou=23.24[0m)] 58%|#####8    | 116/200 [09:15<04:59,  3.56s/it, [0;92mdata_loading=0.668, iteration=2.405, learning_rate=0.082, train_acc=68.44, train_loss_cross_entropy=1.208, train_loss_seg=1.208, train_loss_smooth=0.902, train_macc=30.83, train_miou=23.37[0m)] 58%|#####8    | 117/200 [09:15<04:43,  3.42s/it, [0;92mdata_loading=0.668, iteration=2.405, learning_rate=0.082, train_acc=68.44, train_loss_cross_entropy=1.208, train_loss_seg=1.208, train_loss_smooth=0.902, train_macc=30.83, train_miou=23.37[0m)] 58%|#####8    | 117/200 [09:18<04:43,  3.42s/it, [0;92mdata_loading=0.766, iteration=2.486, learning_rate=0.087, train_acc=68.58, train_loss_cross_entropy=1.202, train_loss_seg=1.202, train_loss_smooth=0.893, train_macc=30.94, train_miou=23.47[0m)] 59%|#####8    | 118/200 [09:18<04:36,  3.37s/it, [0;92mdata_loading=0.766, iteration=2.486, learning_rate=0.087, train_acc=68.58, train_loss_cross_entropy=1.202, train_loss_seg=1.202, train_loss_smooth=0.893, train_macc=30.94, train_miou=23.47[0m)] 59%|#####8    | 118/200 [09:21<04:36,  3.37s/it, [0;92mdata_loading=0.637, iteration=2.736, learning_rate=0.092, train_acc=68.63, train_loss_cross_entropy=1.200, train_loss_seg=1.200, train_loss_smooth=0.896, train_macc=31.05, train_miou=23.57[0m)] 60%|#####9    | 119/200 [09:21<04:32,  3.37s/it, [0;92mdata_loading=0.637, iteration=2.736, learning_rate=0.092, train_acc=68.63, train_loss_cross_entropy=1.200, train_loss_seg=1.200, train_loss_smooth=0.896, train_macc=31.05, train_miou=23.57[0m)] 60%|#####9    | 119/200 [09:24<04:32,  3.37s/it, [0;92mdata_loading=0.616, iteration=2.573, learning_rate=0.097, train_acc=68.72, train_loss_cross_entropy=1.197, train_loss_seg=1.197, train_loss_smooth=0.894, train_macc=31.22, train_miou=23.72[0m)] 60%|######    | 120/200 [09:24<04:25,  3.32s/it, [0;92mdata_loading=0.616, iteration=2.573, learning_rate=0.097, train_acc=68.72, train_loss_cross_entropy=1.197, train_loss_seg=1.197, train_loss_smooth=0.894, train_macc=31.22, train_miou=23.72[0m)] 60%|######    | 120/200 [09:28<04:25,  3.32s/it, [0;92mdata_loading=0.754, iteration=2.606, learning_rate=0.103, train_acc=68.89, train_loss_cross_entropy=1.192, train_loss_seg=1.192, train_loss_smooth=0.889, train_macc=31.37, train_miou=23.84[0m)] 60%|######    | 121/200 [09:28<04:22,  3.33s/it, [0;92mdata_loading=0.754, iteration=2.606, learning_rate=0.103, train_acc=68.89, train_loss_cross_entropy=1.192, train_loss_seg=1.192, train_loss_smooth=0.889, train_macc=31.37, train_miou=23.84[0m)] 60%|######    | 121/200 [09:31<04:22,  3.33s/it, [0;92mdata_loading=0.709, iteration=2.402, learning_rate=0.109, train_acc=68.97, train_loss_cross_entropy=1.189, train_loss_seg=1.189, train_loss_smooth=0.886, train_macc=31.47, train_miou=23.91[0m)] 61%|######1   | 122/200 [09:31<04:14,  3.26s/it, [0;92mdata_loading=0.709, iteration=2.402, learning_rate=0.109, train_acc=68.97, train_loss_cross_entropy=1.189, train_loss_seg=1.189, train_loss_smooth=0.886, train_macc=31.47, train_miou=23.91[0m)] 61%|######1   | 122/200 [09:34<04:14,  3.26s/it, [0;92mdata_loading=0.709, iteration=2.480, learning_rate=0.116, train_acc=69.04, train_loss_cross_entropy=1.185, train_loss_seg=1.185, train_loss_smooth=0.883, train_macc=31.58, train_miou=23.99[0m)] 62%|######1   | 123/200 [09:34<04:09,  3.24s/it, [0;92mdata_loading=0.709, iteration=2.480, learning_rate=0.116, train_acc=69.04, train_loss_cross_entropy=1.185, train_loss_seg=1.185, train_loss_smooth=0.883, train_macc=31.58, train_miou=23.99[0m)] 62%|######1   | 123/200 [09:37<04:09,  3.24s/it, [0;92mdata_loading=0.704, iteration=2.436, learning_rate=0.123, train_acc=69.11, train_loss_cross_entropy=1.183, train_loss_seg=1.183, train_loss_smooth=0.884, train_macc=31.75, train_miou=24.12[0m)] 62%|######2   | 124/200 [09:37<04:04,  3.21s/it, [0;92mdata_loading=0.704, iteration=2.436, learning_rate=0.123, train_acc=69.11, train_loss_cross_entropy=1.183, train_loss_seg=1.183, train_loss_smooth=0.884, train_macc=31.75, train_miou=24.12[0m)] 62%|######2   | 124/200 [09:41<04:04,  3.21s/it, [0;92mdata_loading=0.890, iteration=2.843, learning_rate=0.130, train_acc=69.26, train_loss_cross_entropy=1.179, train_loss_seg=1.179, train_loss_smooth=0.879, train_macc=31.87, train_miou=24.23[0m)] 62%|######2   | 125/200 [09:41<04:12,  3.37s/it, [0;92mdata_loading=0.890, iteration=2.843, learning_rate=0.130, train_acc=69.26, train_loss_cross_entropy=1.179, train_loss_seg=1.179, train_loss_smooth=0.879, train_macc=31.87, train_miou=24.23[0m)] 62%|######2   | 125/200 [09:45<04:12,  3.37s/it, [0;92mdata_loading=0.804, iteration=2.852, learning_rate=0.138, train_acc=69.33, train_loss_cross_entropy=1.177, train_loss_seg=1.177, train_loss_smooth=0.880, train_macc=31.98, train_miou=24.33[0m)] 63%|######3   | 126/200 [09:45<04:15,  3.45s/it, [0;92mdata_loading=0.804, iteration=2.852, learning_rate=0.138, train_acc=69.33, train_loss_cross_entropy=1.177, train_loss_seg=1.177, train_loss_smooth=0.880, train_macc=31.98, train_miou=24.33[0m)] 63%|######3   | 126/200 [09:48<04:15,  3.45s/it, [0;92mdata_loading=0.767, iteration=2.454, learning_rate=0.146, train_acc=69.43, train_loss_cross_entropy=1.172, train_loss_seg=1.172, train_loss_smooth=0.873, train_macc=32.08, train_miou=24.42[0m)] 64%|######3   | 127/200 [09:48<04:07,  3.38s/it, [0;92mdata_loading=0.767, iteration=2.454, learning_rate=0.146, train_acc=69.43, train_loss_cross_entropy=1.172, train_loss_seg=1.172, train_loss_smooth=0.873, train_macc=32.08, train_miou=24.42[0m)] 64%|######3   | 127/200 [09:51<04:07,  3.38s/it, [0;92mdata_loading=0.866, iteration=2.486, learning_rate=0.155, train_acc=69.50, train_loss_cross_entropy=1.169, train_loss_seg=1.169, train_loss_smooth=0.871, train_macc=32.21, train_miou=24.51[0m)] 64%|######4   | 128/200 [09:51<04:03,  3.38s/it, [0;92mdata_loading=0.866, iteration=2.486, learning_rate=0.155, train_acc=69.50, train_loss_cross_entropy=1.169, train_loss_seg=1.169, train_loss_smooth=0.871, train_macc=32.21, train_miou=24.51[0m)] 64%|######4   | 128/200 [09:54<04:03,  3.38s/it, [0;92mdata_loading=0.707, iteration=1.653, learning_rate=0.164, train_acc=69.54, train_loss_cross_entropy=1.168, train_loss_seg=1.168, train_loss_smooth=0.874, train_macc=32.25, train_miou=24.54[0m)] 64%|######4   | 129/200 [09:54<03:38,  3.07s/it, [0;92mdata_loading=0.707, iteration=1.653, learning_rate=0.164, train_acc=69.54, train_loss_cross_entropy=1.168, train_loss_seg=1.168, train_loss_smooth=0.874, train_macc=32.25, train_miou=24.54[0m)] 64%|######4   | 129/200 [09:57<03:38,  3.07s/it, [0;92mdata_loading=0.647, iteration=2.634, learning_rate=0.174, train_acc=69.56, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_loss_smooth=0.878, train_macc=32.31, train_miou=24.60[0m)] 65%|######5   | 130/200 [09:57<03:39,  3.13s/it, [0;92mdata_loading=0.647, iteration=2.634, learning_rate=0.174, train_acc=69.56, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_loss_smooth=0.878, train_macc=32.31, train_miou=24.60[0m)] 65%|######5   | 130/200 [10:00<03:39,  3.13s/it, [0;92mdata_loading=0.672, iteration=2.389, learning_rate=0.184, train_acc=69.65, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_loss_smooth=0.876, train_macc=32.47, train_miou=24.74[0m)] 66%|######5   | 131/200 [10:00<03:34,  3.11s/it, [0;92mdata_loading=0.672, iteration=2.389, learning_rate=0.184, train_acc=69.65, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_loss_smooth=0.876, train_macc=32.47, train_miou=24.74[0m)] 66%|######5   | 131/200 [10:03<03:34,  3.11s/it, [0;92mdata_loading=0.672, iteration=2.707, learning_rate=0.195, train_acc=69.77, train_loss_cross_entropy=1.159, train_loss_seg=1.159, train_loss_smooth=0.869, train_macc=32.56, train_miou=24.82[0m)] 66%|######6   | 132/200 [10:03<03:37,  3.19s/it, [0;92mdata_loading=0.672, iteration=2.707, learning_rate=0.195, train_acc=69.77, train_loss_cross_entropy=1.159, train_loss_seg=1.159, train_loss_smooth=0.869, train_macc=32.56, train_miou=24.82[0m)] 66%|######6   | 132/200 [10:06<03:37,  3.19s/it, [0;92mdata_loading=0.763, iteration=2.463, learning_rate=0.207, train_acc=69.85, train_loss_cross_entropy=1.156, train_loss_seg=1.156, train_loss_smooth=0.865, train_macc=32.74, train_miou=24.98[0m)] 66%|######6   | 133/200 [10:06<03:34,  3.20s/it, [0;92mdata_loading=0.763, iteration=2.463, learning_rate=0.207, train_acc=69.85, train_loss_cross_entropy=1.156, train_loss_seg=1.156, train_loss_smooth=0.865, train_macc=32.74, train_miou=24.98[0m)] 66%|######6   | 133/200 [10:10<03:34,  3.20s/it, [0;92mdata_loading=0.684, iteration=2.663, learning_rate=0.219, train_acc=69.94, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_loss_smooth=0.862, train_macc=32.85, train_miou=25.04[0m)] 67%|######7   | 134/200 [10:10<03:34,  3.25s/it, [0;92mdata_loading=0.684, iteration=2.663, learning_rate=0.219, train_acc=69.94, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_loss_smooth=0.862, train_macc=32.85, train_miou=25.04[0m)] 67%|######7   | 134/200 [10:12<03:34,  3.25s/it, [0;92mdata_loading=0.683, iteration=1.857, learning_rate=0.232, train_acc=70.00, train_loss_cross_entropy=1.149, train_loss_seg=1.149, train_loss_smooth=0.857, train_macc=32.94, train_miou=25.12[0m)] 68%|######7   | 135/200 [10:12<03:17,  3.04s/it, [0;92mdata_loading=0.683, iteration=1.857, learning_rate=0.232, train_acc=70.00, train_loss_cross_entropy=1.149, train_loss_seg=1.149, train_loss_smooth=0.857, train_macc=32.94, train_miou=25.12[0m)] 68%|######7   | 135/200 [10:16<03:17,  3.04s/it, [0;92mdata_loading=0.846, iteration=2.516, learning_rate=0.246, train_acc=70.07, train_loss_cross_entropy=1.146, train_loss_seg=1.146, train_loss_smooth=0.855, train_macc=33.01, train_miou=25.16[0m)] 68%|######8   | 136/200 [10:16<03:20,  3.13s/it, [0;92mdata_loading=0.846, iteration=2.516, learning_rate=0.246, train_acc=70.07, train_loss_cross_entropy=1.146, train_loss_seg=1.146, train_loss_smooth=0.855, train_macc=33.01, train_miou=25.16[0m)] 68%|######8   | 136/200 [10:19<03:20,  3.13s/it, [0;92mdata_loading=0.663, iteration=2.546, learning_rate=0.261, train_acc=70.16, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.852, train_macc=33.12, train_miou=25.26[0m)] 68%|######8   | 137/200 [10:19<03:18,  3.16s/it, [0;92mdata_loading=0.663, iteration=2.546, learning_rate=0.261, train_acc=70.16, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.852, train_macc=33.12, train_miou=25.26[0m)] 68%|######8   | 137/200 [10:23<03:18,  3.16s/it, [0;92mdata_loading=0.885, iteration=2.820, learning_rate=0.276, train_acc=70.18, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.858, train_macc=33.16, train_miou=25.29[0m)] 69%|######9   | 138/200 [10:23<03:25,  3.32s/it, [0;92mdata_loading=0.885, iteration=2.820, learning_rate=0.276, train_acc=70.18, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.858, train_macc=33.16, train_miou=25.29[0m)] 69%|######9   | 138/200 [10:26<03:25,  3.32s/it, [0;92mdata_loading=0.694, iteration=2.585, learning_rate=0.293, train_acc=70.20, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.863, train_macc=33.45, train_miou=25.49[0m)] 70%|######9   | 139/200 [10:26<03:21,  3.31s/it, [0;92mdata_loading=0.694, iteration=2.585, learning_rate=0.293, train_acc=70.20, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.863, train_macc=33.45, train_miou=25.49[0m)] 70%|######9   | 139/200 [10:29<03:21,  3.31s/it, [0;92mdata_loading=0.862, iteration=2.618, learning_rate=0.310, train_acc=70.26, train_loss_cross_entropy=1.140, train_loss_seg=1.140, train_loss_smooth=0.863, train_macc=33.64, train_miou=25.63[0m)] 70%|#######   | 140/200 [10:29<03:21,  3.36s/it, [0;92mdata_loading=0.862, iteration=2.618, learning_rate=0.310, train_acc=70.26, train_loss_cross_entropy=1.140, train_loss_seg=1.140, train_loss_smooth=0.863, train_macc=33.64, train_miou=25.63[0m)] 70%|#######   | 140/200 [10:32<03:21,  3.36s/it, [0;92mdata_loading=0.685, iteration=1.717, learning_rate=0.329, train_acc=70.27, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.866, train_macc=33.63, train_miou=25.63[0m)] 70%|#######   | 141/200 [10:32<03:01,  3.07s/it, [0;92mdata_loading=0.685, iteration=1.717, learning_rate=0.329, train_acc=70.27, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.866, train_macc=33.63, train_miou=25.63[0m)] 70%|#######   | 141/200 [10:35<03:01,  3.07s/it, [0;92mdata_loading=0.735, iteration=2.640, learning_rate=0.348, train_acc=70.34, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.864, train_macc=33.66, train_miou=25.67[0m)] 71%|#######1  | 142/200 [10:35<03:03,  3.16s/it, [0;92mdata_loading=0.735, iteration=2.640, learning_rate=0.348, train_acc=70.34, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.864, train_macc=33.66, train_miou=25.67[0m)] 71%|#######1  | 142/200 [10:38<03:03,  3.16s/it, [0;92mdata_loading=0.583, iteration=2.641, learning_rate=0.369, train_acc=70.37, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.865, train_macc=33.69, train_miou=25.70[0m)] 72%|#######1  | 143/200 [10:38<03:01,  3.18s/it, [0;92mdata_loading=0.583, iteration=2.641, learning_rate=0.369, train_acc=70.37, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.865, train_macc=33.69, train_miou=25.70[0m)] 72%|#######1  | 143/200 [10:42<03:01,  3.18s/it, [0;92mdata_loading=0.739, iteration=2.699, learning_rate=0.391, train_acc=70.37, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.874, train_macc=33.68, train_miou=25.65[0m)] 72%|#######2  | 144/200 [10:42<03:02,  3.26s/it, [0;92mdata_loading=0.739, iteration=2.699, learning_rate=0.391, train_acc=70.37, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.874, train_macc=33.68, train_miou=25.65[0m)] 72%|#######2  | 144/200 [10:45<03:02,  3.26s/it, [0;92mdata_loading=0.668, iteration=2.546, learning_rate=0.415, train_acc=70.38, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.882, train_macc=33.74, train_miou=25.70[0m)] 72%|#######2  | 145/200 [10:45<02:58,  3.25s/it, [0;92mdata_loading=0.668, iteration=2.546, learning_rate=0.415, train_acc=70.38, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.882, train_macc=33.74, train_miou=25.70[0m)] 72%|#######2  | 145/200 [10:48<02:58,  3.25s/it, [0;92mdata_loading=0.781, iteration=2.518, learning_rate=0.439, train_acc=70.47, train_loss_cross_entropy=1.134, train_loss_seg=1.134, train_loss_smooth=0.877, train_macc=33.80, train_miou=25.75[0m)] 73%|#######3  | 146/200 [10:48<02:56,  3.26s/it, [0;92mdata_loading=0.781, iteration=2.518, learning_rate=0.439, train_acc=70.47, train_loss_cross_entropy=1.134, train_loss_seg=1.134, train_loss_smooth=0.877, train_macc=33.80, train_miou=25.75[0m)] 73%|#######3  | 146/200 [10:52<02:56,  3.26s/it, [0;92mdata_loading=0.749, iteration=2.728, learning_rate=0.466, train_acc=70.55, train_loss_cross_entropy=1.131, train_loss_seg=1.131, train_loss_smooth=0.874, train_macc=33.90, train_miou=25.83[0m)] 74%|#######3  | 147/200 [10:52<02:56,  3.33s/it, [0;92mdata_loading=0.749, iteration=2.728, learning_rate=0.466, train_acc=70.55, train_loss_cross_entropy=1.131, train_loss_seg=1.131, train_loss_smooth=0.874, train_macc=33.90, train_miou=25.83[0m)] 74%|#######3  | 147/200 [10:55<02:56,  3.33s/it, [0;92mdata_loading=0.628, iteration=2.545, learning_rate=0.493, train_acc=70.58, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_loss_smooth=0.874, train_macc=33.90, train_miou=25.84[0m)] 74%|#######4  | 148/200 [10:55<02:50,  3.28s/it, [0;92mdata_loading=0.628, iteration=2.545, learning_rate=0.493, train_acc=70.58, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_loss_smooth=0.874, train_macc=33.90, train_miou=25.84[0m)] 74%|#######4  | 148/200 [10:58<02:50,  3.28s/it, [0;92mdata_loading=0.726, iteration=2.400, learning_rate=0.523, train_acc=70.65, train_loss_cross_entropy=1.126, train_loss_seg=1.126, train_loss_smooth=0.870, train_macc=33.97, train_miou=25.90[0m)] 74%|#######4  | 149/200 [10:58<02:44,  3.23s/it, [0;92mdata_loading=0.726, iteration=2.400, learning_rate=0.523, train_acc=70.65, train_loss_cross_entropy=1.126, train_loss_seg=1.126, train_loss_smooth=0.870, train_macc=33.97, train_miou=25.90[0m)] 74%|#######4  | 149/200 [11:00<02:44,  3.23s/it, [0;92mdata_loading=0.668, iteration=1.598, learning_rate=0.554, train_acc=70.68, train_loss_cross_entropy=1.125, train_loss_seg=1.125, train_loss_smooth=0.871, train_macc=33.99, train_miou=25.91[0m)] 75%|#######5  | 150/200 [11:00<02:27,  2.94s/it, [0;92mdata_loading=0.668, iteration=1.598, learning_rate=0.554, train_acc=70.68, train_loss_cross_entropy=1.125, train_loss_seg=1.125, train_loss_smooth=0.871, train_macc=33.99, train_miou=25.91[0m)] 75%|#######5  | 150/200 [11:04<02:27,  2.94s/it, [0;92mdata_loading=0.772, iteration=2.445, learning_rate=0.587, train_acc=70.74, train_loss_cross_entropy=1.122, train_loss_seg=1.122, train_loss_smooth=0.869, train_macc=34.05, train_miou=25.98[0m)] 76%|#######5  | 151/200 [11:04<02:28,  3.03s/it, [0;92mdata_loading=0.772, iteration=2.445, learning_rate=0.587, train_acc=70.74, train_loss_cross_entropy=1.122, train_loss_seg=1.122, train_loss_smooth=0.869, train_macc=34.05, train_miou=25.98[0m)] 76%|#######5  | 151/200 [11:06<02:28,  3.03s/it, [0;92mdata_loading=0.736, iteration=1.694, learning_rate=0.622, train_acc=70.76, train_loss_cross_entropy=1.123, train_loss_seg=1.123, train_loss_smooth=0.875, train_macc=34.08, train_miou=26.00[0m)] 76%|#######6  | 152/200 [11:06<02:16,  2.85s/it, [0;92mdata_loading=0.736, iteration=1.694, learning_rate=0.622, train_acc=70.76, train_loss_cross_entropy=1.123, train_loss_seg=1.123, train_loss_smooth=0.875, train_macc=34.08, train_miou=26.00[0m)] 76%|#######6  | 152/200 [11:19<02:16,  2.85s/it, [0;92mdata_loading=10.46, iteration=2.871, learning_rate=0.659, train_acc=70.78, train_loss_cross_entropy=1.123, train_loss_seg=1.123, train_loss_smooth=0.881, train_macc=34.17, train_miou=26.08[0m)] 76%|#######6  | 153/200 [11:19<04:41,  5.99s/it, [0;92mdata_loading=10.46, iteration=2.871, learning_rate=0.659, train_acc=70.78, train_loss_cross_entropy=1.123, train_loss_seg=1.123, train_loss_smooth=0.881, train_macc=34.17, train_miou=26.08[0m)] 76%|#######6  | 153/200 [11:23<04:41,  5.99s/it, [0;92mdata_loading=0.701, iteration=2.451, learning_rate=0.698, train_acc=70.76, train_loss_cross_entropy=1.124, train_loss_seg=1.124, train_loss_smooth=0.891, train_macc=34.20, train_miou=26.07[0m)] 77%|#######7  | 154/200 [11:23<03:56,  5.14s/it, [0;92mdata_loading=0.701, iteration=2.451, learning_rate=0.698, train_acc=70.76, train_loss_cross_entropy=1.124, train_loss_seg=1.124, train_loss_smooth=0.891, train_macc=34.20, train_miou=26.07[0m)] 77%|#######7  | 154/200 [11:26<03:56,  5.14s/it, [0;92mdata_loading=0.735, iteration=2.581, learning_rate=0.740, train_acc=70.74, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.907, train_macc=34.20, train_miou=26.04[0m)] 78%|#######7  | 155/200 [11:26<03:26,  4.59s/it, [0;92mdata_loading=0.735, iteration=2.581, learning_rate=0.740, train_acc=70.74, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.907, train_macc=34.20, train_miou=26.04[0m)] 78%|#######7  | 155/200 [11:29<03:26,  4.59s/it, [0;92mdata_loading=0.690, iteration=2.632, learning_rate=0.784, train_acc=70.76, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.912, train_macc=34.22, train_miou=26.06[0m)] 78%|#######8  | 156/200 [11:29<03:05,  4.21s/it, [0;92mdata_loading=0.690, iteration=2.632, learning_rate=0.784, train_acc=70.76, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.912, train_macc=34.22, train_miou=26.06[0m)] 78%|#######8  | 156/200 [11:32<03:05,  4.21s/it, [0;92mdata_loading=0.590, iteration=2.587, learning_rate=0.831, train_acc=70.74, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.917, train_macc=34.19, train_miou=26.05[0m)] 78%|#######8  | 157/200 [11:32<02:47,  3.90s/it, [0;92mdata_loading=0.590, iteration=2.587, learning_rate=0.831, train_acc=70.74, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.917, train_macc=34.19, train_miou=26.05[0m)] 78%|#######8  | 157/200 [11:36<02:47,  3.90s/it, [0;92mdata_loading=0.735, iteration=2.812, learning_rate=0.880, train_acc=70.79, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.919, train_macc=34.20, train_miou=26.08[0m)] 79%|#######9  | 158/200 [11:36<02:39,  3.80s/it, [0;92mdata_loading=0.735, iteration=2.812, learning_rate=0.880, train_acc=70.79, train_loss_cross_entropy=1.128, train_loss_seg=1.128, train_loss_smooth=0.919, train_macc=34.20, train_miou=26.08[0m)] 79%|#######9  | 158/200 [11:39<02:39,  3.80s/it, [0;92mdata_loading=0.623, iteration=2.724, learning_rate=0.932, train_acc=70.72, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_loss_smooth=0.929, train_macc=34.22, train_miou=26.04[0m)] 80%|#######9  | 159/200 [11:39<02:30,  3.66s/it, [0;92mdata_loading=0.623, iteration=2.724, learning_rate=0.932, train_acc=70.72, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_loss_smooth=0.929, train_macc=34.22, train_miou=26.04[0m)] 80%|#######9  | 159/200 [11:43<02:30,  3.66s/it, [0;92mdata_loading=0.641, iteration=2.807, learning_rate=0.988, train_acc=70.69, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_loss_smooth=0.947, train_macc=34.17, train_miou=26.01[0m)] 80%|########  | 160/200 [11:43<02:23,  3.60s/it, [0;92mdata_loading=0.641, iteration=2.807, learning_rate=0.988, train_acc=70.69, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_loss_smooth=0.947, train_macc=34.17, train_miou=26.01[0m)] 80%|########  | 160/200 [11:46<02:23,  3.60s/it, [0;92mdata_loading=0.686, iteration=2.600, learning_rate=1.047, train_acc=70.60, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.969, train_macc=34.13, train_miou=25.92[0m)] 80%|########  | 161/200 [11:46<02:16,  3.50s/it, [0;92mdata_loading=0.686, iteration=2.600, learning_rate=1.047, train_acc=70.60, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.969, train_macc=34.13, train_miou=25.92[0m)] 80%|########  | 161/200 [11:59<02:16,  3.50s/it, [0;92mdata_loading=9.752, iteration=2.830, learning_rate=1.109, train_acc=70.42, train_loss_cross_entropy=1.158, train_loss_seg=1.158, train_loss_smooth=1.038, train_macc=33.95, train_miou=25.80[0m)] 81%|########1 | 162/200 [11:59<03:56,  6.23s/it, [0;92mdata_loading=9.752, iteration=2.830, learning_rate=1.109, train_acc=70.42, train_loss_cross_entropy=1.158, train_loss_seg=1.158, train_loss_smooth=1.038, train_macc=33.95, train_miou=25.80[0m)] 81%|########1 | 162/200 [12:01<03:56,  6.23s/it, [0;92mdata_loading=0.713, iteration=1.763, learning_rate=1.175, train_acc=70.40, train_loss_cross_entropy=1.174, train_loss_seg=1.174, train_loss_smooth=1.094, train_macc=33.91, train_miou=25.77[0m)] 82%|########1 | 163/200 [12:01<03:08,  5.10s/it, [0;92mdata_loading=0.713, iteration=1.763, learning_rate=1.175, train_acc=70.40, train_loss_cross_entropy=1.174, train_loss_seg=1.174, train_loss_smooth=1.094, train_macc=33.91, train_miou=25.77[0m)] 82%|########1 | 163/200 [12:05<03:08,  5.10s/it, [0;92mdata_loading=0.764, iteration=2.838, learning_rate=1.245, train_acc=70.11, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_loss_smooth=1.17 , train_macc=33.78, train_miou=25.57[0m)] 82%|########2 | 164/200 [12:05<02:47,  4.65s/it, [0;92mdata_loading=0.764, iteration=2.838, learning_rate=1.245, train_acc=70.11, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_loss_smooth=1.17 , train_macc=33.78, train_miou=25.57[0m)] 82%|########2 | 164/200 [12:08<02:47,  4.65s/it, [0;92mdata_loading=0.685, iteration=2.427, learning_rate=1.320, train_acc=69.95, train_loss_cross_entropy=1.227, train_loss_seg=1.227, train_loss_smooth=1.276, train_macc=33.65, train_miou=25.46[0m)] 82%|########2 | 165/200 [12:08<02:26,  4.19s/it, [0;92mdata_loading=0.685, iteration=2.427, learning_rate=1.320, train_acc=69.95, train_loss_cross_entropy=1.227, train_loss_seg=1.227, train_loss_smooth=1.276, train_macc=33.65, train_miou=25.46[0m)] 82%|########2 | 165/200 [12:11<02:26,  4.19s/it, [0;92mdata_loading=0.745, iteration=2.321, learning_rate=1.398, train_acc=69.82, train_loss_cross_entropy=1.247, train_loss_seg=1.247, train_loss_smooth=1.345, train_macc=33.52, train_miou=25.32[0m)] 83%|########2 | 166/200 [12:11<02:11,  3.85s/it, [0;92mdata_loading=0.745, iteration=2.321, learning_rate=1.398, train_acc=69.82, train_loss_cross_entropy=1.247, train_loss_seg=1.247, train_loss_smooth=1.345, train_macc=33.52, train_miou=25.32[0m)] 83%|########2 | 166/200 [12:14<02:11,  3.85s/it, [0;92mdata_loading=0.728, iteration=2.423, learning_rate=1.482, train_acc=69.69, train_loss_cross_entropy=1.253, train_loss_seg=1.253, train_loss_smooth=1.363, train_macc=33.38, train_miou=25.22[0m)] 84%|########3 | 167/200 [12:14<02:00,  3.64s/it, [0;92mdata_loading=0.728, iteration=2.423, learning_rate=1.482, train_acc=69.69, train_loss_cross_entropy=1.253, train_loss_seg=1.253, train_loss_smooth=1.363, train_macc=33.38, train_miou=25.22[0m)] 84%|########3 | 167/200 [12:17<02:00,  3.64s/it, [0;92mdata_loading=0.715, iteration=2.649, learning_rate=1.570, train_acc=69.60, train_loss_cross_entropy=1.263, train_loss_seg=1.263, train_loss_smooth=1.397, train_macc=33.22, train_miou=25.12[0m)] 84%|########4 | 168/200 [12:17<01:53,  3.56s/it, [0;92mdata_loading=0.715, iteration=2.649, learning_rate=1.570, train_acc=69.60, train_loss_cross_entropy=1.263, train_loss_seg=1.263, train_loss_smooth=1.397, train_macc=33.22, train_miou=25.12[0m)] 84%|########4 | 168/200 [12:21<01:53,  3.56s/it, [0;92mdata_loading=0.769, iteration=2.760, learning_rate=1.663, train_acc=69.41, train_loss_cross_entropy=1.278, train_loss_seg=1.278, train_loss_smooth=1.447, train_macc=33.05, train_miou=25.00[0m)] 84%|########4 | 169/200 [12:21<01:50,  3.55s/it, [0;92mdata_loading=0.769, iteration=2.760, learning_rate=1.663, train_acc=69.41, train_loss_cross_entropy=1.278, train_loss_seg=1.278, train_loss_smooth=1.447, train_macc=33.05, train_miou=25.00[0m)] 84%|########4 | 169/200 [12:23<01:50,  3.55s/it, [0;92mdata_loading=0.847, iteration=1.699, learning_rate=1.762, train_acc=69.26, train_loss_cross_entropy=1.309, train_loss_seg=1.309, train_loss_smooth=1.551, train_macc=32.93, train_miou=24.89[0m)] 85%|########5 | 170/200 [12:23<01:37,  3.25s/it, [0;92mdata_loading=0.847, iteration=1.699, learning_rate=1.762, train_acc=69.26, train_loss_cross_entropy=1.309, train_loss_seg=1.309, train_loss_smooth=1.551, train_macc=32.93, train_miou=24.89[0m)] 85%|########5 | 170/200 [12:26<01:37,  3.25s/it, [0;92mdata_loading=0.896, iteration=1.789, learning_rate=1.867, train_acc=69.18, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.609, train_macc=32.82, train_miou=24.82[0m)] 86%|########5 | 171/200 [12:26<01:29,  3.08s/it, [0;92mdata_loading=0.896, iteration=1.789, learning_rate=1.867, train_acc=69.18, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.609, train_macc=32.82, train_miou=24.82[0m)] 86%|########5 | 171/200 [12:30<01:29,  3.08s/it, [0;92mdata_loading=0.803, iteration=2.711, learning_rate=1.979, train_acc=68.82, train_loss_cross_entropy=1.339, train_loss_seg=1.339, train_loss_smooth=1.647, train_macc=32.53, train_miou=24.61[0m)] 86%|########6 | 172/200 [12:30<01:29,  3.21s/it, [0;92mdata_loading=0.803, iteration=2.711, learning_rate=1.979, train_acc=68.82, train_loss_cross_entropy=1.339, train_loss_seg=1.339, train_loss_smooth=1.647, train_macc=32.53, train_miou=24.61[0m)] 86%|########6 | 172/200 [12:33<01:29,  3.21s/it, [0;92mdata_loading=0.736, iteration=2.690, learning_rate=2.097, train_acc=68.62, train_loss_cross_entropy=1.354, train_loss_seg=1.354, train_loss_smooth=1.694, train_macc=32.38, train_miou=24.50[0m)] 86%|########6 | 173/200 [12:33<01:28,  3.28s/it, [0;92mdata_loading=0.736, iteration=2.690, learning_rate=2.097, train_acc=68.62, train_loss_cross_entropy=1.354, train_loss_seg=1.354, train_loss_smooth=1.694, train_macc=32.38, train_miou=24.50[0m)] 86%|########6 | 173/200 [12:36<01:28,  3.28s/it, [0;92mdata_loading=0.622, iteration=2.63 , learning_rate=2.221, train_acc=68.31, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.772, train_macc=32.18, train_miou=24.33[0m)] 87%|########7 | 174/200 [12:36<01:24,  3.27s/it, [0;92mdata_loading=0.622, iteration=2.63 , learning_rate=2.221, train_acc=68.31, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.772, train_macc=32.18, train_miou=24.33[0m)] 87%|########7 | 174/200 [12:40<01:24,  3.27s/it, [0;92mdata_loading=0.812, iteration=2.994, learning_rate=2.354, train_acc=68.02, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.800, train_macc=32.01, train_miou=24.18[0m)] 88%|########7 | 175/200 [12:40<01:25,  3.43s/it, [0;92mdata_loading=0.812, iteration=2.994, learning_rate=2.354, train_acc=68.02, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.800, train_macc=32.01, train_miou=24.18[0m)] 88%|########7 | 175/200 [12:44<01:25,  3.43s/it, [0;92mdata_loading=0.670, iteration=2.797, learning_rate=2.494, train_acc=67.76, train_loss_cross_entropy=1.392, train_loss_seg=1.392, train_loss_smooth=1.808, train_macc=31.81, train_miou=24.03[0m)] 88%|########8 | 176/200 [12:44<01:22,  3.44s/it, [0;92mdata_loading=0.670, iteration=2.797, learning_rate=2.494, train_acc=67.76, train_loss_cross_entropy=1.392, train_loss_seg=1.392, train_loss_smooth=1.808, train_macc=31.81, train_miou=24.03[0m)] 88%|########8 | 176/200 [12:47<01:22,  3.44s/it, [0;92mdata_loading=0.686, iteration=2.608, learning_rate=2.643, train_acc=67.63, train_loss_cross_entropy=1.399, train_loss_seg=1.399, train_loss_smooth=1.822, train_macc=31.65, train_miou=23.93[0m)] 88%|########8 | 177/200 [12:47<01:18,  3.40s/it, [0;92mdata_loading=0.686, iteration=2.608, learning_rate=2.643, train_acc=67.63, train_loss_cross_entropy=1.399, train_loss_seg=1.399, train_loss_smooth=1.822, train_macc=31.65, train_miou=23.93[0m)] 88%|########8 | 177/200 [12:50<01:18,  3.40s/it, [0;92mdata_loading=0.772, iteration=2.571, learning_rate=2.800, train_acc=67.54, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.838, train_macc=31.52, train_miou=23.84[0m)] 89%|########9 | 178/200 [12:50<01:14,  3.38s/it, [0;92mdata_loading=0.772, iteration=2.571, learning_rate=2.800, train_acc=67.54, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.838, train_macc=31.52, train_miou=23.84[0m)] 89%|########9 | 178/200 [12:53<01:14,  3.38s/it, [0;92mdata_loading=0.663, iteration=2.577, learning_rate=2.967, train_acc=67.38, train_loss_cross_entropy=1.410, train_loss_seg=1.410, train_loss_smooth=1.847, train_macc=31.37, train_miou=23.74[0m)] 90%|########9 | 179/200 [12:53<01:10,  3.34s/it, [0;92mdata_loading=0.663, iteration=2.577, learning_rate=2.967, train_acc=67.38, train_loss_cross_entropy=1.410, train_loss_seg=1.410, train_loss_smooth=1.847, train_macc=31.37, train_miou=23.74[0m)] 90%|########9 | 179/200 [12:57<01:10,  3.34s/it, [0;92mdata_loading=0.745, iteration=2.651, learning_rate=3.144, train_acc=67.19, train_loss_cross_entropy=1.422, train_loss_seg=1.422, train_loss_smooth=1.882, train_macc=31.23, train_miou=23.59[0m)] 90%|######### | 180/200 [12:57<01:07,  3.36s/it, [0;92mdata_loading=0.745, iteration=2.651, learning_rate=3.144, train_acc=67.19, train_loss_cross_entropy=1.422, train_loss_seg=1.422, train_loss_smooth=1.882, train_macc=31.23, train_miou=23.59[0m)] 90%|######### | 180/200 [13:00<01:07,  3.36s/it, [0;92mdata_loading=0.748, iteration=2.532, learning_rate=3.331, train_acc=66.85, train_loss_cross_entropy=1.478, train_loss_seg=1.478, train_loss_smooth=2.082, train_macc=31.10, train_miou=23.37[0m)] 90%|######### | 181/200 [13:00<01:03,  3.33s/it, [0;92mdata_loading=0.748, iteration=2.532, learning_rate=3.331, train_acc=66.85, train_loss_cross_entropy=1.478, train_loss_seg=1.478, train_loss_smooth=2.082, train_macc=31.10, train_miou=23.37[0m)] 90%|######### | 181/200 [13:03<01:03,  3.33s/it, [0;92mdata_loading=0.675, iteration=2.558, learning_rate=3.529, train_acc=66.69, train_loss_cross_entropy=1.755, train_loss_seg=1.755, train_loss_smooth=3.104, train_macc=30.95, train_miou=23.25[0m)] 91%|#########1| 182/200 [13:03<00:59,  3.30s/it, [0;92mdata_loading=0.675, iteration=2.558, learning_rate=3.529, train_acc=66.69, train_loss_cross_entropy=1.755, train_loss_seg=1.755, train_loss_smooth=3.104, train_macc=30.95, train_miou=23.25[0m)] 91%|#########1| 182/200 [13:07<00:59,  3.30s/it, [0;92mdata_loading=0.725, iteration=2.442, learning_rate=3.739, train_acc=66.48, train_loss_cross_entropy=2.074, train_loss_seg=2.074, train_loss_smooth=4.271, train_macc=30.82, train_miou=23.14[0m)] 91%|#########1| 182/200 [13:07<01:17,  4.32s/it, [0;92mdata_loading=0.725, iteration=2.442, learning_rate=3.739, train_acc=66.48, train_loss_cross_entropy=2.074, train_loss_seg=2.074, train_loss_smooth=4.271, train_macc=30.82, train_miou=23.14[0m)][2022-11-21 19:18:17,727][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-21 19:18:17,728][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.0742663926765563
[2022-11-21 19:18:17,728][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.0742663926765563
[2022-11-21 19:18:17,728][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 66.48113071582932
[2022-11-21 19:18:17,729][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 30.8294682799895
[2022-11-21 19:18:17,729][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 23.14815172010697
[2022-11-21 19:18:17,729][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '61.51', 1: '72.53', 2: '31.44', 3: '31.58', 4: '39.79', 5: '29.53', 6: '26.15', 7: '36.95', 8: '28.94', 9: '8.07', 10: '4.75', 11: '1.13', 12: '17.47', 13: '27.49', 14: '5.04', 15: '0.15', 16: '4.23', 17: '0.17', 18: '7.99', 19: '28.06'}
[2022-11-21 19:18:17,729][torch_points3d.metrics.base_tracker][INFO] - ==================================================

