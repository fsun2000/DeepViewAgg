MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-11-22 12:40:51,843][torch_points3d.trainer][INFO] - DEVICE : cuda
load_m2f_masks:  True
initialize train dataset
initialize val dataset
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-11-22 12:41:25,869][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
[2022-11-22 12:41:27,103][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-11-22 12:41:27,104][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-11-22 12:41:27,107][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    base_momentum: 0.85
    dampening: 0
    foreach: None
    initial_lr: 0.12
    lr: 0.1200000000000001
    max_lr: 3.0
    max_momentum: 0.95
    maximize: False
    min_lr: 1.2e-05
    momentum: 0.95
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-11-22 12:41:27,107][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: OneCycleLR({'max_lr': 3.0, 'epochs': 100, 'steps_per_epoch': 200, 'anneal_strategy': 'cos', 'cycle_momentum': True, 'base_momentum': 0.85, 'max_momentum': 0.95, 'three_phase': False}, update_scheduler_on=on_num_batch)[0m
[2022-11-22 12:41:27,107][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-11-22 12:41:27,107][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-11-22 12:41:27,108][torch_points3d.trainer][INFO] - Model size = 30911764
[2022-11-22 12:41:27,109][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1201
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 312
[0;95mBatch size =[0m 6
[2022-11-22 12:41:33,987][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-11-22 12:41:33,987][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-11-22 12:41:36,118][torch_points3d.trainer][INFO] - EPOCH 1 / 2
Executing lr range test
[2022-11-22 12:41:36,120][torch_points3d.trainer][INFO] - Initial learning rate = 0.120000
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 0/200 [01:39<?, ?it/s, [0;92mdata_loading=95.56, iteration=3.643, learning_rate=0.12 , train_acc=3.824, train_loss_cross_entropy=3.109, train_loss_seg=3.109, train_loss_smooth=3.109, train_macc=5.592, train_miou=0.923[0m)]  0%|          | 1/200 [01:39<5:29:01, 99.21s/it, [0;92mdata_loading=95.56, iteration=3.643, learning_rate=0.12 , train_acc=3.824, train_loss_cross_entropy=3.109, train_loss_seg=3.109, train_loss_smooth=3.109, train_macc=5.592, train_miou=0.923[0m)]  0%|          | 1/200 [01:42<5:29:01, 99.21s/it, [0;92mdata_loading=0.821, iteration=2.538, learning_rate=0.12 , train_acc=21.96, train_loss_cross_entropy=2.764, train_loss_seg=2.764, train_loss_smooth=2.761, train_macc=7.479, train_miou=3.095[0m)]  1%|1         | 2/200 [01:42<2:21:19, 42.82s/it, [0;92mdata_loading=0.821, iteration=2.538, learning_rate=0.12 , train_acc=21.96, train_loss_cross_entropy=2.764, train_loss_seg=2.764, train_loss_smooth=2.761, train_macc=7.479, train_miou=3.095[0m)]  1%|1         | 2/200 [01:46<2:21:19, 42.82s/it, [0;92mdata_loading=0.816, iteration=2.685, learning_rate=0.12 , train_acc=32.83, train_loss_cross_entropy=2.669, train_loss_seg=2.669, train_loss_smooth=2.664, train_macc=6.955, train_miou=3.935[0m)]  2%|1         | 3/200 [01:46<1:21:39, 24.87s/it, [0;92mdata_loading=0.816, iteration=2.685, learning_rate=0.12 , train_acc=32.83, train_loss_cross_entropy=2.669, train_loss_seg=2.669, train_loss_smooth=2.664, train_macc=6.955, train_miou=3.935[0m)]  2%|1         | 3/200 [01:49<1:21:39, 24.87s/it, [0;92mdata_loading=0.871, iteration=2.766, learning_rate=0.12 , train_acc=37.19, train_loss_cross_entropy=2.526, train_loss_seg=2.526, train_loss_smooth=2.518, train_macc=7.441, train_miou=4.234[0m)]  2%|2         | 4/200 [01:49<53:51, 16.49s/it, [0;92mdata_loading=0.871, iteration=2.766, learning_rate=0.12 , train_acc=37.19, train_loss_cross_entropy=2.526, train_loss_seg=2.526, train_loss_smooth=2.518, train_macc=7.441, train_miou=4.234[0m)]    2%|2         | 4/200 [01:52<53:51, 16.49s/it, [0;92mdata_loading=0.637, iteration=2.643, learning_rate=0.12 , train_acc=41.95, train_loss_cross_entropy=2.411, train_loss_seg=2.411, train_loss_smooth=2.400, train_macc=8.014, train_miou=4.717[0m)]  2%|2         | 5/200 [01:52<38:06, 11.72s/it, [0;92mdata_loading=0.637, iteration=2.643, learning_rate=0.12 , train_acc=41.95, train_loss_cross_entropy=2.411, train_loss_seg=2.411, train_loss_smooth=2.400, train_macc=8.014, train_miou=4.717[0m)]  2%|2         | 5/200 [01:54<38:06, 11.72s/it, [0;92mdata_loading=0.540, iteration=1.261, learning_rate=0.12 , train_acc=42.45, train_loss_cross_entropy=2.466, train_loss_seg=2.466, train_loss_smooth=2.460, train_macc=7.935, train_miou=4.774[0m)]  3%|3         | 6/200 [01:54<27:00,  8.35s/it, [0;92mdata_loading=0.540, iteration=1.261, learning_rate=0.12 , train_acc=42.45, train_loss_cross_entropy=2.466, train_loss_seg=2.466, train_loss_smooth=2.460, train_macc=7.935, train_miou=4.774[0m)]  3%|3         | 6/200 [01:57<27:00,  8.35s/it, [0;92mdata_loading=0.701, iteration=2.343, learning_rate=0.12 , train_acc=43.73, train_loss_cross_entropy=2.372, train_loss_seg=2.372, train_loss_smooth=2.361, train_macc=8.053, train_miou=4.938[0m)]  4%|3         | 7/200 [01:57<21:17,  6.62s/it, [0;92mdata_loading=0.701, iteration=2.343, learning_rate=0.12 , train_acc=43.73, train_loss_cross_entropy=2.372, train_loss_seg=2.372, train_loss_smooth=2.361, train_macc=8.053, train_miou=4.938[0m)]  4%|3         | 7/200 [02:01<21:17,  6.62s/it, [0;92mdata_loading=0.753, iteration=2.485, learning_rate=0.12 , train_acc=44.98, train_loss_cross_entropy=2.326, train_loss_seg=2.326, train_loss_smooth=2.313, train_macc=8.232, train_miou=5.102[0m)]  4%|4         | 8/200 [02:01<17:43,  5.54s/it, [0;92mdata_loading=0.753, iteration=2.485, learning_rate=0.12 , train_acc=44.98, train_loss_cross_entropy=2.326, train_loss_seg=2.326, train_loss_smooth=2.313, train_macc=8.232, train_miou=5.102[0m)]  4%|4         | 8/200 [02:04<17:43,  5.54s/it, [0;92mdata_loading=0.878, iteration=2.673, learning_rate=0.12 , train_acc=46.12, train_loss_cross_entropy=2.257, train_loss_seg=2.257, train_loss_smooth=2.241, train_macc=8.405, train_miou=5.190[0m)]  4%|4         | 9/200 [02:04<15:39,  4.92s/it, [0;92mdata_loading=0.878, iteration=2.673, learning_rate=0.12 , train_acc=46.12, train_loss_cross_entropy=2.257, train_loss_seg=2.257, train_loss_smooth=2.241, train_macc=8.405, train_miou=5.190[0m)]  4%|4         | 9/200 [02:08<15:39,  4.92s/it, [0;92mdata_loading=0.858, iteration=2.744, learning_rate=0.12 , train_acc=47.25, train_loss_cross_entropy=2.198, train_loss_seg=2.198, train_loss_smooth=2.178, train_macc=8.485, train_miou=5.268[0m)]  5%|5         | 10/200 [02:08<14:17,  4.51s/it, [0;92mdata_loading=0.858, iteration=2.744, learning_rate=0.12 , train_acc=47.25, train_loss_cross_entropy=2.198, train_loss_seg=2.198, train_loss_smooth=2.178, train_macc=8.485, train_miou=5.268[0m)]  5%|5         | 10/200 [02:12<14:17,  4.51s/it, [0;92mdata_loading=1.319, iteration=2.691, learning_rate=0.12 , train_acc=48.07, train_loss_cross_entropy=2.175, train_loss_seg=2.175, train_loss_smooth=2.154, train_macc=8.610, train_miou=5.295[0m)]  6%|5         | 11/200 [02:12<13:43,  4.36s/it, [0;92mdata_loading=1.319, iteration=2.691, learning_rate=0.12 , train_acc=48.07, train_loss_cross_entropy=2.175, train_loss_seg=2.175, train_loss_smooth=2.154, train_macc=8.610, train_miou=5.295[0m)]  6%|5         | 11/200 [02:16<13:43,  4.36s/it, [0;92mdata_loading=1.348, iteration=2.863, learning_rate=0.12 , train_acc=49.39, train_loss_cross_entropy=2.101, train_loss_seg=2.101, train_loss_smooth=2.073, train_macc=8.728, train_miou=5.391[0m)]  6%|6         | 12/200 [02:16<13:31,  4.31s/it, [0;92mdata_loading=1.348, iteration=2.863, learning_rate=0.12 , train_acc=49.39, train_loss_cross_entropy=2.101, train_loss_seg=2.101, train_loss_smooth=2.073, train_macc=8.728, train_miou=5.391[0m)]  6%|6         | 12/200 [02:19<13:31,  4.31s/it, [0;92mdata_loading=0.876, iteration=2.568, learning_rate=0.12 , train_acc=49.66, train_loss_cross_entropy=2.094, train_loss_seg=2.094, train_loss_smooth=2.068, train_macc=8.784, train_miou=5.391[0m)]  6%|6         | 13/200 [02:19<12:37,  4.05s/it, [0;92mdata_loading=0.876, iteration=2.568, learning_rate=0.12 , train_acc=49.66, train_loss_cross_entropy=2.094, train_loss_seg=2.094, train_loss_smooth=2.068, train_macc=8.784, train_miou=5.391[0m)]  6%|6         | 13/200 [02:22<12:37,  4.05s/it, [0;92mdata_loading=0.583, iteration=2.289, learning_rate=0.12 , train_acc=50.59, train_loss_cross_entropy=2.042, train_loss_seg=2.042, train_loss_smooth=2.011, train_macc=8.937, train_miou=5.523[0m)]  7%|7         | 14/200 [02:22<11:27,  3.70s/it, [0;92mdata_loading=0.583, iteration=2.289, learning_rate=0.12 , train_acc=50.59, train_loss_cross_entropy=2.042, train_loss_seg=2.042, train_loss_smooth=2.011, train_macc=8.937, train_miou=5.523[0m)]  7%|7         | 14/200 [02:24<11:27,  3.70s/it, [0;92mdata_loading=0.666, iteration=1.441, learning_rate=0.12 , train_acc=51.10, train_loss_cross_entropy=2.013, train_loss_seg=2.013, train_loss_smooth=1.981, train_macc=9.028, train_miou=5.602[0m)]  8%|7         | 15/200 [02:24<09:55,  3.22s/it, [0;92mdata_loading=0.666, iteration=1.441, learning_rate=0.12 , train_acc=51.10, train_loss_cross_entropy=2.013, train_loss_seg=2.013, train_loss_smooth=1.981, train_macc=9.028, train_miou=5.602[0m)]  8%|7         | 15/200 [02:27<09:55,  3.22s/it, [0;92mdata_loading=0.662, iteration=2.409, learning_rate=0.120, train_acc=51.32, train_loss_cross_entropy=1.989, train_loss_seg=1.989, train_loss_smooth=1.955, train_macc=9.197, train_miou=5.683[0m)]  8%|8         | 16/200 [02:27<09:43,  3.17s/it, [0;92mdata_loading=0.662, iteration=2.409, learning_rate=0.120, train_acc=51.32, train_loss_cross_entropy=1.989, train_loss_seg=1.989, train_loss_smooth=1.955, train_macc=9.197, train_miou=5.683[0m)]  8%|8         | 16/200 [02:30<09:43,  3.17s/it, [0;92mdata_loading=0.572, iteration=2.196, learning_rate=0.120, train_acc=51.92, train_loss_cross_entropy=1.945, train_loss_seg=1.945, train_loss_smooth=1.905, train_macc=9.288, train_miou=5.768[0m)]  8%|8         | 17/200 [02:30<09:18,  3.05s/it, [0;92mdata_loading=0.572, iteration=2.196, learning_rate=0.120, train_acc=51.92, train_loss_cross_entropy=1.945, train_loss_seg=1.945, train_loss_smooth=1.905, train_macc=9.288, train_miou=5.768[0m)]  8%|8         | 17/200 [02:33<09:18,  3.05s/it, [0;92mdata_loading=0.677, iteration=2.209, learning_rate=0.120, train_acc=52.09, train_loss_cross_entropy=1.921, train_loss_seg=1.921, train_loss_smooth=1.879, train_macc=9.323, train_miou=5.794[0m)]  9%|9         | 18/200 [02:33<09:06,  3.00s/it, [0;92mdata_loading=0.677, iteration=2.209, learning_rate=0.120, train_acc=52.09, train_loss_cross_entropy=1.921, train_loss_seg=1.921, train_loss_smooth=1.879, train_macc=9.323, train_miou=5.794[0m)]  9%|9         | 18/200 [02:36<09:06,  3.00s/it, [0;92mdata_loading=0.598, iteration=2.234, learning_rate=0.120, train_acc=52.38, train_loss_cross_entropy=1.912, train_loss_seg=1.912, train_loss_smooth=1.872, train_macc=9.339, train_miou=5.814[0m)] 10%|9         | 19/200 [02:36<08:54,  2.95s/it, [0;92mdata_loading=0.598, iteration=2.234, learning_rate=0.120, train_acc=52.38, train_loss_cross_entropy=1.912, train_loss_seg=1.912, train_loss_smooth=1.872, train_macc=9.339, train_miou=5.814[0m)] 10%|9         | 19/200 [02:39<08:54,  2.95s/it, [0;92mdata_loading=0.673, iteration=2.442, learning_rate=0.120, train_acc=52.59, train_loss_cross_entropy=1.889, train_loss_seg=1.889, train_loss_smooth=1.847, train_macc=9.385, train_miou=5.840[0m)] 10%|#         | 20/200 [02:39<09:00,  3.00s/it, [0;92mdata_loading=0.673, iteration=2.442, learning_rate=0.120, train_acc=52.59, train_loss_cross_entropy=1.889, train_loss_seg=1.889, train_loss_smooth=1.847, train_macc=9.385, train_miou=5.840[0m)] 10%|#         | 20/200 [02:42<09:00,  3.00s/it, [0;92mdata_loading=0.629, iteration=2.335, learning_rate=0.120, train_acc=52.85, train_loss_cross_entropy=1.874, train_loss_seg=1.874, train_loss_smooth=1.831, train_macc=9.442, train_miou=5.899[0m)] 10%|#         | 21/200 [02:42<08:55,  2.99s/it, [0;92mdata_loading=0.629, iteration=2.335, learning_rate=0.120, train_acc=52.85, train_loss_cross_entropy=1.874, train_loss_seg=1.874, train_loss_smooth=1.831, train_macc=9.442, train_miou=5.899[0m)] 10%|#         | 21/200 [02:45<08:55,  2.99s/it, [0;92mdata_loading=0.952, iteration=1.593, learning_rate=0.120, train_acc=52.87, train_loss_cross_entropy=1.882, train_loss_seg=1.882, train_loss_smooth=1.842, train_macc=9.496, train_miou=5.934[0m)] 11%|#1        | 22/200 [02:45<08:28,  2.86s/it, [0;92mdata_loading=0.952, iteration=1.593, learning_rate=0.120, train_acc=52.87, train_loss_cross_entropy=1.882, train_loss_seg=1.882, train_loss_smooth=1.842, train_macc=9.496, train_miou=5.934[0m)] 11%|#1        | 22/200 [02:47<08:28,  2.86s/it, [0;92mdata_loading=1.203, iteration=1.618, learning_rate=0.120, train_acc=53.16, train_loss_cross_entropy=1.861, train_loss_seg=1.861, train_loss_smooth=1.819, train_macc=9.559, train_miou=6.012[0m)] 12%|#1        | 23/200 [02:47<08:23,  2.85s/it, [0;92mdata_loading=1.203, iteration=1.618, learning_rate=0.120, train_acc=53.16, train_loss_cross_entropy=1.861, train_loss_seg=1.861, train_loss_smooth=1.819, train_macc=9.559, train_miou=6.012[0m)] 12%|#1        | 23/200 [02:51<08:23,  2.85s/it, [0;92mdata_loading=0.798, iteration=2.637, learning_rate=0.120, train_acc=53.44, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.799, train_macc=9.631, train_miou=6.106[0m)] 12%|#2        | 24/200 [02:51<08:51,  3.02s/it, [0;92mdata_loading=0.798, iteration=2.637, learning_rate=0.120, train_acc=53.44, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.799, train_macc=9.631, train_miou=6.106[0m)] 12%|#2        | 24/200 [02:55<08:51,  3.02s/it, [0;92mdata_loading=2.177, iteration=2.372, learning_rate=0.120, train_acc=53.37, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.801, train_macc=9.761, train_miou=6.215[0m)] 12%|#2        | 25/200 [02:55<10:09,  3.48s/it, [0;92mdata_loading=2.177, iteration=2.372, learning_rate=0.120, train_acc=53.37, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.801, train_macc=9.761, train_miou=6.215[0m)] 12%|#2        | 25/200 [02:59<10:09,  3.48s/it, [0;92mdata_loading=0.877, iteration=2.55 , learning_rate=0.120, train_acc=53.65, train_loss_cross_entropy=1.825, train_loss_seg=1.825, train_loss_smooth=1.781, train_macc=9.797, train_miou=6.297[0m)] 13%|#3        | 26/200 [02:59<10:02,  3.47s/it, [0;92mdata_loading=0.877, iteration=2.55 , learning_rate=0.120, train_acc=53.65, train_loss_cross_entropy=1.825, train_loss_seg=1.825, train_loss_smooth=1.781, train_macc=9.797, train_miou=6.297[0m)] 13%|#3        | 26/200 [03:02<10:02,  3.47s/it, [0;92mdata_loading=0.789, iteration=2.667, learning_rate=0.120, train_acc=54.07, train_loss_cross_entropy=1.808, train_loss_seg=1.808, train_loss_smooth=1.761, train_macc=9.949, train_miou=6.460[0m)] 14%|#3        | 27/200 [03:02<09:58,  3.46s/it, [0;92mdata_loading=0.789, iteration=2.667, learning_rate=0.120, train_acc=54.07, train_loss_cross_entropy=1.808, train_loss_seg=1.808, train_loss_smooth=1.761, train_macc=9.949, train_miou=6.460[0m)] 14%|#3        | 27/200 [03:06<09:58,  3.46s/it, [0;92mdata_loading=0.900, iteration=2.515, learning_rate=0.120, train_acc=54.36, train_loss_cross_entropy=1.795, train_loss_seg=1.795, train_loss_smooth=1.746, train_macc=10.04, train_miou=6.553[0m)] 14%|#4        | 28/200 [03:06<09:53,  3.45s/it, [0;92mdata_loading=0.900, iteration=2.515, learning_rate=0.120, train_acc=54.36, train_loss_cross_entropy=1.795, train_loss_seg=1.795, train_loss_smooth=1.746, train_macc=10.04, train_miou=6.553[0m)] 14%|#4        | 28/200 [03:09<09:53,  3.45s/it, [0;92mdata_loading=0.709, iteration=2.411, learning_rate=0.120, train_acc=54.31, train_loss_cross_entropy=1.792, train_loss_seg=1.792, train_loss_smooth=1.743, train_macc=10.07, train_miou=6.567[0m)] 14%|#4        | 29/200 [03:09<09:32,  3.35s/it, [0;92mdata_loading=0.709, iteration=2.411, learning_rate=0.120, train_acc=54.31, train_loss_cross_entropy=1.792, train_loss_seg=1.792, train_loss_smooth=1.743, train_macc=10.07, train_miou=6.567[0m)] 14%|#4        | 29/200 [03:12<09:32,  3.35s/it, [0;92mdata_loading=0.592, iteration=2.375, learning_rate=0.120, train_acc=54.63, train_loss_cross_entropy=1.776, train_loss_seg=1.776, train_loss_smooth=1.725, train_macc=10.22, train_miou=6.687[0m)] 15%|#5        | 30/200 [03:12<09:09,  3.24s/it, [0;92mdata_loading=0.592, iteration=2.375, learning_rate=0.120, train_acc=54.63, train_loss_cross_entropy=1.776, train_loss_seg=1.776, train_loss_smooth=1.725, train_macc=10.22, train_miou=6.687[0m)] 15%|#5        | 30/200 [03:15<09:09,  3.24s/it, [0;92mdata_loading=0.753, iteration=2.285, learning_rate=0.120, train_acc=54.70, train_loss_cross_entropy=1.769, train_loss_seg=1.769, train_loss_smooth=1.718, train_macc=10.28, train_miou=6.726[0m)] 16%|#5        | 31/200 [03:15<08:56,  3.18s/it, [0;92mdata_loading=0.753, iteration=2.285, learning_rate=0.120, train_acc=54.70, train_loss_cross_entropy=1.769, train_loss_seg=1.769, train_loss_smooth=1.718, train_macc=10.28, train_miou=6.726[0m)] 16%|#5        | 31/200 [03:18<08:56,  3.18s/it, [0;92mdata_loading=0.626, iteration=2.203, learning_rate=0.120, train_acc=54.74, train_loss_cross_entropy=1.760, train_loss_seg=1.760, train_loss_smooth=1.708, train_macc=10.33, train_miou=6.750[0m)] 16%|#6        | 32/200 [03:18<08:36,  3.07s/it, [0;92mdata_loading=0.626, iteration=2.203, learning_rate=0.120, train_acc=54.74, train_loss_cross_entropy=1.760, train_loss_seg=1.760, train_loss_smooth=1.708, train_macc=10.33, train_miou=6.750[0m)] 16%|#6        | 32/200 [03:21<08:36,  3.07s/it, [0;92mdata_loading=1.085, iteration=2.330, learning_rate=0.120, train_acc=54.75, train_loss_cross_entropy=1.750, train_loss_seg=1.750, train_loss_smooth=1.696, train_macc=10.37, train_miou=6.773[0m)] 16%|#6        | 33/200 [03:21<08:50,  3.18s/it, [0;92mdata_loading=1.085, iteration=2.330, learning_rate=0.120, train_acc=54.75, train_loss_cross_entropy=1.750, train_loss_seg=1.750, train_loss_smooth=1.696, train_macc=10.37, train_miou=6.773[0m)] 16%|#6        | 33/200 [03:25<08:50,  3.18s/it, [0;92mdata_loading=1.421, iteration=2.849, learning_rate=0.120, train_acc=54.81, train_loss_cross_entropy=1.744, train_loss_seg=1.744, train_loss_smooth=1.691, train_macc=10.47, train_miou=6.836[0m)] 17%|#7        | 34/200 [03:25<09:41,  3.50s/it, [0;92mdata_loading=1.421, iteration=2.849, learning_rate=0.120, train_acc=54.81, train_loss_cross_entropy=1.744, train_loss_seg=1.744, train_loss_smooth=1.691, train_macc=10.47, train_miou=6.836[0m)] 17%|#7        | 34/200 [03:28<09:41,  3.50s/it, [0;92mdata_loading=0.694, iteration=2.397, learning_rate=0.120, train_acc=54.82, train_loss_cross_entropy=1.738, train_loss_seg=1.738, train_loss_smooth=1.684, train_macc=10.54, train_miou=6.907[0m)] 18%|#7        | 35/200 [03:28<09:17,  3.38s/it, [0;92mdata_loading=0.694, iteration=2.397, learning_rate=0.120, train_acc=54.82, train_loss_cross_entropy=1.738, train_loss_seg=1.738, train_loss_smooth=1.684, train_macc=10.54, train_miou=6.907[0m)] 18%|#7        | 35/200 [03:33<09:17,  3.38s/it, [0;92mdata_loading=2.346, iteration=2.240, learning_rate=0.120, train_acc=55.05, train_loss_cross_entropy=1.723, train_loss_seg=1.723, train_loss_smooth=1.666, train_macc=10.64, train_miou=7.006[0m)] 18%|#8        | 36/200 [03:33<10:13,  3.74s/it, [0;92mdata_loading=2.346, iteration=2.240, learning_rate=0.120, train_acc=55.05, train_loss_cross_entropy=1.723, train_loss_seg=1.723, train_loss_smooth=1.666, train_macc=10.64, train_miou=7.006[0m)] 18%|#8        | 36/200 [03:36<10:13,  3.74s/it, [0;92mdata_loading=0.595, iteration=2.239, learning_rate=0.120, train_acc=55.19, train_loss_cross_entropy=1.715, train_loss_seg=1.715, train_loss_smooth=1.656, train_macc=10.76, train_miou=7.123[0m)] 18%|#8        | 37/200 [03:36<09:25,  3.47s/it, [0;92mdata_loading=0.595, iteration=2.239, learning_rate=0.120, train_acc=55.19, train_loss_cross_entropy=1.715, train_loss_seg=1.715, train_loss_smooth=1.656, train_macc=10.76, train_miou=7.123[0m)] 18%|#8        | 37/200 [03:39<09:25,  3.47s/it, [0;92mdata_loading=1.012, iteration=2.507, learning_rate=0.120, train_acc=55.35, train_loss_cross_entropy=1.710, train_loss_seg=1.710, train_loss_smooth=1.651, train_macc=10.90, train_miou=7.270[0m)] 19%|#9        | 38/200 [03:39<09:24,  3.49s/it, [0;92mdata_loading=1.012, iteration=2.507, learning_rate=0.120, train_acc=55.35, train_loss_cross_entropy=1.710, train_loss_seg=1.710, train_loss_smooth=1.651, train_macc=10.90, train_miou=7.270[0m)] 19%|#9        | 38/200 [03:42<09:24,  3.49s/it, [0;92mdata_loading=0.776, iteration=1.574, learning_rate=0.120, train_acc=55.45, train_loss_cross_entropy=1.699, train_loss_seg=1.699, train_loss_smooth=1.638, train_macc=10.96, train_miou=7.331[0m)] 20%|#9        | 39/200 [03:42<08:26,  3.14s/it, [0;92mdata_loading=0.776, iteration=1.574, learning_rate=0.120, train_acc=55.45, train_loss_cross_entropy=1.699, train_loss_seg=1.699, train_loss_smooth=1.638, train_macc=10.96, train_miou=7.331[0m)] 20%|#9        | 39/200 [03:45<08:26,  3.14s/it, [0;92mdata_loading=0.865, iteration=2.694, learning_rate=0.120, train_acc=55.73, train_loss_cross_entropy=1.690, train_loss_seg=1.690, train_loss_smooth=1.628, train_macc=11.09, train_miou=7.460[0m)] 20%|##        | 40/200 [03:45<08:43,  3.27s/it, [0;92mdata_loading=0.865, iteration=2.694, learning_rate=0.120, train_acc=55.73, train_loss_cross_entropy=1.690, train_loss_seg=1.690, train_loss_smooth=1.628, train_macc=11.09, train_miou=7.460[0m)] 20%|##        | 40/200 [03:48<08:43,  3.27s/it, [0;92mdata_loading=0.877, iteration=1.779, learning_rate=0.120, train_acc=55.85, train_loss_cross_entropy=1.685, train_loss_seg=1.685, train_loss_smooth=1.623, train_macc=11.27, train_miou=7.611[0m)] 20%|##        | 41/200 [03:48<08:10,  3.09s/it, [0;92mdata_loading=0.877, iteration=1.779, learning_rate=0.120, train_acc=55.85, train_loss_cross_entropy=1.685, train_loss_seg=1.685, train_loss_smooth=1.623, train_macc=11.27, train_miou=7.611[0m)] 20%|##        | 41/200 [03:51<08:10,  3.09s/it, [0;92mdata_loading=0.653, iteration=2.711, learning_rate=0.120, train_acc=56.06, train_loss_cross_entropy=1.679, train_loss_seg=1.679, train_loss_smooth=1.615, train_macc=11.49, train_miou=7.804[0m)] 21%|##1       | 42/200 [03:51<08:20,  3.17s/it, [0;92mdata_loading=0.653, iteration=2.711, learning_rate=0.120, train_acc=56.06, train_loss_cross_entropy=1.679, train_loss_seg=1.679, train_loss_smooth=1.615, train_macc=11.49, train_miou=7.804[0m)] 21%|##1       | 42/200 [03:55<08:20,  3.17s/it, [0;92mdata_loading=0.944, iteration=3.046, learning_rate=0.120, train_acc=56.31, train_loss_cross_entropy=1.670, train_loss_seg=1.670, train_loss_smooth=1.604, train_macc=11.62, train_miou=7.917[0m)] 22%|##1       | 43/200 [03:55<08:56,  3.42s/it, [0;92mdata_loading=0.944, iteration=3.046, learning_rate=0.120, train_acc=56.31, train_loss_cross_entropy=1.670, train_loss_seg=1.670, train_loss_smooth=1.604, train_macc=11.62, train_miou=7.917[0m)] 22%|##1       | 43/200 [03:59<08:56,  3.42s/it, [0;92mdata_loading=0.825, iteration=2.655, learning_rate=0.120, train_acc=56.49, train_loss_cross_entropy=1.662, train_loss_seg=1.662, train_loss_smooth=1.594, train_macc=11.76, train_miou=8.037[0m)] 22%|##2       | 44/200 [03:59<08:55,  3.44s/it, [0;92mdata_loading=0.825, iteration=2.655, learning_rate=0.120, train_acc=56.49, train_loss_cross_entropy=1.662, train_loss_seg=1.662, train_loss_smooth=1.594, train_macc=11.76, train_miou=8.037[0m)] 22%|##2       | 44/200 [04:03<08:55,  3.44s/it, [0;92mdata_loading=1.320, iteration=2.745, learning_rate=0.120, train_acc=56.62, train_loss_cross_entropy=1.651, train_loss_seg=1.651, train_loss_smooth=1.581, train_macc=11.80, train_miou=8.069[0m)] 22%|##2       | 45/200 [04:03<09:21,  3.62s/it, [0;92mdata_loading=1.320, iteration=2.745, learning_rate=0.120, train_acc=56.62, train_loss_cross_entropy=1.651, train_loss_seg=1.651, train_loss_smooth=1.581, train_macc=11.80, train_miou=8.069[0m)] 22%|##2       | 45/200 [04:06<09:21,  3.62s/it, [0;92mdata_loading=0.774, iteration=2.793, learning_rate=0.120, train_acc=56.70, train_loss_cross_entropy=1.644, train_loss_seg=1.644, train_loss_smooth=1.572, train_macc=11.88, train_miou=8.125[0m)] 23%|##3       | 46/200 [04:06<09:15,  3.61s/it, [0;92mdata_loading=0.774, iteration=2.793, learning_rate=0.120, train_acc=56.70, train_loss_cross_entropy=1.644, train_loss_seg=1.644, train_loss_smooth=1.572, train_macc=11.88, train_miou=8.125[0m)] 23%|##3       | 46/200 [04:11<09:15,  3.61s/it, [0;92mdata_loading=1.427, iteration=2.751, learning_rate=0.120, train_acc=56.64, train_loss_cross_entropy=1.644, train_loss_seg=1.644, train_loss_smooth=1.574, train_macc=11.90, train_miou=8.118[0m)] 24%|##3       | 47/200 [04:11<09:38,  3.78s/it, [0;92mdata_loading=1.427, iteration=2.751, learning_rate=0.120, train_acc=56.64, train_loss_cross_entropy=1.644, train_loss_seg=1.644, train_loss_smooth=1.574, train_macc=11.90, train_miou=8.118[0m)] 24%|##3       | 47/200 [04:14<09:38,  3.78s/it, [0;92mdata_loading=0.896, iteration=2.637, learning_rate=0.120, train_acc=56.85, train_loss_cross_entropy=1.634, train_loss_seg=1.634, train_loss_smooth=1.562, train_macc=11.94, train_miou=8.163[0m)] 24%|##4       | 48/200 [04:14<09:23,  3.71s/it, [0;92mdata_loading=0.896, iteration=2.637, learning_rate=0.120, train_acc=56.85, train_loss_cross_entropy=1.634, train_loss_seg=1.634, train_loss_smooth=1.562, train_macc=11.94, train_miou=8.163[0m)] 24%|##4       | 48/200 [04:18<09:23,  3.71s/it, [0;92mdata_loading=1.545, iteration=2.652, learning_rate=0.120, train_acc=57.03, train_loss_cross_entropy=1.626, train_loss_seg=1.626, train_loss_smooth=1.551, train_macc=12.04, train_miou=8.248[0m)] 24%|##4       | 49/200 [04:18<09:41,  3.85s/it, [0;92mdata_loading=1.545, iteration=2.652, learning_rate=0.120, train_acc=57.03, train_loss_cross_entropy=1.626, train_loss_seg=1.626, train_loss_smooth=1.551, train_macc=12.04, train_miou=8.248[0m)] 24%|##4       | 49/200 [04:21<09:41,  3.85s/it, [0;92mdata_loading=0.723, iteration=1.715, learning_rate=0.120, train_acc=57.21, train_loss_cross_entropy=1.618, train_loss_seg=1.618, train_loss_smooth=1.540, train_macc=12.11, train_miou=8.313[0m)] 25%|##5       | 50/200 [04:21<08:34,  3.43s/it, [0;92mdata_loading=0.723, iteration=1.715, learning_rate=0.120, train_acc=57.21, train_loss_cross_entropy=1.618, train_loss_seg=1.618, train_loss_smooth=1.540, train_macc=12.11, train_miou=8.313[0m)] 25%|##5       | 50/200 [04:24<08:34,  3.43s/it, [0;92mdata_loading=0.693, iteration=2.834, learning_rate=0.120, train_acc=57.30, train_loss_cross_entropy=1.612, train_loss_seg=1.612, train_loss_smooth=1.534, train_macc=12.26, train_miou=8.440[0m)] 26%|##5       | 51/200 [04:24<08:35,  3.46s/it, [0;92mdata_loading=0.693, iteration=2.834, learning_rate=0.120, train_acc=57.30, train_loss_cross_entropy=1.612, train_loss_seg=1.612, train_loss_smooth=1.534, train_macc=12.26, train_miou=8.440[0m)] 26%|##5       | 51/200 [04:27<08:35,  3.46s/it, [0;92mdata_loading=0.837, iteration=2.399, learning_rate=0.120, train_acc=57.46, train_loss_cross_entropy=1.605, train_loss_seg=1.605, train_loss_smooth=1.524, train_macc=12.44, train_miou=8.592[0m)] 26%|##6       | 52/200 [04:27<08:22,  3.39s/it, [0;92mdata_loading=0.837, iteration=2.399, learning_rate=0.120, train_acc=57.46, train_loss_cross_entropy=1.605, train_loss_seg=1.605, train_loss_smooth=1.524, train_macc=12.44, train_miou=8.592[0m)] 26%|##6       | 52/200 [04:30<08:22,  3.39s/it, [0;92mdata_loading=0.625, iteration=2.337, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.598, train_loss_seg=1.598, train_loss_smooth=1.517, train_macc=12.55, train_miou=8.677[0m)] 26%|##6       | 53/200 [04:30<07:59,  3.26s/it, [0;92mdata_loading=0.625, iteration=2.337, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.598, train_loss_seg=1.598, train_loss_smooth=1.517, train_macc=12.55, train_miou=8.677[0m)] 26%|##6       | 53/200 [04:34<07:59,  3.26s/it, [0;92mdata_loading=1.021, iteration=2.408, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_loss_smooth=1.516, train_macc=12.58, train_miou=8.714[0m)] 27%|##7       | 54/200 [04:34<08:03,  3.31s/it, [0;92mdata_loading=1.021, iteration=2.408, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_loss_smooth=1.516, train_macc=12.58, train_miou=8.714[0m)] 27%|##7       | 54/200 [04:38<08:03,  3.31s/it, [0;92mdata_loading=1.288, iteration=2.841, learning_rate=0.120, train_acc=57.76, train_loss_cross_entropy=1.591, train_loss_seg=1.591, train_loss_smooth=1.509, train_macc=12.67, train_miou=8.788[0m)] 28%|##7       | 55/200 [04:38<08:35,  3.56s/it, [0;92mdata_loading=1.288, iteration=2.841, learning_rate=0.120, train_acc=57.76, train_loss_cross_entropy=1.591, train_loss_seg=1.591, train_loss_smooth=1.509, train_macc=12.67, train_miou=8.788[0m)] 28%|##7       | 55/200 [04:41<08:35,  3.56s/it, [0;92mdata_loading=0.590, iteration=2.480, learning_rate=0.120, train_acc=57.71, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_loss_smooth=1.505, train_macc=12.70, train_miou=8.812[0m)] 28%|##8       | 56/200 [04:41<08:11,  3.41s/it, [0;92mdata_loading=0.590, iteration=2.480, learning_rate=0.120, train_acc=57.71, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_loss_smooth=1.505, train_macc=12.70, train_miou=8.812[0m)] 28%|##8       | 56/200 [04:46<08:11,  3.41s/it, [0;92mdata_loading=1.671, iteration=2.819, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.586, train_loss_seg=1.586, train_loss_smooth=1.506, train_macc=12.72, train_miou=8.823[0m)] 28%|##8       | 57/200 [04:46<08:54,  3.74s/it, [0;92mdata_loading=1.671, iteration=2.819, learning_rate=0.120, train_acc=57.64, train_loss_cross_entropy=1.586, train_loss_seg=1.586, train_loss_smooth=1.506, train_macc=12.72, train_miou=8.823[0m)] 28%|##8       | 57/200 [04:49<08:54,  3.74s/it, [0;92mdata_loading=0.768, iteration=2.357, learning_rate=0.120, train_acc=57.84, train_loss_cross_entropy=1.577, train_loss_seg=1.577, train_loss_smooth=1.493, train_macc=12.83, train_miou=8.913[0m)] 29%|##9       | 58/200 [04:49<08:24,  3.55s/it, [0;92mdata_loading=0.768, iteration=2.357, learning_rate=0.120, train_acc=57.84, train_loss_cross_entropy=1.577, train_loss_seg=1.577, train_loss_smooth=1.493, train_macc=12.83, train_miou=8.913[0m)] 29%|##9       | 58/200 [04:51<08:24,  3.55s/it, [0;92mdata_loading=0.646, iteration=1.623, learning_rate=0.120, train_acc=57.99, train_loss_cross_entropy=1.571, train_loss_seg=1.571, train_loss_smooth=1.485, train_macc=12.93, train_miou=8.994[0m)] 30%|##9       | 59/200 [04:51<07:26,  3.17s/it, [0;92mdata_loading=0.646, iteration=1.623, learning_rate=0.120, train_acc=57.99, train_loss_cross_entropy=1.571, train_loss_seg=1.571, train_loss_smooth=1.485, train_macc=12.93, train_miou=8.994[0m)] 30%|##9       | 59/200 [04:55<07:26,  3.17s/it, [0;92mdata_loading=1.324, iteration=2.221, learning_rate=0.120, train_acc=58.15, train_loss_cross_entropy=1.564, train_loss_seg=1.564, train_loss_smooth=1.475, train_macc=13.05, train_miou=9.083[0m)] 30%|###       | 60/200 [04:55<07:39,  3.28s/it, [0;92mdata_loading=1.324, iteration=2.221, learning_rate=0.120, train_acc=58.15, train_loss_cross_entropy=1.564, train_loss_seg=1.564, train_loss_smooth=1.475, train_macc=13.05, train_miou=9.083[0m)] 30%|###       | 60/200 [04:57<07:39,  3.28s/it, [0;92mdata_loading=0.629, iteration=2.297, learning_rate=0.120, train_acc=58.12, train_loss_cross_entropy=1.563, train_loss_seg=1.563, train_loss_smooth=1.477, train_macc=13.15, train_miou=9.149[0m)] 30%|###       | 61/200 [04:57<07:21,  3.17s/it, [0;92mdata_loading=0.629, iteration=2.297, learning_rate=0.120, train_acc=58.12, train_loss_cross_entropy=1.563, train_loss_seg=1.563, train_loss_smooth=1.477, train_macc=13.15, train_miou=9.149[0m)] 30%|###       | 61/200 [05:01<07:21,  3.17s/it, [0;92mdata_loading=0.944, iteration=2.547, learning_rate=0.120, train_acc=58.36, train_loss_cross_entropy=1.557, train_loss_seg=1.557, train_loss_smooth=1.468, train_macc=13.33, train_miou=9.292[0m)] 31%|###1      | 62/200 [05:01<07:31,  3.27s/it, [0;92mdata_loading=0.944, iteration=2.547, learning_rate=0.120, train_acc=58.36, train_loss_cross_entropy=1.557, train_loss_seg=1.557, train_loss_smooth=1.468, train_macc=13.33, train_miou=9.292[0m)] 31%|###1      | 62/200 [05:04<07:31,  3.27s/it, [0;92mdata_loading=0.692, iteration=2.380, learning_rate=0.120, train_acc=58.53, train_loss_cross_entropy=1.553, train_loss_seg=1.553, train_loss_smooth=1.463, train_macc=13.49, train_miou=9.428[0m)] 32%|###1      | 63/200 [05:04<07:19,  3.21s/it, [0;92mdata_loading=0.692, iteration=2.380, learning_rate=0.120, train_acc=58.53, train_loss_cross_entropy=1.553, train_loss_seg=1.553, train_loss_smooth=1.463, train_macc=13.49, train_miou=9.428[0m)] 32%|###1      | 63/200 [05:07<07:19,  3.21s/it, [0;92mdata_loading=0.683, iteration=2.361, learning_rate=0.120, train_acc=58.51, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_loss_smooth=1.464, train_macc=13.63, train_miou=9.535[0m)] 32%|###2      | 64/200 [05:07<07:09,  3.16s/it, [0;92mdata_loading=0.683, iteration=2.361, learning_rate=0.120, train_acc=58.51, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_loss_smooth=1.464, train_macc=13.63, train_miou=9.535[0m)] 32%|###2      | 64/200 [05:10<07:09,  3.16s/it, [0;92mdata_loading=0.919, iteration=2.480, learning_rate=0.120, train_acc=58.60, train_loss_cross_entropy=1.546, train_loss_seg=1.546, train_loss_smooth=1.457, train_macc=13.77, train_miou=9.658[0m)] 32%|###2      | 65/200 [05:10<07:16,  3.23s/it, [0;92mdata_loading=0.919, iteration=2.480, learning_rate=0.120, train_acc=58.60, train_loss_cross_entropy=1.546, train_loss_seg=1.546, train_loss_smooth=1.457, train_macc=13.77, train_miou=9.658[0m)] 32%|###2      | 65/200 [05:14<07:16,  3.23s/it, [0;92mdata_loading=1.287, iteration=2.676, learning_rate=0.120, train_acc=58.75, train_loss_cross_entropy=1.539, train_loss_seg=1.539, train_loss_smooth=1.447, train_macc=13.95, train_miou=9.823[0m)] 33%|###3      | 66/200 [05:14<07:42,  3.45s/it, [0;92mdata_loading=1.287, iteration=2.676, learning_rate=0.120, train_acc=58.75, train_loss_cross_entropy=1.539, train_loss_seg=1.539, train_loss_smooth=1.447, train_macc=13.95, train_miou=9.823[0m)] 33%|###3      | 66/200 [05:18<07:42,  3.45s/it, [0;92mdata_loading=0.840, iteration=2.845, learning_rate=0.120, train_acc=58.70, train_loss_cross_entropy=1.540, train_loss_seg=1.540, train_loss_smooth=1.450, train_macc=14.01, train_miou=9.853[0m)] 34%|###3      | 67/200 [05:18<07:48,  3.52s/it, [0;92mdata_loading=0.840, iteration=2.845, learning_rate=0.120, train_acc=58.70, train_loss_cross_entropy=1.540, train_loss_seg=1.540, train_loss_smooth=1.450, train_macc=14.01, train_miou=9.853[0m)] 34%|###3      | 67/200 [05:22<07:48,  3.52s/it, [0;92mdata_loading=1.540, iteration=2.357, learning_rate=0.120, train_acc=58.84, train_loss_cross_entropy=1.534, train_loss_seg=1.534, train_loss_smooth=1.442, train_macc=14.09, train_miou=9.899[0m)] 34%|###4      | 68/200 [05:22<07:59,  3.63s/it, [0;92mdata_loading=1.540, iteration=2.357, learning_rate=0.120, train_acc=58.84, train_loss_cross_entropy=1.534, train_loss_seg=1.534, train_loss_smooth=1.442, train_macc=14.09, train_miou=9.899[0m)] 34%|###4      | 68/200 [05:25<07:59,  3.63s/it, [0;92mdata_loading=0.592, iteration=2.383, learning_rate=0.120, train_acc=59.01, train_loss_cross_entropy=1.527, train_loss_seg=1.527, train_loss_smooth=1.431, train_macc=14.16, train_miou=9.952[0m)] 34%|###4      | 69/200 [05:25<07:30,  3.44s/it, [0;92mdata_loading=0.592, iteration=2.383, learning_rate=0.120, train_acc=59.01, train_loss_cross_entropy=1.527, train_loss_seg=1.527, train_loss_smooth=1.431, train_macc=14.16, train_miou=9.952[0m)] 34%|###4      | 69/200 [05:28<07:30,  3.44s/it, [0;92mdata_loading=0.628, iteration=2.261, learning_rate=0.121, train_acc=59.24, train_loss_cross_entropy=1.515, train_loss_seg=1.515, train_loss_smooth=1.412, train_macc=14.29, train_miou=10.04[0m)] 35%|###5      | 70/200 [05:28<07:05,  3.27s/it, [0;92mdata_loading=0.628, iteration=2.261, learning_rate=0.121, train_acc=59.24, train_loss_cross_entropy=1.515, train_loss_seg=1.515, train_loss_smooth=1.412, train_macc=14.29, train_miou=10.04[0m)] 35%|###5      | 70/200 [05:32<07:05,  3.27s/it, [0;92mdata_loading=1.887, iteration=2.418, learning_rate=0.121, train_acc=59.30, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_loss_smooth=1.410, train_macc=14.34, train_miou=10.07[0m)] 36%|###5      | 71/200 [05:32<07:42,  3.58s/it, [0;92mdata_loading=1.887, iteration=2.418, learning_rate=0.121, train_acc=59.30, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_loss_smooth=1.410, train_macc=14.34, train_miou=10.07[0m)] 36%|###5      | 71/200 [05:35<07:42,  3.58s/it, [0;92mdata_loading=0.877, iteration=1.541, learning_rate=0.121, train_acc=59.29, train_loss_cross_entropy=1.516, train_loss_seg=1.516, train_loss_smooth=1.419, train_macc=14.40, train_miou=10.11[0m)] 36%|###6      | 72/200 [05:35<06:53,  3.23s/it, [0;92mdata_loading=0.877, iteration=1.541, learning_rate=0.121, train_acc=59.29, train_loss_cross_entropy=1.516, train_loss_seg=1.516, train_loss_smooth=1.419, train_macc=14.40, train_miou=10.11[0m)] 36%|###6      | 72/200 [05:39<06:53,  3.23s/it, [0;92mdata_loading=1.253, iteration=2.750, learning_rate=0.121, train_acc=59.38, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.417, train_macc=14.54, train_miou=10.20[0m)] 36%|###6      | 73/200 [05:39<07:20,  3.46s/it, [0;92mdata_loading=1.253, iteration=2.750, learning_rate=0.121, train_acc=59.38, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.417, train_macc=14.54, train_miou=10.20[0m)] 36%|###6      | 73/200 [05:42<07:20,  3.46s/it, [0;92mdata_loading=0.813, iteration=2.904, learning_rate=0.121, train_acc=59.45, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_loss_smooth=1.417, train_macc=14.64, train_miou=10.27[0m)] 37%|###7      | 74/200 [05:42<07:26,  3.54s/it, [0;92mdata_loading=0.813, iteration=2.904, learning_rate=0.121, train_acc=59.45, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_loss_smooth=1.417, train_macc=14.64, train_miou=10.27[0m)] 37%|###7      | 74/200 [05:46<07:26,  3.54s/it, [0;92mdata_loading=0.827, iteration=2.424, learning_rate=0.121, train_acc=59.49, train_loss_cross_entropy=1.508, train_loss_seg=1.508, train_loss_smooth=1.411, train_macc=14.70, train_miou=10.31[0m)] 38%|###7      | 75/200 [05:46<07:11,  3.45s/it, [0;92mdata_loading=0.827, iteration=2.424, learning_rate=0.121, train_acc=59.49, train_loss_cross_entropy=1.508, train_loss_seg=1.508, train_loss_smooth=1.411, train_macc=14.70, train_miou=10.31[0m)] 38%|###7      | 75/200 [05:49<07:11,  3.45s/it, [0;92mdata_loading=1.215, iteration=1.895, learning_rate=0.121, train_acc=59.54, train_loss_cross_entropy=1.505, train_loss_seg=1.505, train_loss_smooth=1.407, train_macc=14.75, train_miou=10.34[0m)] 38%|###8      | 76/200 [05:49<06:55,  3.35s/it, [0;92mdata_loading=1.215, iteration=1.895, learning_rate=0.121, train_acc=59.54, train_loss_cross_entropy=1.505, train_loss_seg=1.505, train_loss_smooth=1.407, train_macc=14.75, train_miou=10.34[0m)] 38%|###8      | 76/200 [05:53<06:55,  3.35s/it, [0;92mdata_loading=1.496, iteration=2.625, learning_rate=0.121, train_acc=59.56, train_loss_cross_entropy=1.501, train_loss_seg=1.501, train_loss_smooth=1.403, train_macc=14.83, train_miou=10.39[0m)] 38%|###8      | 77/200 [05:53<07:20,  3.58s/it, [0;92mdata_loading=1.496, iteration=2.625, learning_rate=0.121, train_acc=59.56, train_loss_cross_entropy=1.501, train_loss_seg=1.501, train_loss_smooth=1.403, train_macc=14.83, train_miou=10.39[0m)] 38%|###8      | 77/200 [05:56<07:20,  3.58s/it, [0;92mdata_loading=0.722, iteration=2.365, learning_rate=0.121, train_acc=59.57, train_loss_cross_entropy=1.500, train_loss_seg=1.500, train_loss_smooth=1.403, train_macc=14.85, train_miou=10.41[0m)] 39%|###9      | 78/200 [05:56<06:58,  3.43s/it, [0;92mdata_loading=0.722, iteration=2.365, learning_rate=0.121, train_acc=59.57, train_loss_cross_entropy=1.500, train_loss_seg=1.500, train_loss_smooth=1.403, train_macc=14.85, train_miou=10.41[0m)] 39%|###9      | 78/200 [05:59<06:58,  3.43s/it, [0;92mdata_loading=1.747, iteration=1.812, learning_rate=0.121, train_acc=59.63, train_loss_cross_entropy=1.496, train_loss_seg=1.496, train_loss_smooth=1.398, train_macc=14.92, train_miou=10.46[0m)] 40%|###9      | 79/200 [05:59<07:00,  3.47s/it, [0;92mdata_loading=1.747, iteration=1.812, learning_rate=0.121, train_acc=59.63, train_loss_cross_entropy=1.496, train_loss_seg=1.496, train_loss_smooth=1.398, train_macc=14.92, train_miou=10.46[0m)] 40%|###9      | 79/200 [06:03<07:00,  3.47s/it, [0;92mdata_loading=0.886, iteration=2.948, learning_rate=0.121, train_acc=59.67, train_loss_cross_entropy=1.494, train_loss_seg=1.494, train_loss_smooth=1.396, train_macc=15.01, train_miou=10.52[0m)] 40%|####      | 80/200 [06:03<07:09,  3.58s/it, [0;92mdata_loading=0.886, iteration=2.948, learning_rate=0.121, train_acc=59.67, train_loss_cross_entropy=1.494, train_loss_seg=1.494, train_loss_smooth=1.396, train_macc=15.01, train_miou=10.52[0m)] 40%|####      | 80/200 [06:07<07:09,  3.58s/it, [0;92mdata_loading=0.871, iteration=2.787, learning_rate=0.121, train_acc=59.73, train_loss_cross_entropy=1.490, train_loss_seg=1.490, train_loss_smooth=1.391, train_macc=15.04, train_miou=10.55[0m)] 40%|####      | 81/200 [06:07<07:08,  3.60s/it, [0;92mdata_loading=0.871, iteration=2.787, learning_rate=0.121, train_acc=59.73, train_loss_cross_entropy=1.490, train_loss_seg=1.490, train_loss_smooth=1.391, train_macc=15.04, train_miou=10.55[0m)] 40%|####      | 81/200 [06:11<07:08,  3.60s/it, [0;92mdata_loading=1.189, iteration=2.997, learning_rate=0.121, train_acc=59.84, train_loss_cross_entropy=1.487, train_loss_seg=1.487, train_loss_smooth=1.387, train_macc=15.15, train_miou=10.63[0m)] 41%|####1     | 82/200 [06:11<07:25,  3.78s/it, [0;92mdata_loading=1.189, iteration=2.997, learning_rate=0.121, train_acc=59.84, train_loss_cross_entropy=1.487, train_loss_seg=1.487, train_loss_smooth=1.387, train_macc=15.15, train_miou=10.63[0m)] 41%|####1     | 82/200 [06:15<07:25,  3.78s/it, [0;92mdata_loading=0.790, iteration=2.731, learning_rate=0.121, train_acc=59.94, train_loss_cross_entropy=1.482, train_loss_seg=1.482, train_loss_smooth=1.379, train_macc=15.26, train_miou=10.71[0m)] 42%|####1     | 83/200 [06:15<07:13,  3.70s/it, [0;92mdata_loading=0.790, iteration=2.731, learning_rate=0.121, train_acc=59.94, train_loss_cross_entropy=1.482, train_loss_seg=1.482, train_loss_smooth=1.379, train_macc=15.26, train_miou=10.71[0m)] 42%|####1     | 83/200 [06:19<07:13,  3.70s/it, [0;92mdata_loading=1.076, iteration=2.831, learning_rate=0.121, train_acc=60.15, train_loss_cross_entropy=1.475, train_loss_seg=1.475, train_loss_smooth=1.368, train_macc=15.37, train_miou=10.80[0m)] 42%|####2     | 84/200 [06:19<07:16,  3.76s/it, [0;92mdata_loading=1.076, iteration=2.831, learning_rate=0.121, train_acc=60.15, train_loss_cross_entropy=1.475, train_loss_seg=1.475, train_loss_smooth=1.368, train_macc=15.37, train_miou=10.80[0m)] 42%|####2     | 84/200 [06:22<07:16,  3.76s/it, [0;92mdata_loading=0.901, iteration=2.820, learning_rate=0.121, train_acc=60.23, train_loss_cross_entropy=1.471, train_loss_seg=1.471, train_loss_smooth=1.362, train_macc=15.44, train_miou=10.86[0m)] 42%|####2     | 85/200 [06:22<07:11,  3.75s/it, [0;92mdata_loading=0.901, iteration=2.820, learning_rate=0.121, train_acc=60.23, train_loss_cross_entropy=1.471, train_loss_seg=1.471, train_loss_smooth=1.362, train_macc=15.44, train_miou=10.86[0m)] 42%|####2     | 85/200 [06:27<07:11,  3.75s/it, [0;92mdata_loading=0.739, iteration=3.921, learning_rate=0.121, train_acc=60.26, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.363, train_macc=15.51, train_miou=10.90[0m)] 43%|####3     | 86/200 [06:27<07:38,  4.02s/it, [0;92mdata_loading=0.739, iteration=3.921, learning_rate=0.121, train_acc=60.26, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.363, train_macc=15.51, train_miou=10.90[0m)] 43%|####3     | 86/200 [06:31<07:38,  4.02s/it, [0;92mdata_loading=1.231, iteration=2.582, learning_rate=0.121, train_acc=60.34, train_loss_cross_entropy=1.467, train_loss_seg=1.467, train_loss_smooth=1.359, train_macc=15.60, train_miou=10.97[0m)] 44%|####3     | 87/200 [06:31<07:27,  3.96s/it, [0;92mdata_loading=1.231, iteration=2.582, learning_rate=0.121, train_acc=60.34, train_loss_cross_entropy=1.467, train_loss_seg=1.467, train_loss_smooth=1.359, train_macc=15.60, train_miou=10.97[0m)] 44%|####3     | 87/200 [06:35<07:27,  3.96s/it, [0;92mdata_loading=1.614, iteration=2.956, learning_rate=0.121, train_acc=60.49, train_loss_cross_entropy=1.461, train_loss_seg=1.461, train_loss_smooth=1.348, train_macc=15.66, train_miou=11.03[0m)] 44%|####4     | 88/200 [06:35<07:44,  4.14s/it, [0;92mdata_loading=1.614, iteration=2.956, learning_rate=0.121, train_acc=60.49, train_loss_cross_entropy=1.461, train_loss_seg=1.461, train_loss_smooth=1.348, train_macc=15.66, train_miou=11.03[0m)] 44%|####4     | 88/200 [06:39<07:44,  4.14s/it, [0;92mdata_loading=0.927, iteration=2.959, learning_rate=0.121, train_acc=60.65, train_loss_cross_entropy=1.455, train_loss_seg=1.455, train_loss_smooth=1.339, train_macc=15.79, train_miou=11.13[0m)] 44%|####4     | 89/200 [06:39<07:31,  4.07s/it, [0;92mdata_loading=0.927, iteration=2.959, learning_rate=0.121, train_acc=60.65, train_loss_cross_entropy=1.455, train_loss_seg=1.455, train_loss_smooth=1.339, train_macc=15.79, train_miou=11.13[0m)] 44%|####4     | 89/200 [06:43<07:31,  4.07s/it, [0;92mdata_loading=1.175, iteration=2.420, learning_rate=0.121, train_acc=60.76, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=1.335, train_macc=15.91, train_miou=11.22[0m)] 45%|####5     | 90/200 [06:43<07:11,  3.93s/it, [0;92mdata_loading=1.175, iteration=2.420, learning_rate=0.121, train_acc=60.76, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=1.335, train_macc=15.91, train_miou=11.22[0m)] 45%|####5     | 90/200 [06:47<07:11,  3.93s/it, [0;92mdata_loading=1.544, iteration=2.858, learning_rate=0.121, train_acc=60.89, train_loss_cross_entropy=1.449, train_loss_seg=1.449, train_loss_smooth=1.332, train_macc=16.03, train_miou=11.31[0m)] 46%|####5     | 91/200 [06:47<07:23,  4.07s/it, [0;92mdata_loading=1.544, iteration=2.858, learning_rate=0.121, train_acc=60.89, train_loss_cross_entropy=1.449, train_loss_seg=1.449, train_loss_smooth=1.332, train_macc=16.03, train_miou=11.31[0m)] 46%|####5     | 91/200 [06:50<07:23,  4.07s/it, [0;92mdata_loading=0.562, iteration=2.290, learning_rate=0.121, train_acc=61.07, train_loss_cross_entropy=1.443, train_loss_seg=1.443, train_loss_smooth=1.321, train_macc=16.19, train_miou=11.44[0m)] 46%|####6     | 92/200 [06:50<06:40,  3.70s/it, [0;92mdata_loading=0.562, iteration=2.290, learning_rate=0.121, train_acc=61.07, train_loss_cross_entropy=1.443, train_loss_seg=1.443, train_loss_smooth=1.321, train_macc=16.19, train_miou=11.44[0m)] 46%|####6     | 92/200 [06:53<06:40,  3.70s/it, [0;92mdata_loading=0.564, iteration=2.085, learning_rate=0.121, train_acc=61.13, train_loss_cross_entropy=1.440, train_loss_seg=1.440, train_loss_smooth=1.317, train_macc=16.31, train_miou=11.53[0m)] 46%|####6     | 93/200 [06:53<06:02,  3.39s/it, [0;92mdata_loading=0.564, iteration=2.085, learning_rate=0.121, train_acc=61.13, train_loss_cross_entropy=1.440, train_loss_seg=1.440, train_loss_smooth=1.317, train_macc=16.31, train_miou=11.53[0m)] 46%|####6     | 93/200 [06:56<06:02,  3.39s/it, [0;92mdata_loading=0.576, iteration=2.334, learning_rate=0.121, train_acc=61.14, train_loss_cross_entropy=1.439, train_loss_seg=1.439, train_loss_smooth=1.318, train_macc=16.39, train_miou=11.58[0m)] 47%|####6     | 94/200 [06:56<05:43,  3.24s/it, [0;92mdata_loading=0.576, iteration=2.334, learning_rate=0.121, train_acc=61.14, train_loss_cross_entropy=1.439, train_loss_seg=1.439, train_loss_smooth=1.318, train_macc=16.39, train_miou=11.58[0m)] 47%|####6     | 94/200 [06:59<05:43,  3.24s/it, [0;92mdata_loading=0.922, iteration=2.266, learning_rate=0.121, train_acc=61.20, train_loss_cross_entropy=1.436, train_loss_seg=1.436, train_loss_smooth=1.314, train_macc=16.48, train_miou=11.65[0m)] 48%|####7     | 95/200 [06:59<05:38,  3.23s/it, [0;92mdata_loading=0.922, iteration=2.266, learning_rate=0.121, train_acc=61.20, train_loss_cross_entropy=1.436, train_loss_seg=1.436, train_loss_smooth=1.314, train_macc=16.48, train_miou=11.65[0m)] 48%|####7     | 95/200 [07:03<05:38,  3.23s/it, [0;92mdata_loading=1.440, iteration=2.698, learning_rate=0.121, train_acc=61.20, train_loss_cross_entropy=1.435, train_loss_seg=1.435, train_loss_smooth=1.315, train_macc=16.57, train_miou=11.70[0m)] 48%|####8     | 96/200 [07:03<06:04,  3.50s/it, [0;92mdata_loading=1.440, iteration=2.698, learning_rate=0.121, train_acc=61.20, train_loss_cross_entropy=1.435, train_loss_seg=1.435, train_loss_smooth=1.315, train_macc=16.57, train_miou=11.70[0m)] 48%|####8     | 96/200 [07:06<06:04,  3.50s/it, [0;92mdata_loading=0.709, iteration=2.800, learning_rate=0.121, train_acc=61.26, train_loss_cross_entropy=1.433, train_loss_seg=1.433, train_loss_smooth=1.313, train_macc=16.66, train_miou=11.77[0m)] 48%|####8     | 97/200 [07:06<06:00,  3.50s/it, [0;92mdata_loading=0.709, iteration=2.800, learning_rate=0.121, train_acc=61.26, train_loss_cross_entropy=1.433, train_loss_seg=1.433, train_loss_smooth=1.313, train_macc=16.66, train_miou=11.77[0m)] 48%|####8     | 97/200 [07:10<06:00,  3.50s/it, [0;92mdata_loading=0.754, iteration=2.942, learning_rate=0.121, train_acc=61.36, train_loss_cross_entropy=1.430, train_loss_seg=1.430, train_loss_smooth=1.309, train_macc=16.70, train_miou=11.82[0m)] 49%|####9     | 98/200 [07:10<06:03,  3.56s/it, [0;92mdata_loading=0.754, iteration=2.942, learning_rate=0.121, train_acc=61.36, train_loss_cross_entropy=1.430, train_loss_seg=1.430, train_loss_smooth=1.309, train_macc=16.70, train_miou=11.82[0m)] 49%|####9     | 98/200 [07:15<06:03,  3.56s/it, [0;92mdata_loading=1.355, iteration=3.134, learning_rate=0.121, train_acc=61.43, train_loss_cross_entropy=1.428, train_loss_seg=1.428, train_loss_smooth=1.306, train_macc=16.79, train_miou=11.88[0m)] 50%|####9     | 99/200 [07:15<06:27,  3.84s/it, [0;92mdata_loading=1.355, iteration=3.134, learning_rate=0.121, train_acc=61.43, train_loss_cross_entropy=1.428, train_loss_seg=1.428, train_loss_smooth=1.306, train_macc=16.79, train_miou=11.88[0m)] 50%|####9     | 99/200 [07:18<06:27,  3.84s/it, [0;92mdata_loading=0.872, iteration=2.510, learning_rate=0.122, train_acc=61.55, train_loss_cross_entropy=1.422, train_loss_seg=1.422, train_loss_smooth=1.296, train_macc=16.91, train_miou=11.96[0m)] 50%|#####     | 100/200 [07:18<06:10,  3.70s/it, [0;92mdata_loading=0.872, iteration=2.510, learning_rate=0.122, train_acc=61.55, train_loss_cross_entropy=1.422, train_loss_seg=1.422, train_loss_smooth=1.296, train_macc=16.91, train_miou=11.96[0m)] 50%|#####     | 100/200 [07:21<06:10,  3.70s/it, [0;92mdata_loading=0.949, iteration=2.294, learning_rate=0.122, train_acc=61.52, train_loss_cross_entropy=1.424, train_loss_seg=1.424, train_loss_smooth=1.303, train_macc=16.93, train_miou=11.97[0m)] 50%|#####     | 101/200 [07:21<05:52,  3.57s/it, [0;92mdata_loading=0.949, iteration=2.294, learning_rate=0.122, train_acc=61.52, train_loss_cross_entropy=1.424, train_loss_seg=1.424, train_loss_smooth=1.303, train_macc=16.93, train_miou=11.97[0m)] 50%|#####     | 101/200 [07:26<05:52,  3.57s/it, [0;92mdata_loading=1.854, iteration=2.683, learning_rate=0.122, train_acc=61.65, train_loss_cross_entropy=1.420, train_loss_seg=1.420, train_loss_smooth=1.297, train_macc=17.07, train_miou=12.08[0m)] 51%|#####1    | 102/200 [07:26<06:17,  3.86s/it, [0;92mdata_loading=1.854, iteration=2.683, learning_rate=0.122, train_acc=61.65, train_loss_cross_entropy=1.420, train_loss_seg=1.420, train_loss_smooth=1.297, train_macc=17.07, train_miou=12.08[0m)] 51%|#####1    | 102/200 [07:29<06:17,  3.86s/it, [0;92mdata_loading=0.644, iteration=2.445, learning_rate=0.122, train_acc=61.67, train_loss_cross_entropy=1.419, train_loss_seg=1.419, train_loss_smooth=1.296, train_macc=17.14, train_miou=12.14[0m)] 52%|#####1    | 103/200 [07:29<05:51,  3.63s/it, [0;92mdata_loading=0.644, iteration=2.445, learning_rate=0.122, train_acc=61.67, train_loss_cross_entropy=1.419, train_loss_seg=1.419, train_loss_smooth=1.296, train_macc=17.14, train_miou=12.14[0m)] 52%|#####1    | 103/200 [07:32<05:51,  3.63s/it, [0;92mdata_loading=0.758, iteration=2.603, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.416, train_loss_seg=1.416, train_loss_smooth=1.293, train_macc=17.25, train_miou=12.23[0m)] 52%|#####2    | 104/200 [07:32<05:40,  3.55s/it, [0;92mdata_loading=0.758, iteration=2.603, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.416, train_loss_seg=1.416, train_loss_smooth=1.293, train_macc=17.25, train_miou=12.23[0m)] 52%|#####2    | 104/200 [07:35<05:40,  3.55s/it, [0;92mdata_loading=0.664, iteration=2.409, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.415, train_loss_seg=1.415, train_loss_smooth=1.293, train_macc=17.33, train_miou=12.29[0m)] 52%|#####2    | 105/200 [07:35<05:23,  3.41s/it, [0;92mdata_loading=0.664, iteration=2.409, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.415, train_loss_seg=1.415, train_loss_smooth=1.293, train_macc=17.33, train_miou=12.29[0m)] 52%|#####2    | 105/200 [07:39<05:23,  3.41s/it, [0;92mdata_loading=1.090, iteration=2.439, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.414, train_loss_seg=1.414, train_loss_smooth=1.294, train_macc=17.36, train_miou=12.32[0m)] 53%|#####3    | 106/200 [07:39<05:23,  3.44s/it, [0;92mdata_loading=1.090, iteration=2.439, learning_rate=0.122, train_acc=61.71, train_loss_cross_entropy=1.414, train_loss_seg=1.414, train_loss_smooth=1.294, train_macc=17.36, train_miou=12.32[0m)] 53%|#####3    | 106/200 [07:43<05:23,  3.44s/it, [0;92mdata_loading=1.611, iteration=2.737, learning_rate=0.122, train_acc=61.75, train_loss_cross_entropy=1.412, train_loss_seg=1.412, train_loss_smooth=1.291, train_macc=17.44, train_miou=12.38[0m)] 54%|#####3    | 107/200 [07:43<05:45,  3.71s/it, [0;92mdata_loading=1.611, iteration=2.737, learning_rate=0.122, train_acc=61.75, train_loss_cross_entropy=1.412, train_loss_seg=1.412, train_loss_smooth=1.291, train_macc=17.44, train_miou=12.38[0m)] 54%|#####3    | 107/200 [07:46<05:45,  3.71s/it, [0;92mdata_loading=0.819, iteration=2.292, learning_rate=0.122, train_acc=61.82, train_loss_cross_entropy=1.409, train_loss_seg=1.409, train_loss_smooth=1.286, train_macc=17.54, train_miou=12.46[0m)] 54%|#####4    | 108/200 [07:46<05:25,  3.53s/it, [0;92mdata_loading=0.819, iteration=2.292, learning_rate=0.122, train_acc=61.82, train_loss_cross_entropy=1.409, train_loss_seg=1.409, train_loss_smooth=1.286, train_macc=17.54, train_miou=12.46[0m)] 54%|#####4    | 108/200 [07:49<05:25,  3.53s/it, [0;92mdata_loading=0.647, iteration=1.541, learning_rate=0.122, train_acc=61.90, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.281, train_macc=17.61, train_miou=12.51[0m)] 55%|#####4    | 109/200 [07:49<04:44,  3.13s/it, [0;92mdata_loading=0.647, iteration=1.541, learning_rate=0.122, train_acc=61.90, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.281, train_macc=17.61, train_miou=12.51[0m)] 55%|#####4    | 109/200 [07:53<04:44,  3.13s/it, [0;92mdata_loading=1.467, iteration=2.652, learning_rate=0.122, train_acc=61.98, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.274, train_macc=17.67, train_miou=12.56[0m)] 55%|#####5    | 110/200 [07:53<05:08,  3.43s/it, [0;92mdata_loading=1.467, iteration=2.652, learning_rate=0.122, train_acc=61.98, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.274, train_macc=17.67, train_miou=12.56[0m)] 55%|#####5    | 110/200 [07:56<05:08,  3.43s/it, [0;92mdata_loading=0.802, iteration=2.890, learning_rate=0.122, train_acc=61.98, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.276, train_macc=17.71, train_miou=12.59[0m)] 56%|#####5    | 111/200 [07:56<05:12,  3.51s/it, [0;92mdata_loading=0.802, iteration=2.890, learning_rate=0.122, train_acc=61.98, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.276, train_macc=17.71, train_miou=12.59[0m)] 56%|#####5    | 111/200 [07:59<05:12,  3.51s/it, [0;92mdata_loading=1.118, iteration=1.829, learning_rate=0.122, train_acc=62.03, train_loss_cross_entropy=1.398, train_loss_seg=1.398, train_loss_smooth=1.271, train_macc=17.78, train_miou=12.65[0m)] 56%|#####6    | 112/200 [07:59<04:53,  3.34s/it, [0;92mdata_loading=1.118, iteration=1.829, learning_rate=0.122, train_acc=62.03, train_loss_cross_entropy=1.398, train_loss_seg=1.398, train_loss_smooth=1.271, train_macc=17.78, train_miou=12.65[0m)] 56%|#####6    | 112/200 [08:03<04:53,  3.34s/it, [0;92mdata_loading=1.222, iteration=2.326, learning_rate=0.122, train_acc=62.14, train_loss_cross_entropy=1.393, train_loss_seg=1.393, train_loss_smooth=1.262, train_macc=17.89, train_miou=12.74[0m)] 56%|#####6    | 113/200 [08:03<04:55,  3.40s/it, [0;92mdata_loading=1.222, iteration=2.326, learning_rate=0.122, train_acc=62.14, train_loss_cross_entropy=1.393, train_loss_seg=1.393, train_loss_smooth=1.262, train_macc=17.89, train_miou=12.74[0m)] 56%|#####6    | 113/200 [08:07<04:55,  3.40s/it, [0;92mdata_loading=1.19 , iteration=2.529, learning_rate=0.122, train_acc=62.24, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.259, train_macc=17.98, train_miou=12.80[0m)] 57%|#####6    | 114/200 [08:07<05:00,  3.50s/it, [0;92mdata_loading=1.19 , iteration=2.529, learning_rate=0.122, train_acc=62.24, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.259, train_macc=17.98, train_miou=12.80[0m)] 57%|#####6    | 114/200 [08:10<05:00,  3.50s/it, [0;92mdata_loading=0.801, iteration=2.844, learning_rate=0.122, train_acc=62.27, train_loss_cross_entropy=1.390, train_loss_seg=1.390, train_loss_smooth=1.260, train_macc=18.06, train_miou=12.86[0m)] 57%|#####7    | 115/200 [08:10<05:01,  3.54s/it, [0;92mdata_loading=0.801, iteration=2.844, learning_rate=0.122, train_acc=62.27, train_loss_cross_entropy=1.390, train_loss_seg=1.390, train_loss_smooth=1.260, train_macc=18.06, train_miou=12.86[0m)] 57%|#####7    | 115/200 [08:13<05:01,  3.54s/it, [0;92mdata_loading=0.835, iteration=2.283, learning_rate=0.122, train_acc=62.29, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.264, train_macc=18.09, train_miou=12.88[0m)] 58%|#####8    | 116/200 [08:13<04:46,  3.42s/it, [0;92mdata_loading=0.835, iteration=2.283, learning_rate=0.122, train_acc=62.29, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.264, train_macc=18.09, train_miou=12.88[0m)] 58%|#####8    | 116/200 [08:17<04:46,  3.42s/it, [0;92mdata_loading=1.060, iteration=2.447, learning_rate=0.122, train_acc=62.38, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.259, train_macc=18.16, train_miou=12.92[0m)] 58%|#####8    | 117/200 [08:17<04:45,  3.44s/it, [0;92mdata_loading=1.060, iteration=2.447, learning_rate=0.122, train_acc=62.38, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.259, train_macc=18.16, train_miou=12.92[0m)] 58%|#####8    | 117/200 [08:21<04:45,  3.44s/it, [0;92mdata_loading=1.428, iteration=2.917, learning_rate=0.122, train_acc=62.39, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.261, train_macc=18.26, train_miou=13.00[0m)] 59%|#####8    | 118/200 [08:21<05:04,  3.71s/it, [0;92mdata_loading=1.428, iteration=2.917, learning_rate=0.122, train_acc=62.39, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.261, train_macc=18.26, train_miou=13.00[0m)] 59%|#####8    | 118/200 [08:25<05:04,  3.71s/it, [0;92mdata_loading=1.098, iteration=2.955, learning_rate=0.122, train_acc=62.45, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.263, train_macc=18.29, train_miou=13.03[0m)] 60%|#####9    | 119/200 [08:25<05:09,  3.82s/it, [0;92mdata_loading=1.098, iteration=2.955, learning_rate=0.122, train_acc=62.45, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.263, train_macc=18.29, train_miou=13.03[0m)] 60%|#####9    | 119/200 [08:28<05:09,  3.82s/it, [0;92mdata_loading=0.620, iteration=2.605, learning_rate=0.122, train_acc=62.43, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.267, train_macc=18.32, train_miou=13.04[0m)] 60%|######    | 120/200 [08:28<04:51,  3.64s/it, [0;92mdata_loading=0.620, iteration=2.605, learning_rate=0.122, train_acc=62.43, train_loss_cross_entropy=1.387, train_loss_seg=1.387, train_loss_smooth=1.267, train_macc=18.32, train_miou=13.04[0m)] 60%|######    | 120/200 [08:32<04:51,  3.64s/it, [0;92mdata_loading=0.634, iteration=2.566, learning_rate=0.122, train_acc=62.44, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.270, train_macc=18.34, train_miou=13.05[0m)] 60%|######    | 121/200 [08:32<04:37,  3.51s/it, [0;92mdata_loading=0.634, iteration=2.566, learning_rate=0.122, train_acc=62.44, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.270, train_macc=18.34, train_miou=13.05[0m)] 60%|######    | 121/200 [08:35<04:37,  3.51s/it, [0;92mdata_loading=0.681, iteration=2.385, learning_rate=0.122, train_acc=62.48, train_loss_cross_entropy=1.386, train_loss_seg=1.386, train_loss_smooth=1.267, train_macc=18.34, train_miou=13.06[0m)] 61%|######1   | 122/200 [08:35<04:23,  3.38s/it, [0;92mdata_loading=0.681, iteration=2.385, learning_rate=0.122, train_acc=62.48, train_loss_cross_entropy=1.386, train_loss_seg=1.386, train_loss_smooth=1.267, train_macc=18.34, train_miou=13.06[0m)] 61%|######1   | 122/200 [08:38<04:23,  3.38s/it, [0;92mdata_loading=1.123, iteration=2.456, learning_rate=0.123, train_acc=62.58, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.260, train_macc=18.41, train_miou=13.11[0m)] 62%|######1   | 123/200 [08:38<04:24,  3.44s/it, [0;92mdata_loading=1.123, iteration=2.456, learning_rate=0.123, train_acc=62.58, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.260, train_macc=18.41, train_miou=13.11[0m)] 62%|######1   | 123/200 [08:43<04:24,  3.44s/it, [0;92mdata_loading=1.720, iteration=3.094, learning_rate=0.123, train_acc=62.58, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.264, train_macc=18.42, train_miou=13.11[0m)] 62%|######2   | 124/200 [08:43<04:52,  3.85s/it, [0;92mdata_loading=1.720, iteration=3.094, learning_rate=0.123, train_acc=62.58, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.264, train_macc=18.42, train_miou=13.11[0m)] 62%|######2   | 124/200 [08:47<04:52,  3.85s/it, [0;92mdata_loading=0.897, iteration=3.068, learning_rate=0.123, train_acc=62.67, train_loss_cross_entropy=1.381, train_loss_seg=1.381, train_loss_smooth=1.262, train_macc=18.52, train_miou=13.18[0m)] 62%|######2   | 125/200 [08:47<04:51,  3.88s/it, [0;92mdata_loading=0.897, iteration=3.068, learning_rate=0.123, train_acc=62.67, train_loss_cross_entropy=1.381, train_loss_seg=1.381, train_loss_smooth=1.262, train_macc=18.52, train_miou=13.18[0m)] 62%|######2   | 125/200 [08:51<04:51,  3.88s/it, [0;92mdata_loading=0.894, iteration=2.821, learning_rate=0.123, train_acc=62.77, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.256, train_macc=18.58, train_miou=13.22[0m)] 63%|######3   | 126/200 [08:51<04:43,  3.83s/it, [0;92mdata_loading=0.894, iteration=2.821, learning_rate=0.123, train_acc=62.77, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.256, train_macc=18.58, train_miou=13.22[0m)] 63%|######3   | 126/200 [08:55<04:43,  3.83s/it, [0;92mdata_loading=1.346, iteration=2.681, learning_rate=0.123, train_acc=62.86, train_loss_cross_entropy=1.375, train_loss_seg=1.375, train_loss_smooth=1.251, train_macc=18.65, train_miou=13.26[0m)] 64%|######3   | 127/200 [08:55<04:44,  3.89s/it, [0;92mdata_loading=1.346, iteration=2.681, learning_rate=0.123, train_acc=62.86, train_loss_cross_entropy=1.375, train_loss_seg=1.375, train_loss_smooth=1.251, train_macc=18.65, train_miou=13.26[0m)] 64%|######3   | 127/200 [08:57<04:44,  3.89s/it, [0;92mdata_loading=0.674, iteration=1.681, learning_rate=0.123, train_acc=62.94, train_loss_cross_entropy=1.371, train_loss_seg=1.371, train_loss_smooth=1.244, train_macc=18.72, train_miou=13.32[0m)] 64%|######4   | 128/200 [08:57<04:07,  3.43s/it, [0;92mdata_loading=0.674, iteration=1.681, learning_rate=0.123, train_acc=62.94, train_loss_cross_entropy=1.371, train_loss_seg=1.371, train_loss_smooth=1.244, train_macc=18.72, train_miou=13.32[0m)] 64%|######4   | 128/200 [09:01<04:07,  3.43s/it, [0;92mdata_loading=1.090, iteration=2.790, learning_rate=0.123, train_acc=62.98, train_loss_cross_entropy=1.370, train_loss_seg=1.370, train_loss_smooth=1.242, train_macc=18.77, train_miou=13.37[0m)] 64%|######4   | 129/200 [09:01<04:13,  3.57s/it, [0;92mdata_loading=1.090, iteration=2.790, learning_rate=0.123, train_acc=62.98, train_loss_cross_entropy=1.370, train_loss_seg=1.370, train_loss_smooth=1.242, train_macc=18.77, train_miou=13.37[0m)] 64%|######4   | 129/200 [09:06<04:13,  3.57s/it, [0;92mdata_loading=1.846, iteration=2.729, learning_rate=0.123, train_acc=63.05, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_loss_smooth=1.241, train_macc=18.81, train_miou=13.40[0m)] 65%|######5   | 130/200 [09:06<04:30,  3.87s/it, [0;92mdata_loading=1.846, iteration=2.729, learning_rate=0.123, train_acc=63.05, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_loss_smooth=1.241, train_macc=18.81, train_miou=13.40[0m)] 65%|######5   | 130/200 [09:08<04:30,  3.87s/it, [0;92mdata_loading=0.726, iteration=1.551, learning_rate=0.123, train_acc=63.08, train_loss_cross_entropy=1.367, train_loss_seg=1.367, train_loss_smooth=1.240, train_macc=18.88, train_miou=13.45[0m)] 66%|######5   | 131/200 [09:08<03:54,  3.39s/it, [0;92mdata_loading=0.726, iteration=1.551, learning_rate=0.123, train_acc=63.08, train_loss_cross_entropy=1.367, train_loss_seg=1.367, train_loss_smooth=1.240, train_macc=18.88, train_miou=13.45[0m)] 66%|######5   | 131/200 [09:11<03:54,  3.39s/it, [0;92mdata_loading=0.892, iteration=2.495, learning_rate=0.123, train_acc=63.14, train_loss_cross_entropy=1.365, train_loss_seg=1.365, train_loss_smooth=1.236, train_macc=18.89, train_miou=13.47[0m)] 66%|######6   | 132/200 [09:11<03:50,  3.39s/it, [0;92mdata_loading=0.892, iteration=2.495, learning_rate=0.123, train_acc=63.14, train_loss_cross_entropy=1.365, train_loss_seg=1.365, train_loss_smooth=1.236, train_macc=18.89, train_miou=13.47[0m)] 66%|######6   | 132/200 [09:15<03:50,  3.39s/it, [0;92mdata_loading=0.724, iteration=3.072, learning_rate=0.123, train_acc=63.23, train_loss_cross_entropy=1.363, train_loss_seg=1.363, train_loss_smooth=1.233, train_macc=19.0 , train_miou=13.55[0m)] 66%|######6   | 133/200 [09:15<03:55,  3.51s/it, [0;92mdata_loading=0.724, iteration=3.072, learning_rate=0.123, train_acc=63.23, train_loss_cross_entropy=1.363, train_loss_seg=1.363, train_loss_smooth=1.233, train_macc=19.0 , train_miou=13.55[0m)] 66%|######6   | 133/200 [09:19<03:55,  3.51s/it, [0;92mdata_loading=0.851, iteration=2.807, learning_rate=0.123, train_acc=63.28, train_loss_cross_entropy=1.362, train_loss_seg=1.362, train_loss_smooth=1.233, train_macc=19.03, train_miou=13.58[0m)] 67%|######7   | 134/200 [09:19<03:54,  3.56s/it, [0;92mdata_loading=0.851, iteration=2.807, learning_rate=0.123, train_acc=63.28, train_loss_cross_entropy=1.362, train_loss_seg=1.362, train_loss_smooth=1.233, train_macc=19.03, train_miou=13.58[0m)] 67%|######7   | 134/200 [09:22<03:54,  3.56s/it, [0;92mdata_loading=1.148, iteration=2.288, learning_rate=0.123, train_acc=63.33, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.229, train_macc=19.07, train_miou=13.61[0m)] 68%|######7   | 135/200 [09:22<03:48,  3.52s/it, [0;92mdata_loading=1.148, iteration=2.288, learning_rate=0.123, train_acc=63.33, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.229, train_macc=19.07, train_miou=13.61[0m)] 68%|######7   | 135/200 [09:25<03:48,  3.52s/it, [0;92mdata_loading=0.607, iteration=2.122, learning_rate=0.123, train_acc=63.40, train_loss_cross_entropy=1.358, train_loss_seg=1.358, train_loss_smooth=1.229, train_macc=19.12, train_miou=13.65[0m)] 68%|######8   | 136/200 [09:25<03:30,  3.28s/it, [0;92mdata_loading=0.607, iteration=2.122, learning_rate=0.123, train_acc=63.40, train_loss_cross_entropy=1.358, train_loss_seg=1.358, train_loss_smooth=1.229, train_macc=19.12, train_miou=13.65[0m)] 68%|######8   | 136/200 [09:28<03:30,  3.28s/it, [0;92mdata_loading=0.889, iteration=2.660, learning_rate=0.123, train_acc=63.39, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.234, train_macc=19.15, train_miou=13.68[0m)] 68%|######8   | 137/200 [09:28<03:31,  3.36s/it, [0;92mdata_loading=0.889, iteration=2.660, learning_rate=0.123, train_acc=63.39, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.234, train_macc=19.15, train_miou=13.68[0m)] 68%|######8   | 137/200 [09:32<03:31,  3.36s/it, [0;92mdata_loading=1.184, iteration=2.206, learning_rate=0.123, train_acc=63.44, train_loss_cross_entropy=1.357, train_loss_seg=1.357, train_loss_smooth=1.230, train_macc=19.19, train_miou=13.71[0m)] 69%|######9   | 138/200 [09:32<03:29,  3.37s/it, [0;92mdata_loading=1.184, iteration=2.206, learning_rate=0.123, train_acc=63.44, train_loss_cross_entropy=1.357, train_loss_seg=1.357, train_loss_smooth=1.230, train_macc=19.19, train_miou=13.71[0m)] 69%|######9   | 138/200 [09:35<03:29,  3.37s/it, [0;92mdata_loading=0.627, iteration=2.293, learning_rate=0.123, train_acc=63.42, train_loss_cross_entropy=1.357, train_loss_seg=1.357, train_loss_smooth=1.233, train_macc=19.25, train_miou=13.75[0m)] 70%|######9   | 139/200 [09:35<03:17,  3.24s/it, [0;92mdata_loading=0.627, iteration=2.293, learning_rate=0.123, train_acc=63.42, train_loss_cross_entropy=1.357, train_loss_seg=1.357, train_loss_smooth=1.233, train_macc=19.25, train_miou=13.75[0m)] 70%|######9   | 139/200 [09:38<03:17,  3.24s/it, [0;92mdata_loading=0.979, iteration=2.524, learning_rate=0.123, train_acc=63.47, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.230, train_macc=19.31, train_miou=13.80[0m)] 70%|#######   | 140/200 [09:38<03:19,  3.32s/it, [0;92mdata_loading=0.979, iteration=2.524, learning_rate=0.123, train_acc=63.47, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.230, train_macc=19.31, train_miou=13.80[0m)] 70%|#######   | 140/200 [09:43<03:19,  3.32s/it, [0;92mdata_loading=1.843, iteration=2.404, learning_rate=0.123, train_acc=63.49, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.232, train_macc=19.38, train_miou=13.84[0m)] 70%|#######   | 141/200 [09:43<03:32,  3.60s/it, [0;92mdata_loading=1.843, iteration=2.404, learning_rate=0.123, train_acc=63.49, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.232, train_macc=19.38, train_miou=13.84[0m)] 70%|#######   | 141/200 [09:46<03:32,  3.60s/it, [0;92mdata_loading=0.828, iteration=2.420, learning_rate=0.124, train_acc=63.48, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.235, train_macc=19.43, train_miou=13.86[0m)] 71%|#######1  | 142/200 [09:46<03:22,  3.49s/it, [0;92mdata_loading=0.828, iteration=2.420, learning_rate=0.124, train_acc=63.48, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.235, train_macc=19.43, train_miou=13.86[0m)] 71%|#######1  | 142/200 [09:49<03:22,  3.49s/it, [0;92mdata_loading=0.675, iteration=2.384, learning_rate=0.124, train_acc=63.52, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.237, train_macc=19.46, train_miou=13.88[0m)] 72%|#######1  | 143/200 [09:49<03:11,  3.36s/it, [0;92mdata_loading=0.675, iteration=2.384, learning_rate=0.124, train_acc=63.52, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.237, train_macc=19.46, train_miou=13.88[0m)] 72%|#######1  | 143/200 [09:52<03:11,  3.36s/it, [0;92mdata_loading=0.707, iteration=2.192, learning_rate=0.124, train_acc=63.59, train_loss_cross_entropy=1.352, train_loss_seg=1.352, train_loss_smooth=1.231, train_macc=19.55, train_miou=13.95[0m)] 72%|#######2  | 144/200 [09:52<03:00,  3.22s/it, [0;92mdata_loading=0.707, iteration=2.192, learning_rate=0.124, train_acc=63.59, train_loss_cross_entropy=1.352, train_loss_seg=1.352, train_loss_smooth=1.231, train_macc=19.55, train_miou=13.95[0m)] 72%|#######2  | 144/200 [09:55<03:00,  3.22s/it, [0;92mdata_loading=0.601, iteration=2.278, learning_rate=0.124, train_acc=63.64, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.227, train_macc=19.59, train_miou=13.99[0m)] 72%|#######2  | 145/200 [09:55<02:51,  3.12s/it, [0;92mdata_loading=0.601, iteration=2.278, learning_rate=0.124, train_acc=63.64, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.227, train_macc=19.59, train_miou=13.99[0m)] 72%|#######2  | 145/200 [09:59<02:51,  3.12s/it, [0;92mdata_loading=1.621, iteration=2.820, learning_rate=0.124, train_acc=63.61, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.23 , train_macc=19.60, train_miou=14.02[0m)] 73%|#######3  | 146/200 [09:59<03:09,  3.52s/it, [0;92mdata_loading=1.621, iteration=2.820, learning_rate=0.124, train_acc=63.61, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.23 , train_macc=19.60, train_miou=14.02[0m)] 73%|#######3  | 146/200 [10:02<03:09,  3.52s/it, [0;92mdata_loading=0.595, iteration=2.563, learning_rate=0.124, train_acc=63.70, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.223, train_macc=19.75, train_miou=14.13[0m)] 74%|#######3  | 147/200 [10:02<03:00,  3.41s/it, [0;92mdata_loading=0.595, iteration=2.563, learning_rate=0.124, train_acc=63.70, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.223, train_macc=19.75, train_miou=14.13[0m)] 74%|#######3  | 147/200 [10:06<03:00,  3.41s/it, [0;92mdata_loading=0.779, iteration=2.594, learning_rate=0.124, train_acc=63.68, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.227, train_macc=19.78, train_miou=14.14[0m)] 74%|#######4  | 148/200 [10:06<02:56,  3.40s/it, [0;92mdata_loading=0.779, iteration=2.594, learning_rate=0.124, train_acc=63.68, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.227, train_macc=19.78, train_miou=14.14[0m)] 74%|#######4  | 148/200 [10:09<02:56,  3.40s/it, [0;92mdata_loading=1.269, iteration=2.353, learning_rate=0.124, train_acc=63.70, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.229, train_macc=19.82, train_miou=14.17[0m)] 74%|#######4  | 149/200 [10:09<02:56,  3.47s/it, [0;92mdata_loading=1.269, iteration=2.353, learning_rate=0.124, train_acc=63.70, train_loss_cross_entropy=1.347, train_loss_seg=1.347, train_loss_smooth=1.229, train_macc=19.82, train_miou=14.17[0m)] 74%|#######4  | 149/200 [10:12<02:56,  3.47s/it, [0;92mdata_loading=0.650, iteration=2.589, learning_rate=0.124, train_acc=63.68, train_loss_cross_entropy=1.349, train_loss_seg=1.349, train_loss_smooth=1.238, train_macc=19.81, train_miou=14.17[0m)] 75%|#######5  | 150/200 [10:12<02:49,  3.40s/it, [0;92mdata_loading=0.650, iteration=2.589, learning_rate=0.124, train_acc=63.68, train_loss_cross_entropy=1.349, train_loss_seg=1.349, train_loss_smooth=1.238, train_macc=19.81, train_miou=14.17[0m)] 75%|#######5  | 150/200 [10:16<02:49,  3.40s/it, [0;92mdata_loading=1.234, iteration=2.710, learning_rate=0.124, train_acc=63.55, train_loss_cross_entropy=1.351, train_loss_seg=1.351, train_loss_smooth=1.245, train_macc=19.79, train_miou=14.15[0m)] 76%|#######5  | 151/200 [10:16<02:54,  3.56s/it, [0;92mdata_loading=1.234, iteration=2.710, learning_rate=0.124, train_acc=63.55, train_loss_cross_entropy=1.351, train_loss_seg=1.351, train_loss_smooth=1.245, train_macc=19.79, train_miou=14.15[0m)] 76%|#######5  | 151/200 [10:21<02:54,  3.56s/it, [0;92mdata_loading=1.861, iteration=2.344, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.352, train_loss_seg=1.352, train_loss_smooth=1.252, train_macc=19.80, train_miou=14.15[0m)] 76%|#######6  | 152/200 [10:21<03:00,  3.76s/it, [0;92mdata_loading=1.861, iteration=2.344, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.352, train_loss_seg=1.352, train_loss_smooth=1.252, train_macc=19.80, train_miou=14.15[0m)] 76%|#######6  | 152/200 [10:23<03:00,  3.76s/it, [0;92mdata_loading=1.027, iteration=1.680, learning_rate=0.124, train_acc=63.58, train_loss_cross_entropy=1.351, train_loss_seg=1.351, train_loss_smooth=1.251, train_macc=19.82, train_miou=14.17[0m)] 76%|#######6  | 153/200 [10:23<02:41,  3.44s/it, [0;92mdata_loading=1.027, iteration=1.680, learning_rate=0.124, train_acc=63.58, train_loss_cross_entropy=1.351, train_loss_seg=1.351, train_loss_smooth=1.251, train_macc=19.82, train_miou=14.17[0m)] 76%|#######6  | 153/200 [10:27<02:41,  3.44s/it, [0;92mdata_loading=0.812, iteration=2.651, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.353, train_loss_seg=1.353, train_loss_smooth=1.259, train_macc=19.80, train_miou=14.16[0m)] 77%|#######7  | 154/200 [10:27<02:38,  3.45s/it, [0;92mdata_loading=0.812, iteration=2.651, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.353, train_loss_seg=1.353, train_loss_smooth=1.259, train_macc=19.80, train_miou=14.16[0m)] 77%|#######7  | 154/200 [10:30<02:38,  3.45s/it, [0;92mdata_loading=0.844, iteration=2.587, learning_rate=0.124, train_acc=63.54, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.268, train_macc=19.76, train_miou=14.14[0m)] 78%|#######7  | 155/200 [10:30<02:34,  3.44s/it, [0;92mdata_loading=0.844, iteration=2.587, learning_rate=0.124, train_acc=63.54, train_loss_cross_entropy=1.355, train_loss_seg=1.355, train_loss_smooth=1.268, train_macc=19.76, train_miou=14.14[0m)] 78%|#######7  | 155/200 [10:34<02:34,  3.44s/it, [0;92mdata_loading=0.816, iteration=2.860, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.281, train_macc=19.78, train_miou=14.15[0m)] 78%|#######8  | 156/200 [10:34<02:34,  3.51s/it, [0;92mdata_loading=0.816, iteration=2.860, learning_rate=0.124, train_acc=63.56, train_loss_cross_entropy=1.359, train_loss_seg=1.359, train_loss_smooth=1.281, train_macc=19.78, train_miou=14.15[0m)] 78%|#######8  | 156/200 [10:37<02:34,  3.51s/it, [0;92mdata_loading=1.091, iteration=2.334, learning_rate=0.124, train_acc=63.54, train_loss_cross_entropy=1.360, train_loss_seg=1.360, train_loss_smooth=1.288, train_macc=19.79, train_miou=14.16[0m)] 78%|#######8  | 157/200 [10:37<02:29,  3.49s/it, [0;92mdata_loading=1.091, iteration=2.334, learning_rate=0.124, train_acc=63.54, train_loss_cross_entropy=1.360, train_loss_seg=1.360, train_loss_smooth=1.288, train_macc=19.79, train_miou=14.16[0m)] 78%|#######8  | 157/200 [10:41<02:29,  3.49s/it, [0;92mdata_loading=0.673, iteration=2.758, learning_rate=0.124, train_acc=63.55, train_loss_cross_entropy=1.363, train_loss_seg=1.363, train_loss_smooth=1.299, train_macc=19.78, train_miou=14.15[0m)] 79%|#######9  | 158/200 [10:41<02:25,  3.47s/it, [0;92mdata_loading=0.673, iteration=2.758, learning_rate=0.124, train_acc=63.55, train_loss_cross_entropy=1.363, train_loss_seg=1.363, train_loss_smooth=1.299, train_macc=19.78, train_miou=14.15[0m)] 79%|#######9  | 158/200 [10:44<02:25,  3.47s/it, [0;92mdata_loading=0.597, iteration=2.383, learning_rate=0.125, train_acc=63.54, train_loss_cross_entropy=1.366, train_loss_seg=1.366, train_loss_smooth=1.309, train_macc=19.80, train_miou=14.17[0m)] 80%|#######9  | 159/200 [10:44<02:16,  3.32s/it, [0;92mdata_loading=0.597, iteration=2.383, learning_rate=0.125, train_acc=63.54, train_loss_cross_entropy=1.366, train_loss_seg=1.366, train_loss_smooth=1.309, train_macc=19.80, train_miou=14.17[0m)] 80%|#######9  | 159/200 [10:48<02:16,  3.32s/it, [0;92mdata_loading=1.432, iteration=2.430, learning_rate=0.125, train_acc=63.56, train_loss_cross_entropy=1.366, train_loss_seg=1.366, train_loss_smooth=1.309, train_macc=19.83, train_miou=14.20[0m)] 80%|########  | 160/200 [10:48<02:19,  3.49s/it, [0;92mdata_loading=1.432, iteration=2.430, learning_rate=0.125, train_acc=63.56, train_loss_cross_entropy=1.366, train_loss_seg=1.366, train_loss_smooth=1.309, train_macc=19.83, train_miou=14.20[0m)] 80%|########  | 160/200 [10:51<02:19,  3.49s/it, [0;92mdata_loading=0.649, iteration=2.497, learning_rate=0.125, train_acc=63.54, train_loss_cross_entropy=1.367, train_loss_seg=1.367, train_loss_smooth=1.315, train_macc=19.87, train_miou=14.23[0m)] 80%|########  | 161/200 [10:51<02:11,  3.38s/it, [0;92mdata_loading=0.649, iteration=2.497, learning_rate=0.125, train_acc=63.54, train_loss_cross_entropy=1.367, train_loss_seg=1.367, train_loss_smooth=1.315, train_macc=19.87, train_miou=14.23[0m)] 80%|########  | 161/200 [10:55<02:11,  3.38s/it, [0;92mdata_loading=1.209, iteration=2.842, learning_rate=0.125, train_acc=63.53, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_loss_smooth=1.318, train_macc=19.90, train_miou=14.26[0m)] 81%|########1 | 162/200 [10:55<02:16,  3.58s/it, [0;92mdata_loading=1.209, iteration=2.842, learning_rate=0.125, train_acc=63.53, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_loss_smooth=1.318, train_macc=19.90, train_miou=14.26[0m)] 81%|########1 | 162/200 [10:59<02:16,  3.58s/it, [0;92mdata_loading=1.602, iteration=2.817, learning_rate=0.125, train_acc=63.55, train_loss_cross_entropy=1.369, train_loss_seg=1.369, train_loss_smooth=1.325, train_macc=19.88, train_miou=14.24[0m)] 82%|########1 | 163/200 [10:59<02:21,  3.83s/it, [0;92mdata_loading=1.602, iteration=2.817, learning_rate=0.125, train_acc=63.55, train_loss_cross_entropy=1.369, train_loss_seg=1.369, train_loss_smooth=1.325, train_macc=19.88, train_miou=14.24[0m)] 82%|########1 | 163/200 [11:03<02:21,  3.83s/it, [0;92mdata_loading=1.171, iteration=2.894, learning_rate=0.125, train_acc=63.51, train_loss_cross_entropy=1.375, train_loss_seg=1.375, train_loss_smooth=1.345, train_macc=19.84, train_miou=14.22[0m)] 82%|########2 | 164/200 [11:03<02:20,  3.90s/it, [0;92mdata_loading=1.171, iteration=2.894, learning_rate=0.125, train_acc=63.51, train_loss_cross_entropy=1.375, train_loss_seg=1.375, train_loss_smooth=1.345, train_macc=19.84, train_miou=14.22[0m)] 82%|########2 | 164/200 [11:07<02:20,  3.90s/it, [0;92mdata_loading=0.873, iteration=2.809, learning_rate=0.125, train_acc=63.53, train_loss_cross_entropy=1.377, train_loss_seg=1.377, train_loss_smooth=1.354, train_macc=19.91, train_miou=14.29[0m)] 82%|########2 | 165/200 [11:07<02:14,  3.84s/it, [0;92mdata_loading=0.873, iteration=2.809, learning_rate=0.125, train_acc=63.53, train_loss_cross_entropy=1.377, train_loss_seg=1.377, train_loss_smooth=1.354, train_macc=19.91, train_miou=14.29[0m)] 82%|########2 | 165/200 [11:11<02:14,  3.84s/it, [0;92mdata_loading=0.874, iteration=2.784, learning_rate=0.125, train_acc=63.52, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.356, train_macc=19.93, train_miou=14.32[0m)] 83%|########2 | 166/200 [11:11<02:08,  3.78s/it, [0;92mdata_loading=0.874, iteration=2.784, learning_rate=0.125, train_acc=63.52, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_loss_smooth=1.356, train_macc=19.93, train_miou=14.32[0m)] 83%|########2 | 166/200 [11:14<02:08,  3.78s/it, [0;92mdata_loading=0.776, iteration=2.39 , learning_rate=0.125, train_acc=63.52, train_loss_cross_entropy=1.379, train_loss_seg=1.379, train_loss_smooth=1.361, train_macc=19.89, train_miou=14.30[0m)] 84%|########3 | 167/200 [11:14<01:58,  3.60s/it, [0;92mdata_loading=0.776, iteration=2.39 , learning_rate=0.125, train_acc=63.52, train_loss_cross_entropy=1.379, train_loss_seg=1.379, train_loss_smooth=1.361, train_macc=19.89, train_miou=14.30[0m)] 84%|########3 | 167/200 [11:18<01:58,  3.60s/it, [0;92mdata_loading=1.366, iteration=3.118, learning_rate=0.125, train_acc=63.51, train_loss_cross_entropy=1.381, train_loss_seg=1.381, train_loss_smooth=1.367, train_macc=19.88, train_miou=14.29[0m)] 84%|########4 | 168/200 [11:18<02:03,  3.86s/it, [0;92mdata_loading=1.366, iteration=3.118, learning_rate=0.125, train_acc=63.51, train_loss_cross_entropy=1.381, train_loss_seg=1.381, train_loss_smooth=1.367, train_macc=19.88, train_miou=14.29[0m)] 84%|########4 | 168/200 [11:22<02:03,  3.86s/it, [0;92mdata_loading=0.648, iteration=2.861, learning_rate=0.125, train_acc=63.43, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.394, train_macc=19.89, train_miou=14.27[0m)] 84%|########4 | 169/200 [11:22<01:56,  3.76s/it, [0;92mdata_loading=0.648, iteration=2.861, learning_rate=0.125, train_acc=63.43, train_loss_cross_entropy=1.388, train_loss_seg=1.388, train_loss_smooth=1.394, train_macc=19.89, train_miou=14.27[0m)] 84%|########4 | 169/200 [11:25<01:56,  3.76s/it, [0;92mdata_loading=0.762, iteration=2.546, learning_rate=0.125, train_acc=63.36, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.403, train_macc=19.88, train_miou=14.25[0m)] 85%|########5 | 170/200 [11:25<01:48,  3.62s/it, [0;92mdata_loading=0.762, iteration=2.546, learning_rate=0.125, train_acc=63.36, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.403, train_macc=19.88, train_miou=14.25[0m)] 85%|########5 | 170/200 [11:29<01:48,  3.62s/it, [0;92mdata_loading=1.358, iteration=2.434, learning_rate=0.125, train_acc=63.22, train_loss_cross_entropy=1.398, train_loss_seg=1.398, train_loss_smooth=1.426, train_macc=19.84, train_miou=14.20[0m)] 86%|########5 | 171/200 [11:29<01:46,  3.67s/it, [0;92mdata_loading=1.358, iteration=2.434, learning_rate=0.125, train_acc=63.22, train_loss_cross_entropy=1.398, train_loss_seg=1.398, train_loss_smooth=1.426, train_macc=19.84, train_miou=14.20[0m)] 86%|########5 | 171/200 [11:32<01:46,  3.67s/it, [0;92mdata_loading=0.773, iteration=2.506, learning_rate=0.125, train_acc=63.15, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.437, train_macc=19.78, train_miou=14.13[0m)] 86%|########6 | 172/200 [11:32<01:39,  3.56s/it, [0;92mdata_loading=0.773, iteration=2.506, learning_rate=0.125, train_acc=63.15, train_loss_cross_entropy=1.401, train_loss_seg=1.401, train_loss_smooth=1.437, train_macc=19.78, train_miou=14.13[0m)] 86%|########6 | 172/200 [11:36<01:39,  3.56s/it, [0;92mdata_loading=1.165, iteration=2.658, learning_rate=0.125, train_acc=63.09, train_loss_cross_entropy=1.404, train_loss_seg=1.404, train_loss_smooth=1.449, train_macc=19.73, train_miou=14.10[0m)] 86%|########6 | 173/200 [11:36<01:38,  3.64s/it, [0;92mdata_loading=1.165, iteration=2.658, learning_rate=0.125, train_acc=63.09, train_loss_cross_entropy=1.404, train_loss_seg=1.404, train_loss_smooth=1.449, train_macc=19.73, train_miou=14.10[0m)] 86%|########6 | 173/200 [11:40<01:38,  3.64s/it, [0;92mdata_loading=1.197, iteration=2.513, learning_rate=0.126, train_acc=63.07, train_loss_cross_entropy=1.404, train_loss_seg=1.404, train_loss_smooth=1.447, train_macc=19.66, train_miou=14.06[0m)] 87%|########7 | 174/200 [11:40<01:35,  3.66s/it, [0;92mdata_loading=1.197, iteration=2.513, learning_rate=0.126, train_acc=63.07, train_loss_cross_entropy=1.404, train_loss_seg=1.404, train_loss_smooth=1.447, train_macc=19.66, train_miou=14.06[0m)] 87%|########7 | 174/200 [11:44<01:35,  3.66s/it, [0;92mdata_loading=1.058, iteration=2.814, learning_rate=0.126, train_acc=63.03, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_loss_smooth=1.458, train_macc=19.63, train_miou=14.04[0m)] 88%|########7 | 175/200 [11:44<01:33,  3.72s/it, [0;92mdata_loading=1.058, iteration=2.814, learning_rate=0.126, train_acc=63.03, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_loss_smooth=1.458, train_macc=19.63, train_miou=14.04[0m)] 88%|########7 | 175/200 [11:47<01:33,  3.72s/it, [0;92mdata_loading=0.697, iteration=2.598, learning_rate=0.126, train_acc=62.97, train_loss_cross_entropy=1.412, train_loss_seg=1.412, train_loss_smooth=1.475, train_macc=19.58, train_miou=14.01[0m)] 88%|########8 | 176/200 [11:47<01:26,  3.59s/it, [0;92mdata_loading=0.697, iteration=2.598, learning_rate=0.126, train_acc=62.97, train_loss_cross_entropy=1.412, train_loss_seg=1.412, train_loss_smooth=1.475, train_macc=19.58, train_miou=14.01[0m)] 88%|########8 | 176/200 [11:50<01:26,  3.59s/it, [0;92mdata_loading=0.929, iteration=2.607, learning_rate=0.126, train_acc=62.93, train_loss_cross_entropy=1.415, train_loss_seg=1.415, train_loss_smooth=1.483, train_macc=19.52, train_miou=13.96[0m)] 88%|########8 | 177/200 [11:50<01:22,  3.58s/it, [0;92mdata_loading=0.929, iteration=2.607, learning_rate=0.126, train_acc=62.93, train_loss_cross_entropy=1.415, train_loss_seg=1.415, train_loss_smooth=1.483, train_macc=19.52, train_miou=13.96[0m)] 88%|########8 | 177/200 [11:55<01:22,  3.58s/it, [0;92mdata_loading=1.316, iteration=2.807, learning_rate=0.126, train_acc=62.71, train_loss_cross_entropy=1.423, train_loss_seg=1.423, train_loss_smooth=1.511, train_macc=19.43, train_miou=13.87[0m)] 89%|########9 | 178/200 [11:55<01:22,  3.74s/it, [0;92mdata_loading=1.316, iteration=2.807, learning_rate=0.126, train_acc=62.71, train_loss_cross_entropy=1.423, train_loss_seg=1.423, train_loss_smooth=1.511, train_macc=19.43, train_miou=13.87[0m)] 89%|########9 | 178/200 [11:57<01:22,  3.74s/it, [0;92mdata_loading=0.572, iteration=2.170, learning_rate=0.126, train_acc=62.58, train_loss_cross_entropy=1.426, train_loss_seg=1.426, train_loss_smooth=1.519, train_macc=19.36, train_miou=13.84[0m)] 90%|########9 | 179/200 [11:57<01:12,  3.44s/it, [0;92mdata_loading=0.572, iteration=2.170, learning_rate=0.126, train_acc=62.58, train_loss_cross_entropy=1.426, train_loss_seg=1.426, train_loss_smooth=1.519, train_macc=19.36, train_miou=13.84[0m)] 90%|########9 | 179/200 [12:00<01:12,  3.44s/it, [0;92mdata_loading=0.549, iteration=2.498, learning_rate=0.126, train_acc=62.20, train_loss_cross_entropy=1.437, train_loss_seg=1.437, train_loss_smooth=1.558, train_macc=19.26, train_miou=13.70[0m)] 90%|######### | 180/200 [12:00<01:06,  3.32s/it, [0;92mdata_loading=0.549, iteration=2.498, learning_rate=0.126, train_acc=62.20, train_loss_cross_entropy=1.437, train_loss_seg=1.437, train_loss_smooth=1.558, train_macc=19.26, train_miou=13.70[0m)] 90%|######### | 180/200 [12:03<01:06,  3.32s/it, [0;92mdata_loading=0.553, iteration=2.395, learning_rate=0.126, train_acc=62.05, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=1.613, train_macc=19.18, train_miou=13.64[0m)] 90%|######### | 181/200 [12:03<01:01,  3.21s/it, [0;92mdata_loading=0.553, iteration=2.395, learning_rate=0.126, train_acc=62.05, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=1.613, train_macc=19.18, train_miou=13.64[0m)] 90%|######### | 181/200 [12:06<01:01,  3.21s/it, [0;92mdata_loading=1.107, iteration=1.914, learning_rate=0.126, train_acc=62.01, train_loss_cross_entropy=1.455, train_loss_seg=1.455, train_loss_smooth=1.622, train_macc=19.14, train_miou=13.60[0m)] 91%|#########1| 182/200 [12:06<00:56,  3.15s/it, [0;92mdata_loading=1.107, iteration=1.914, learning_rate=0.126, train_acc=62.01, train_loss_cross_entropy=1.455, train_loss_seg=1.455, train_loss_smooth=1.622, train_macc=19.14, train_miou=13.60[0m)] 91%|#########1| 182/200 [12:09<00:56,  3.15s/it, [0;92mdata_loading=0.522, iteration=2.279, learning_rate=0.126, train_acc=61.89, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.833, train_macc=19.07, train_miou=13.55[0m)] 92%|#########1| 183/200 [12:09<00:51,  3.05s/it, [0;92mdata_loading=0.522, iteration=2.279, learning_rate=0.126, train_acc=61.89, train_loss_cross_entropy=1.513, train_loss_seg=1.513, train_loss_smooth=1.833, train_macc=19.07, train_miou=13.55[0m)] 92%|#########1| 183/200 [12:12<00:51,  3.05s/it, [0;92mdata_loading=0.845, iteration=2.293, learning_rate=0.126, train_acc=61.84, train_loss_cross_entropy=1.542, train_loss_seg=1.542, train_loss_smooth=1.936, train_macc=19.01, train_miou=13.51[0m)] 92%|#########2| 184/200 [12:12<00:49,  3.08s/it, [0;92mdata_loading=0.845, iteration=2.293, learning_rate=0.126, train_acc=61.84, train_loss_cross_entropy=1.542, train_loss_seg=1.542, train_loss_smooth=1.936, train_macc=19.01, train_miou=13.51[0m)] 92%|#########2| 184/200 [12:15<00:49,  3.08s/it, [0;92mdata_loading=1.050, iteration=2.052, learning_rate=0.126, train_acc=61.74, train_loss_cross_entropy=1.730, train_loss_seg=1.730, train_loss_smooth=2.642, train_macc=18.96, train_miou=13.47[0m)] 92%|#########2| 185/200 [12:15<00:46,  3.08s/it, [0;92mdata_loading=1.050, iteration=2.052, learning_rate=0.126, train_acc=61.74, train_loss_cross_entropy=1.730, train_loss_seg=1.730, train_loss_smooth=2.642, train_macc=18.96, train_miou=13.47[0m)] 92%|#########2| 185/200 [12:18<00:46,  3.08s/it, [0;92mdata_loading=0.779, iteration=2.250, learning_rate=0.126, train_acc=61.44, train_loss_cross_entropy=1.985, train_loss_seg=1.985, train_loss_smooth=3.593, train_macc=18.86, train_miou=13.42[0m)] 93%|#########3| 186/200 [12:18<00:42,  3.07s/it, [0;92mdata_loading=0.779, iteration=2.250, learning_rate=0.126, train_acc=61.44, train_loss_cross_entropy=1.985, train_loss_seg=1.985, train_loss_smooth=3.593, train_macc=18.86, train_miou=13.42[0m)] 93%|#########3| 186/200 [12:21<00:42,  3.07s/it, [0;92mdata_loading=0.874, iteration=2.231, learning_rate=0.126, train_acc=61.21, train_loss_cross_entropy=2.227, train_loss_seg=2.227, train_loss_smooth=4.487, train_macc=18.77, train_miou=13.30[0m)] 94%|#########3| 187/200 [12:21<00:40,  3.08s/it, [0;92mdata_loading=0.874, iteration=2.231, learning_rate=0.126, train_acc=61.21, train_loss_cross_entropy=2.227, train_loss_seg=2.227, train_loss_smooth=4.487, train_macc=18.77, train_miou=13.30[0m)] 94%|#########3| 187/200 [12:23<00:40,  3.08s/it, [0;92mdata_loading=0.505, iteration=1.412, learning_rate=0.127, train_acc=61.00, train_loss_cross_entropy=2.639, train_loss_seg=2.639, train_loss_smooth=6.025, train_macc=18.70, train_miou=13.22[0m)] 94%|#########3| 187/200 [12:23<00:51,  3.98s/it, [0;92mdata_loading=0.505, iteration=1.412, learning_rate=0.127, train_acc=61.00, train_loss_cross_entropy=2.639, train_loss_seg=2.639, train_loss_smooth=6.025, train_macc=18.70, train_miou=13.22[0m)][2022-11-22 12:54:00,938][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.639081815772868
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.639081815772868
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 61.00105607518741
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 18.701521977687563
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 13.22618486924865
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '62.47', 1: '78.12', 2: '16.41', 3: '21.18', 4: '22.21', 5: '13.74', 6: '14.60', 7: '17.94', 8: '2.76', 9: '0.99', 10: '0.00', 11: '2.11', 12: '3.12', 13: '1.93', 14: '0.00', 15: '0.00', 16: '0.02', 17: '0.02', 18: '0.05', 19: '6.85'}
[2022-11-22 12:54:00,939][torch_points3d.metrics.base_tracker][INFO] - ==================================================

