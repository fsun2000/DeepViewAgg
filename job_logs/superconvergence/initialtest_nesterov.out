MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-11-21 19:03:43,012][torch_points3d.trainer][INFO] - DEVICE : cuda
load_m2f_masks:  True
initialize train dataset
initialize val dataset
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-11-21 19:04:51,862][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
[2022-11-21 19:04:53,803][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-11-21 19:04:53,803][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-11-21 19:04:53,806][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: AdamW (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    eps: 1e-08
    foreach: None
    initial_lr: 0.0001
    lr: 0.0001
    maximize: False
    weight_decay: 0.0001
)[0m
[2022-11-21 19:04:53,806][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: ExponentialLR({'gamma': 0.9855}, update_scheduler_on=on_epoch)[0m
[2022-11-21 19:04:53,806][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-11-21 19:04:53,806][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-11-21 19:04:53,807][torch_points3d.trainer][INFO] - Model size = 30911764
[2022-11-21 19:04:53,808][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1201
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 312
[0;95mBatch size =[0m 6
[2022-11-21 19:05:01,012][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-11-21 19:05:01,013][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-11-21 19:05:09,171][torch_points3d.trainer][INFO] - EPOCH 1 / 2
Executing lr range test
[2022-11-21 19:05:09,173][torch_points3d.trainer][INFO] - Initial learning rate = 0.000100
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 0/200 [02:52<?, ?it/s, [0;92mdata_loading=168.6, iteration=3.539, learning_rate=0.000, train_acc=2.599, train_loss_cross_entropy=3.183, train_loss_seg=3.183, train_loss_smooth=3.183, train_macc=4.351, train_miou=0.773[0m)]  0%|          | 1/200 [02:52<9:31:07, 172.20s/it, [0;92mdata_loading=168.6, iteration=3.539, learning_rate=0.000, train_acc=2.599, train_loss_cross_entropy=3.183, train_loss_seg=3.183, train_loss_smooth=3.183, train_macc=4.351, train_miou=0.773[0m)]  0%|          | 1/200 [02:54<9:31:07, 172.20s/it, [0;92mdata_loading=0.591, iteration=1.458, learning_rate=0.000, train_acc=4.382, train_loss_cross_entropy=3.133, train_loss_seg=3.133, train_loss_smooth=3.133, train_macc=5.926, train_miou=1.010[0m)]  1%|1         | 2/200 [02:54<3:57:58, 72.11s/it, [0;92mdata_loading=0.591, iteration=1.458, learning_rate=0.000, train_acc=4.382, train_loss_cross_entropy=3.133, train_loss_seg=3.133, train_loss_smooth=3.133, train_macc=5.926, train_miou=1.010[0m)]   1%|1         | 2/200 [02:57<3:57:58, 72.11s/it, [0;92mdata_loading=0.653, iteration=2.183, learning_rate=0.000, train_acc=6.836, train_loss_cross_entropy=3.076, train_loss_seg=3.076, train_loss_smooth=3.075, train_macc=5.913, train_miou=1.409[0m)]  2%|1         | 3/200 [02:57<2:12:54, 40.48s/it, [0;92mdata_loading=0.653, iteration=2.183, learning_rate=0.000, train_acc=6.836, train_loss_cross_entropy=3.076, train_loss_seg=3.076, train_loss_smooth=3.075, train_macc=5.913, train_miou=1.409[0m)]  2%|1         | 3/200 [03:00<2:12:54, 40.48s/it, [0;92mdata_loading=0.589, iteration=2.466, learning_rate=0.000, train_acc=9.146, train_loss_cross_entropy=3.034, train_loss_seg=3.034, train_loss_smooth=3.032, train_macc=6.008, train_miou=1.779[0m)]  2%|2         | 4/200 [03:00<1:23:58, 25.70s/it, [0;92mdata_loading=0.589, iteration=2.466, learning_rate=0.000, train_acc=9.146, train_loss_cross_entropy=3.034, train_loss_seg=3.034, train_loss_smooth=3.032, train_macc=6.008, train_miou=1.779[0m)]  2%|2         | 4/200 [03:03<1:23:58, 25.70s/it, [0;92mdata_loading=0.593, iteration=2.379, learning_rate=0.000, train_acc=11.41, train_loss_cross_entropy=2.991, train_loss_seg=2.991, train_loss_smooth=2.987, train_macc=6.234, train_miou=2.105[0m)]  2%|2         | 5/200 [03:03<56:54, 17.51s/it, [0;92mdata_loading=0.593, iteration=2.379, learning_rate=0.000, train_acc=11.41, train_loss_cross_entropy=2.991, train_loss_seg=2.991, train_loss_smooth=2.987, train_macc=6.234, train_miou=2.105[0m)]    2%|2         | 5/200 [03:06<56:54, 17.51s/it, [0;92mdata_loading=0.652, iteration=2.59 , learning_rate=0.000, train_acc=13.90, train_loss_cross_entropy=2.948, train_loss_seg=2.948, train_loss_smooth=2.942, train_macc=6.420, train_miou=2.455[0m)]  3%|3         | 6/200 [03:06<40:55, 12.66s/it, [0;92mdata_loading=0.652, iteration=2.59 , learning_rate=0.000, train_acc=13.90, train_loss_cross_entropy=2.948, train_loss_seg=2.948, train_loss_smooth=2.942, train_macc=6.420, train_miou=2.455[0m)]  3%|3         | 6/200 [03:09<40:55, 12.66s/it, [0;92mdata_loading=0.618, iteration=2.642, learning_rate=0.000, train_acc=15.58, train_loss_cross_entropy=2.909, train_loss_seg=2.909, train_loss_smooth=2.902, train_macc=6.545, train_miou=2.710[0m)]  4%|3         | 7/200 [03:09<30:49,  9.59s/it, [0;92mdata_loading=0.618, iteration=2.642, learning_rate=0.000, train_acc=15.58, train_loss_cross_entropy=2.909, train_loss_seg=2.909, train_loss_smooth=2.902, train_macc=6.545, train_miou=2.710[0m)]  4%|3         | 7/200 [03:12<30:49,  9.59s/it, [0;92mdata_loading=0.621, iteration=2.385, learning_rate=0.000, train_acc=16.84, train_loss_cross_entropy=2.876, train_loss_seg=2.876, train_loss_smooth=2.868, train_macc=6.693, train_miou=2.912[0m)]  4%|4         | 8/200 [03:12<23:58,  7.49s/it, [0;92mdata_loading=0.621, iteration=2.385, learning_rate=0.000, train_acc=16.84, train_loss_cross_entropy=2.876, train_loss_seg=2.876, train_loss_smooth=2.868, train_macc=6.693, train_miou=2.912[0m)]  4%|4         | 8/200 [03:15<23:58,  7.49s/it, [0;92mdata_loading=0.654, iteration=2.523, learning_rate=0.000, train_acc=18.20, train_loss_cross_entropy=2.835, train_loss_seg=2.835, train_loss_smooth=2.824, train_macc=6.774, train_miou=3.154[0m)]  4%|4         | 9/200 [03:15<19:33,  6.14s/it, [0;92mdata_loading=0.654, iteration=2.523, learning_rate=0.000, train_acc=18.20, train_loss_cross_entropy=2.835, train_loss_seg=2.835, train_loss_smooth=2.824, train_macc=6.774, train_miou=3.154[0m)]  4%|4         | 9/200 [03:19<19:33,  6.14s/it, [0;92mdata_loading=0.903, iteration=2.484, learning_rate=0.000, train_acc=19.02, train_loss_cross_entropy=2.808, train_loss_seg=2.808, train_loss_smooth=2.796, train_macc=6.962, train_miou=3.320[0m)]  5%|5         | 10/200 [03:19<16:45,  5.29s/it, [0;92mdata_loading=0.903, iteration=2.484, learning_rate=0.000, train_acc=19.02, train_loss_cross_entropy=2.808, train_loss_seg=2.808, train_loss_smooth=2.796, train_macc=6.962, train_miou=3.320[0m)]  5%|5         | 10/200 [03:22<16:45,  5.29s/it, [0;92mdata_loading=0.719, iteration=2.444, learning_rate=0.000, train_acc=21.31, train_loss_cross_entropy=2.757, train_loss_seg=2.757, train_loss_smooth=2.741, train_macc=7.131, train_miou=3.640[0m)]  6%|5         | 11/200 [03:22<14:37,  4.64s/it, [0;92mdata_loading=0.719, iteration=2.444, learning_rate=0.000, train_acc=21.31, train_loss_cross_entropy=2.757, train_loss_seg=2.757, train_loss_smooth=2.741, train_macc=7.131, train_miou=3.640[0m)]  6%|5         | 11/200 [03:25<14:37,  4.64s/it, [0;92mdata_loading=0.708, iteration=2.518, learning_rate=0.000, train_acc=23.06, train_loss_cross_entropy=2.714, train_loss_seg=2.714, train_loss_smooth=2.695, train_macc=7.386, train_miou=3.883[0m)]  6%|6         | 12/200 [03:25<13:11,  4.21s/it, [0;92mdata_loading=0.708, iteration=2.518, learning_rate=0.000, train_acc=23.06, train_loss_cross_entropy=2.714, train_loss_seg=2.714, train_loss_smooth=2.695, train_macc=7.386, train_miou=3.883[0m)]  6%|6         | 12/200 [03:28<13:11,  4.21s/it, [0;92mdata_loading=0.721, iteration=1.822, learning_rate=0.000, train_acc=24.12, train_loss_cross_entropy=2.685, train_loss_seg=2.685, train_loss_smooth=2.663, train_macc=7.569, train_miou=4.073[0m)]  6%|6         | 13/200 [03:28<11:32,  3.71s/it, [0;92mdata_loading=0.721, iteration=1.822, learning_rate=0.000, train_acc=24.12, train_loss_cross_entropy=2.685, train_loss_seg=2.685, train_loss_smooth=2.663, train_macc=7.569, train_miou=4.073[0m)]  6%|6         | 13/200 [03:31<11:32,  3.71s/it, [0;92mdata_loading=0.625, iteration=2.543, learning_rate=0.000, train_acc=25.71, train_loss_cross_entropy=2.652, train_loss_seg=2.652, train_loss_smooth=2.627, train_macc=7.814, train_miou=4.277[0m)]  7%|7         | 14/200 [03:31<10:59,  3.54s/it, [0;92mdata_loading=0.625, iteration=2.543, learning_rate=0.000, train_acc=25.71, train_loss_cross_entropy=2.652, train_loss_seg=2.652, train_loss_smooth=2.627, train_macc=7.814, train_miou=4.277[0m)]  7%|7         | 14/200 [03:34<10:59,  3.54s/it, [0;92mdata_loading=0.756, iteration=2.491, learning_rate=0.000, train_acc=27.01, train_loss_cross_entropy=2.611, train_loss_seg=2.611, train_loss_smooth=2.582, train_macc=7.948, train_miou=4.416[0m)]  8%|7         | 15/200 [03:34<10:39,  3.45s/it, [0;92mdata_loading=0.756, iteration=2.491, learning_rate=0.000, train_acc=27.01, train_loss_cross_entropy=2.611, train_loss_seg=2.611, train_loss_smooth=2.582, train_macc=7.948, train_miou=4.416[0m)]  8%|7         | 15/200 [03:37<10:39,  3.45s/it, [0;92mdata_loading=0.760, iteration=2.583, learning_rate=0.000, train_acc=29.06, train_loss_cross_entropy=2.573, train_loss_seg=2.573, train_loss_smooth=2.541, train_macc=8.120, train_miou=4.677[0m)]  8%|8         | 16/200 [03:37<10:29,  3.42s/it, [0;92mdata_loading=0.760, iteration=2.583, learning_rate=0.000, train_acc=29.06, train_loss_cross_entropy=2.573, train_loss_seg=2.573, train_loss_smooth=2.541, train_macc=8.120, train_miou=4.677[0m)]  8%|8         | 16/200 [03:40<10:29,  3.42s/it, [0;92mdata_loading=0.660, iteration=1.785, learning_rate=0.000, train_acc=30.09, train_loss_cross_entropy=2.536, train_loss_seg=2.536, train_loss_smooth=2.500, train_macc=8.282, train_miou=4.805[0m)]  8%|8         | 17/200 [03:40<09:32,  3.13s/it, [0;92mdata_loading=0.660, iteration=1.785, learning_rate=0.000, train_acc=30.09, train_loss_cross_entropy=2.536, train_loss_seg=2.536, train_loss_smooth=2.500, train_macc=8.282, train_miou=4.805[0m)]  8%|8         | 17/200 [03:43<09:32,  3.13s/it, [0;92mdata_loading=0.657, iteration=2.515, learning_rate=0.000, train_acc=31.26, train_loss_cross_entropy=2.503, train_loss_seg=2.503, train_loss_smooth=2.463, train_macc=8.472, train_miou=4.960[0m)]  9%|9         | 18/200 [03:43<09:31,  3.14s/it, [0;92mdata_loading=0.657, iteration=2.515, learning_rate=0.000, train_acc=31.26, train_loss_cross_entropy=2.503, train_loss_seg=2.503, train_loss_smooth=2.463, train_macc=8.472, train_miou=4.960[0m)]  9%|9         | 18/200 [03:46<09:31,  3.14s/it, [0;92mdata_loading=0.785, iteration=2.294, learning_rate=0.000, train_acc=32.87, train_loss_cross_entropy=2.464, train_loss_seg=2.464, train_loss_smooth=2.419, train_macc=8.660, train_miou=5.158[0m)] 10%|9         | 19/200 [03:46<09:25,  3.12s/it, [0;92mdata_loading=0.785, iteration=2.294, learning_rate=0.000, train_acc=32.87, train_loss_cross_entropy=2.464, train_loss_seg=2.464, train_loss_smooth=2.419, train_macc=8.660, train_miou=5.158[0m)] 10%|9         | 19/200 [03:50<09:25,  3.12s/it, [0;92mdata_loading=0.786, iteration=2.653, learning_rate=0.000, train_acc=34.22, train_loss_cross_entropy=2.433, train_loss_seg=2.433, train_loss_smooth=2.384, train_macc=8.753, train_miou=5.306[0m)] 10%|#         | 20/200 [03:50<09:39,  3.22s/it, [0;92mdata_loading=0.786, iteration=2.653, learning_rate=0.000, train_acc=34.22, train_loss_cross_entropy=2.433, train_loss_seg=2.433, train_loss_smooth=2.384, train_macc=8.753, train_miou=5.306[0m)] 10%|#         | 20/200 [03:52<09:39,  3.22s/it, [0;92mdata_loading=0.621, iteration=1.630, learning_rate=0.000, train_acc=34.93, train_loss_cross_entropy=2.401, train_loss_seg=2.401, train_loss_smooth=2.349, train_macc=8.790, train_miou=5.384[0m)] 10%|#         | 21/200 [03:52<08:44,  2.93s/it, [0;92mdata_loading=0.621, iteration=1.630, learning_rate=0.000, train_acc=34.93, train_loss_cross_entropy=2.401, train_loss_seg=2.401, train_loss_smooth=2.349, train_macc=8.790, train_miou=5.384[0m)] 10%|#         | 21/200 [03:55<08:44,  2.93s/it, [0;92mdata_loading=0.729, iteration=2.779, learning_rate=0.000, train_acc=35.62, train_loss_cross_entropy=2.379, train_loss_seg=2.379, train_loss_smooth=2.324, train_macc=8.934, train_miou=5.465[0m)] 11%|#1        | 22/200 [03:55<09:12,  3.10s/it, [0;92mdata_loading=0.729, iteration=2.779, learning_rate=0.000, train_acc=35.62, train_loss_cross_entropy=2.379, train_loss_seg=2.379, train_loss_smooth=2.324, train_macc=8.934, train_miou=5.465[0m)] 11%|#1        | 22/200 [03:58<09:12,  3.10s/it, [0;92mdata_loading=0.694, iteration=2.329, learning_rate=0.000, train_acc=36.31, train_loss_cross_entropy=2.354, train_loss_seg=2.354, train_loss_smooth=2.296, train_macc=8.958, train_miou=5.512[0m)] 12%|#1        | 23/200 [03:58<09:04,  3.08s/it, [0;92mdata_loading=0.694, iteration=2.329, learning_rate=0.000, train_acc=36.31, train_loss_cross_entropy=2.354, train_loss_seg=2.354, train_loss_smooth=2.296, train_macc=8.958, train_miou=5.512[0m)] 12%|#1        | 23/200 [04:02<09:04,  3.08s/it, [0;92mdata_loading=0.732, iteration=2.594, learning_rate=0.000, train_acc=37.43, train_loss_cross_entropy=2.321, train_loss_seg=2.321, train_loss_smooth=2.258, train_macc=9.096, train_miou=5.646[0m)] 12%|#2        | 24/200 [04:02<09:15,  3.15s/it, [0;92mdata_loading=0.732, iteration=2.594, learning_rate=0.000, train_acc=37.43, train_loss_cross_entropy=2.321, train_loss_seg=2.321, train_loss_smooth=2.258, train_macc=9.096, train_miou=5.646[0m)] 12%|#2        | 24/200 [04:05<09:15,  3.15s/it, [0;92mdata_loading=0.581, iteration=2.414, learning_rate=0.000, train_acc=38.46, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_loss_smooth=2.227, train_macc=9.203, train_miou=5.752[0m)] 12%|#2        | 25/200 [04:05<09:03,  3.11s/it, [0;92mdata_loading=0.581, iteration=2.414, learning_rate=0.000, train_acc=38.46, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_loss_smooth=2.227, train_macc=9.203, train_miou=5.752[0m)] 12%|#2        | 25/200 [04:08<09:03,  3.11s/it, [0;92mdata_loading=0.718, iteration=2.463, learning_rate=0.000, train_acc=39.12, train_loss_cross_entropy=2.274, train_loss_seg=2.274, train_loss_smooth=2.205, train_macc=9.209, train_miou=5.81 [0m)] 13%|#3        | 26/200 [04:08<09:04,  3.13s/it, [0;92mdata_loading=0.718, iteration=2.463, learning_rate=0.000, train_acc=39.12, train_loss_cross_entropy=2.274, train_loss_seg=2.274, train_loss_smooth=2.205, train_macc=9.209, train_miou=5.81 [0m)] 13%|#3        | 26/200 [04:11<09:04,  3.13s/it, [0;92mdata_loading=0.632, iteration=2.467, learning_rate=0.000, train_acc=40.44, train_loss_cross_entropy=2.241, train_loss_seg=2.241, train_loss_smooth=2.165, train_macc=9.382, train_miou=5.957[0m)] 14%|#3        | 27/200 [04:11<08:59,  3.12s/it, [0;92mdata_loading=0.632, iteration=2.467, learning_rate=0.000, train_acc=40.44, train_loss_cross_entropy=2.241, train_loss_seg=2.241, train_loss_smooth=2.165, train_macc=9.382, train_miou=5.957[0m)] 14%|#3        | 27/200 [04:14<08:59,  3.12s/it, [0;92mdata_loading=0.733, iteration=2.380, learning_rate=0.000, train_acc=41.11, train_loss_cross_entropy=2.215, train_loss_seg=2.215, train_loss_smooth=2.135, train_macc=9.486, train_miou=6.043[0m)] 14%|#4        | 28/200 [04:14<08:56,  3.12s/it, [0;92mdata_loading=0.733, iteration=2.380, learning_rate=0.000, train_acc=41.11, train_loss_cross_entropy=2.215, train_loss_seg=2.215, train_loss_smooth=2.135, train_macc=9.486, train_miou=6.043[0m)] 14%|#4        | 28/200 [04:17<08:56,  3.12s/it, [0;92mdata_loading=0.680, iteration=2.604, learning_rate=0.000, train_acc=41.67, train_loss_cross_entropy=2.198, train_loss_seg=2.198, train_loss_smooth=2.118, train_macc=9.575, train_miou=6.121[0m)] 14%|#4        | 29/200 [04:17<09:01,  3.17s/it, [0;92mdata_loading=0.680, iteration=2.604, learning_rate=0.000, train_acc=41.67, train_loss_cross_entropy=2.198, train_loss_seg=2.198, train_loss_smooth=2.118, train_macc=9.575, train_miou=6.121[0m)] 14%|#4        | 29/200 [04:20<09:01,  3.17s/it, [0;92mdata_loading=0.671, iteration=1.532, learning_rate=0.000, train_acc=42.02, train_loss_cross_entropy=2.182, train_loss_seg=2.182, train_loss_smooth=2.100, train_macc=9.655, train_miou=6.187[0m)] 15%|#5        | 30/200 [04:20<08:09,  2.88s/it, [0;92mdata_loading=0.671, iteration=1.532, learning_rate=0.000, train_acc=42.02, train_loss_cross_entropy=2.182, train_loss_seg=2.182, train_loss_smooth=2.100, train_macc=9.655, train_miou=6.187[0m)] 15%|#5        | 30/200 [04:23<08:09,  2.88s/it, [0;92mdata_loading=0.608, iteration=2.636, learning_rate=0.000, train_acc=42.80, train_loss_cross_entropy=2.153, train_loss_seg=2.153, train_loss_smooth=2.065, train_macc=9.805, train_miou=6.313[0m)] 16%|#5        | 31/200 [04:23<08:25,  2.99s/it, [0;92mdata_loading=0.608, iteration=2.636, learning_rate=0.000, train_acc=42.80, train_loss_cross_entropy=2.153, train_loss_seg=2.153, train_loss_smooth=2.065, train_macc=9.805, train_miou=6.313[0m)] 16%|#5        | 31/200 [04:26<08:25,  2.99s/it, [0;92mdata_loading=0.726, iteration=2.599, learning_rate=0.000, train_acc=43.20, train_loss_cross_entropy=2.138, train_loss_seg=2.138, train_loss_smooth=2.048, train_macc=9.807, train_miou=6.371[0m)] 16%|#6        | 32/200 [04:26<08:39,  3.09s/it, [0;92mdata_loading=0.726, iteration=2.599, learning_rate=0.000, train_acc=43.20, train_loss_cross_entropy=2.138, train_loss_seg=2.138, train_loss_smooth=2.048, train_macc=9.807, train_miou=6.371[0m)] 16%|#6        | 32/200 [04:37<08:39,  3.09s/it, [0;92mdata_loading=8.452, iteration=2.333, learning_rate=0.000, train_acc=43.78, train_loss_cross_entropy=2.118, train_loss_seg=2.118, train_loss_smooth=2.024, train_macc=9.904, train_miou=6.475[0m)] 16%|#6        | 33/200 [04:37<15:01,  5.40s/it, [0;92mdata_loading=8.452, iteration=2.333, learning_rate=0.000, train_acc=43.78, train_loss_cross_entropy=2.118, train_loss_seg=2.118, train_loss_smooth=2.024, train_macc=9.904, train_miou=6.475[0m)] 16%|#6        | 33/200 [04:40<15:01,  5.40s/it, [0;92mdata_loading=0.678, iteration=2.669, learning_rate=0.000, train_acc=44.40, train_loss_cross_entropy=2.097, train_loss_seg=2.097, train_loss_smooth=2.000, train_macc=10.12, train_miou=6.643[0m)] 17%|#7        | 34/200 [04:40<13:14,  4.78s/it, [0;92mdata_loading=0.678, iteration=2.669, learning_rate=0.000, train_acc=44.40, train_loss_cross_entropy=2.097, train_loss_seg=2.097, train_loss_smooth=2.000, train_macc=10.12, train_miou=6.643[0m)] 17%|#7        | 34/200 [04:43<13:14,  4.78s/it, [0;92mdata_loading=0.622, iteration=1.752, learning_rate=0.000, train_acc=44.71, train_loss_cross_entropy=2.081, train_loss_seg=2.081, train_loss_smooth=1.982, train_macc=10.16, train_miou=6.673[0m)] 18%|#7        | 35/200 [04:43<11:10,  4.06s/it, [0;92mdata_loading=0.622, iteration=1.752, learning_rate=0.000, train_acc=44.71, train_loss_cross_entropy=2.081, train_loss_seg=2.081, train_loss_smooth=1.982, train_macc=10.16, train_miou=6.673[0m)] 18%|#7        | 35/200 [04:46<11:10,  4.06s/it, [0;92mdata_loading=0.568, iteration=2.548, learning_rate=0.000, train_acc=45.02, train_loss_cross_entropy=2.065, train_loss_seg=2.065, train_loss_smooth=1.963, train_macc=10.21, train_miou=6.719[0m)] 18%|#8        | 36/200 [04:46<10:19,  3.78s/it, [0;92mdata_loading=0.568, iteration=2.548, learning_rate=0.000, train_acc=45.02, train_loss_cross_entropy=2.065, train_loss_seg=2.065, train_loss_smooth=1.963, train_macc=10.21, train_miou=6.719[0m)] 18%|#8        | 36/200 [04:48<10:19,  3.78s/it, [0;92mdata_loading=0.543, iteration=1.906, learning_rate=0.000, train_acc=45.37, train_loss_cross_entropy=2.051, train_loss_seg=2.051, train_loss_smooth=1.946, train_macc=10.40, train_miou=6.846[0m)] 18%|#8        | 37/200 [04:48<09:10,  3.38s/it, [0;92mdata_loading=0.543, iteration=1.906, learning_rate=0.000, train_acc=45.37, train_loss_cross_entropy=2.051, train_loss_seg=2.051, train_loss_smooth=1.946, train_macc=10.40, train_miou=6.846[0m)] 18%|#8        | 37/200 [04:51<09:10,  3.38s/it, [0;92mdata_loading=0.609, iteration=2.473, learning_rate=0.000, train_acc=45.68, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.927, train_macc=10.43, train_miou=6.880[0m)] 19%|#9        | 38/200 [04:51<08:53,  3.29s/it, [0;92mdata_loading=0.609, iteration=2.473, learning_rate=0.000, train_acc=45.68, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.927, train_macc=10.43, train_miou=6.880[0m)] 19%|#9        | 38/200 [04:53<08:53,  3.29s/it, [0;92mdata_loading=0.670, iteration=1.538, learning_rate=0.000, train_acc=46.09, train_loss_cross_entropy=2.010, train_loss_seg=2.010, train_loss_smooth=1.896, train_macc=10.53, train_miou=6.962[0m)] 20%|#9        | 39/200 [04:53<07:57,  2.97s/it, [0;92mdata_loading=0.670, iteration=1.538, learning_rate=0.000, train_acc=46.09, train_loss_cross_entropy=2.010, train_loss_seg=2.010, train_loss_smooth=1.896, train_macc=10.53, train_miou=6.962[0m)] 20%|#9        | 39/200 [04:57<07:57,  2.97s/it, [0;92mdata_loading=0.733, iteration=2.486, learning_rate=0.001, train_acc=46.52, train_loss_cross_entropy=1.992, train_loss_seg=1.992, train_loss_smooth=1.874, train_macc=10.61, train_miou=7.026[0m)] 20%|##        | 40/200 [04:57<08:06,  3.04s/it, [0;92mdata_loading=0.733, iteration=2.486, learning_rate=0.001, train_acc=46.52, train_loss_cross_entropy=1.992, train_loss_seg=1.992, train_loss_smooth=1.874, train_macc=10.61, train_miou=7.026[0m)] 20%|##        | 40/200 [05:00<08:06,  3.04s/it, [0;92mdata_loading=0.785, iteration=2.572, learning_rate=0.001, train_acc=46.95, train_loss_cross_entropy=1.973, train_loss_seg=1.973, train_loss_smooth=1.851, train_macc=10.75, train_miou=7.142[0m)] 20%|##        | 41/200 [05:00<08:18,  3.14s/it, [0;92mdata_loading=0.785, iteration=2.572, learning_rate=0.001, train_acc=46.95, train_loss_cross_entropy=1.973, train_loss_seg=1.973, train_loss_smooth=1.851, train_macc=10.75, train_miou=7.142[0m)] 20%|##        | 41/200 [05:09<08:18,  3.14s/it, [0;92mdata_loading=6.491, iteration=2.452, learning_rate=0.001, train_acc=47.22, train_loss_cross_entropy=1.96 , train_loss_seg=1.96 , train_loss_smooth=1.836, train_macc=10.92, train_miou=7.278[0m)] 21%|##1       | 42/200 [05:09<12:50,  4.88s/it, [0;92mdata_loading=6.491, iteration=2.452, learning_rate=0.001, train_acc=47.22, train_loss_cross_entropy=1.96 , train_loss_seg=1.96 , train_loss_smooth=1.836, train_macc=10.92, train_miou=7.278[0m)] 21%|##1       | 42/200 [05:12<12:50,  4.88s/it, [0;92mdata_loading=0.652, iteration=2.732, learning_rate=0.001, train_acc=48.01, train_loss_cross_entropy=1.939, train_loss_seg=1.939, train_loss_smooth=1.809, train_macc=11.19, train_miou=7.506[0m)] 22%|##1       | 43/200 [05:12<11:35,  4.43s/it, [0;92mdata_loading=0.652, iteration=2.732, learning_rate=0.001, train_acc=48.01, train_loss_cross_entropy=1.939, train_loss_seg=1.939, train_loss_smooth=1.809, train_macc=11.19, train_miou=7.506[0m)] 22%|##1       | 43/200 [05:16<11:35,  4.43s/it, [0;92mdata_loading=0.661, iteration=2.618, learning_rate=0.001, train_acc=48.46, train_loss_cross_entropy=1.922, train_loss_seg=1.922, train_loss_smooth=1.788, train_macc=11.39, train_miou=7.670[0m)] 22%|##2       | 44/200 [05:16<10:37,  4.09s/it, [0;92mdata_loading=0.661, iteration=2.618, learning_rate=0.001, train_acc=48.46, train_loss_cross_entropy=1.922, train_loss_seg=1.922, train_loss_smooth=1.788, train_macc=11.39, train_miou=7.670[0m)] 22%|##2       | 44/200 [05:19<10:37,  4.09s/it, [0;92mdata_loading=0.725, iteration=3.019, learning_rate=0.001, train_acc=48.90, train_loss_cross_entropy=1.908, train_loss_seg=1.908, train_loss_smooth=1.771, train_macc=11.55, train_miou=7.801[0m)] 22%|##2       | 45/200 [05:19<10:17,  3.98s/it, [0;92mdata_loading=0.725, iteration=3.019, learning_rate=0.001, train_acc=48.90, train_loss_cross_entropy=1.908, train_loss_seg=1.908, train_loss_smooth=1.771, train_macc=11.55, train_miou=7.801[0m)] 22%|##2       | 45/200 [05:22<10:17,  3.98s/it, [0;92mdata_loading=0.641, iteration=1.618, learning_rate=0.001, train_acc=49.18, train_loss_cross_entropy=1.891, train_loss_seg=1.891, train_loss_smooth=1.751, train_macc=11.65, train_miou=7.871[0m)] 23%|##3       | 46/200 [05:22<08:53,  3.47s/it, [0;92mdata_loading=0.641, iteration=1.618, learning_rate=0.001, train_acc=49.18, train_loss_cross_entropy=1.891, train_loss_seg=1.891, train_loss_smooth=1.751, train_macc=11.65, train_miou=7.871[0m)] 23%|##3       | 46/200 [05:25<08:53,  3.47s/it, [0;92mdata_loading=0.689, iteration=2.366, learning_rate=0.001, train_acc=49.40, train_loss_cross_entropy=1.879, train_loss_seg=1.879, train_loss_smooth=1.737, train_macc=11.75, train_miou=7.935[0m)] 24%|##3       | 47/200 [05:25<08:31,  3.34s/it, [0;92mdata_loading=0.689, iteration=2.366, learning_rate=0.001, train_acc=49.40, train_loss_cross_entropy=1.879, train_loss_seg=1.879, train_loss_smooth=1.737, train_macc=11.75, train_miou=7.935[0m)] 24%|##3       | 47/200 [05:28<08:31,  3.34s/it, [0;92mdata_loading=0.662, iteration=2.839, learning_rate=0.001, train_acc=50.15, train_loss_cross_entropy=1.859, train_loss_seg=1.859, train_loss_smooth=1.710, train_macc=12.06, train_miou=8.182[0m)] 24%|##4       | 48/200 [05:28<08:35,  3.39s/it, [0;92mdata_loading=0.662, iteration=2.839, learning_rate=0.001, train_acc=50.15, train_loss_cross_entropy=1.859, train_loss_seg=1.859, train_loss_smooth=1.710, train_macc=12.06, train_miou=8.182[0m)] 24%|##4       | 48/200 [05:32<08:35,  3.39s/it, [0;92mdata_loading=0.704, iteration=2.600, learning_rate=0.001, train_acc=50.37, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.697, train_macc=12.19, train_miou=8.256[0m)] 24%|##4       | 49/200 [05:32<08:28,  3.36s/it, [0;92mdata_loading=0.704, iteration=2.600, learning_rate=0.001, train_acc=50.37, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.697, train_macc=12.19, train_miou=8.256[0m)] 24%|##4       | 49/200 [05:34<08:28,  3.36s/it, [0;92mdata_loading=0.560, iteration=2.431, learning_rate=0.001, train_acc=50.59, train_loss_cross_entropy=1.835, train_loss_seg=1.835, train_loss_smooth=1.682, train_macc=12.38, train_miou=8.380[0m)] 25%|##5       | 50/200 [05:34<08:07,  3.25s/it, [0;92mdata_loading=0.560, iteration=2.431, learning_rate=0.001, train_acc=50.59, train_loss_cross_entropy=1.835, train_loss_seg=1.835, train_loss_smooth=1.682, train_macc=12.38, train_miou=8.380[0m)] 25%|##5       | 50/200 [05:48<08:07,  3.25s/it, [0;92mdata_loading=10.80, iteration=2.518, learning_rate=0.001, train_acc=50.88, train_loss_cross_entropy=1.822, train_loss_seg=1.822, train_loss_smooth=1.666, train_macc=12.59, train_miou=8.529[0m)] 26%|##5       | 51/200 [05:48<15:34,  6.27s/it, [0;92mdata_loading=10.80, iteration=2.518, learning_rate=0.001, train_acc=50.88, train_loss_cross_entropy=1.822, train_loss_seg=1.822, train_loss_smooth=1.666, train_macc=12.59, train_miou=8.529[0m)] 26%|##5       | 51/200 [05:51<15:34,  6.27s/it, [0;92mdata_loading=0.721, iteration=2.385, learning_rate=0.001, train_acc=51.24, train_loss_cross_entropy=1.805, train_loss_seg=1.805, train_loss_smooth=1.644, train_macc=12.79, train_miou=8.671[0m)] 26%|##6       | 52/200 [05:51<13:07,  5.32s/it, [0;92mdata_loading=0.721, iteration=2.385, learning_rate=0.001, train_acc=51.24, train_loss_cross_entropy=1.805, train_loss_seg=1.805, train_loss_smooth=1.644, train_macc=12.79, train_miou=8.671[0m)] 26%|##6       | 52/200 [05:54<13:07,  5.32s/it, [0;92mdata_loading=0.742, iteration=2.515, learning_rate=0.002, train_acc=51.75, train_loss_cross_entropy=1.789, train_loss_seg=1.789, train_loss_smooth=1.622, train_macc=13.08, train_miou=8.894[0m)] 26%|##6       | 53/200 [05:54<11:31,  4.70s/it, [0;92mdata_loading=0.742, iteration=2.515, learning_rate=0.002, train_acc=51.75, train_loss_cross_entropy=1.789, train_loss_seg=1.789, train_loss_smooth=1.622, train_macc=13.08, train_miou=8.894[0m)] 26%|##6       | 53/200 [05:57<11:31,  4.70s/it, [0;92mdata_loading=0.716, iteration=1.657, learning_rate=0.002, train_acc=52.05, train_loss_cross_entropy=1.775, train_loss_seg=1.775, train_loss_smooth=1.606, train_macc=13.34, train_miou=9.075[0m)] 27%|##7       | 54/200 [05:57<09:44,  4.00s/it, [0;92mdata_loading=0.716, iteration=1.657, learning_rate=0.002, train_acc=52.05, train_loss_cross_entropy=1.775, train_loss_seg=1.775, train_loss_smooth=1.606, train_macc=13.34, train_miou=9.075[0m)] 27%|##7       | 54/200 [05:59<09:44,  4.00s/it, [0;92mdata_loading=0.659, iteration=1.531, learning_rate=0.002, train_acc=52.27, train_loss_cross_entropy=1.762, train_loss_seg=1.762, train_loss_smooth=1.589, train_macc=13.48, train_miou=9.189[0m)] 28%|##7       | 55/200 [05:59<08:21,  3.46s/it, [0;92mdata_loading=0.659, iteration=1.531, learning_rate=0.002, train_acc=52.27, train_loss_cross_entropy=1.762, train_loss_seg=1.762, train_loss_smooth=1.589, train_macc=13.48, train_miou=9.189[0m)] 28%|##7       | 55/200 [06:02<08:21,  3.46s/it, [0;92mdata_loading=0.669, iteration=2.584, learning_rate=0.002, train_acc=52.84, train_loss_cross_entropy=1.745, train_loss_seg=1.745, train_loss_smooth=1.566, train_macc=13.83, train_miou=9.460[0m)] 28%|##8       | 56/200 [06:02<08:09,  3.40s/it, [0;92mdata_loading=0.669, iteration=2.584, learning_rate=0.002, train_acc=52.84, train_loss_cross_entropy=1.745, train_loss_seg=1.745, train_loss_smooth=1.566, train_macc=13.83, train_miou=9.460[0m)] 28%|##8       | 56/200 [06:05<08:09,  3.40s/it, [0;92mdata_loading=0.596, iteration=2.446, learning_rate=0.002, train_acc=53.22, train_loss_cross_entropy=1.730, train_loss_seg=1.730, train_loss_smooth=1.547, train_macc=14.08, train_miou=9.649[0m)] 28%|##8       | 57/200 [06:05<07:50,  3.29s/it, [0;92mdata_loading=0.596, iteration=2.446, learning_rate=0.002, train_acc=53.22, train_loss_cross_entropy=1.730, train_loss_seg=1.730, train_loss_smooth=1.547, train_macc=14.08, train_miou=9.649[0m)] 28%|##8       | 57/200 [06:08<07:50,  3.29s/it, [0;92mdata_loading=0.852, iteration=2.529, learning_rate=0.002, train_acc=53.57, train_loss_cross_entropy=1.717, train_loss_seg=1.717, train_loss_smooth=1.530, train_macc=14.33, train_miou=9.839[0m)] 29%|##9       | 58/200 [06:08<07:51,  3.32s/it, [0;92mdata_loading=0.852, iteration=2.529, learning_rate=0.002, train_acc=53.57, train_loss_cross_entropy=1.717, train_loss_seg=1.717, train_loss_smooth=1.530, train_macc=14.33, train_miou=9.839[0m)] 29%|##9       | 58/200 [06:11<07:51,  3.32s/it, [0;92mdata_loading=0.597, iteration=1.664, learning_rate=0.002, train_acc=53.70, train_loss_cross_entropy=1.710, train_loss_seg=1.710, train_loss_smooth=1.523, train_macc=14.51, train_miou=9.957[0m)] 30%|##9       | 59/200 [06:11<07:03,  3.00s/it, [0;92mdata_loading=0.597, iteration=1.664, learning_rate=0.002, train_acc=53.70, train_loss_cross_entropy=1.710, train_loss_seg=1.710, train_loss_smooth=1.523, train_macc=14.51, train_miou=9.957[0m)] 30%|##9       | 59/200 [06:14<07:03,  3.00s/it, [0;92mdata_loading=0.894, iteration=2.451, learning_rate=0.003, train_acc=54.00, train_loss_cross_entropy=1.697, train_loss_seg=1.697, train_loss_smooth=1.506, train_macc=14.71, train_miou=10.09[0m)] 30%|###       | 60/200 [06:14<07:14,  3.10s/it, [0;92mdata_loading=0.894, iteration=2.451, learning_rate=0.003, train_acc=54.00, train_loss_cross_entropy=1.697, train_loss_seg=1.697, train_loss_smooth=1.506, train_macc=14.71, train_miou=10.09[0m)] 30%|###       | 60/200 [06:17<07:14,  3.10s/it, [0;92mdata_loading=0.656, iteration=2.507, learning_rate=0.003, train_acc=54.34, train_loss_cross_entropy=1.685, train_loss_seg=1.685, train_loss_smooth=1.492, train_macc=15.06, train_miou=10.33[0m)] 30%|###       | 61/200 [06:17<07:13,  3.12s/it, [0;92mdata_loading=0.656, iteration=2.507, learning_rate=0.003, train_acc=54.34, train_loss_cross_entropy=1.685, train_loss_seg=1.685, train_loss_smooth=1.492, train_macc=15.06, train_miou=10.33[0m)] 30%|###       | 61/200 [06:20<07:13,  3.12s/it, [0;92mdata_loading=0.697, iteration=2.385, learning_rate=0.003, train_acc=54.72, train_loss_cross_entropy=1.670, train_loss_seg=1.670, train_loss_smooth=1.471, train_macc=15.38, train_miou=10.56[0m)] 31%|###1      | 62/200 [06:20<07:09,  3.11s/it, [0;92mdata_loading=0.697, iteration=2.385, learning_rate=0.003, train_acc=54.72, train_loss_cross_entropy=1.670, train_loss_seg=1.670, train_loss_smooth=1.471, train_macc=15.38, train_miou=10.56[0m)] 31%|###1      | 62/200 [06:24<07:09,  3.11s/it, [0;92mdata_loading=0.810, iteration=2.618, learning_rate=0.003, train_acc=55.16, train_loss_cross_entropy=1.657, train_loss_seg=1.657, train_loss_smooth=1.454, train_macc=15.84, train_miou=10.87[0m)] 32%|###1      | 63/200 [06:24<07:19,  3.21s/it, [0;92mdata_loading=0.810, iteration=2.618, learning_rate=0.003, train_acc=55.16, train_loss_cross_entropy=1.657, train_loss_seg=1.657, train_loss_smooth=1.454, train_macc=15.84, train_miou=10.87[0m)] 32%|###1      | 63/200 [06:27<07:19,  3.21s/it, [0;92mdata_loading=0.713, iteration=2.609, learning_rate=0.003, train_acc=55.46, train_loss_cross_entropy=1.647, train_loss_seg=1.647, train_loss_smooth=1.441, train_macc=16.07, train_miou=11.04[0m)] 32%|###2      | 64/200 [06:27<07:20,  3.24s/it, [0;92mdata_loading=0.713, iteration=2.609, learning_rate=0.003, train_acc=55.46, train_loss_cross_entropy=1.647, train_loss_seg=1.647, train_loss_smooth=1.441, train_macc=16.07, train_miou=11.04[0m)] 32%|###2      | 64/200 [06:30<07:20,  3.24s/it, [0;92mdata_loading=0.738, iteration=2.444, learning_rate=0.004, train_acc=55.76, train_loss_cross_entropy=1.635, train_loss_seg=1.635, train_loss_smooth=1.425, train_macc=16.45, train_miou=11.29[0m)] 32%|###2      | 65/200 [06:30<07:15,  3.22s/it, [0;92mdata_loading=0.738, iteration=2.444, learning_rate=0.004, train_acc=55.76, train_loss_cross_entropy=1.635, train_loss_seg=1.635, train_loss_smooth=1.425, train_macc=16.45, train_miou=11.29[0m)] 32%|###2      | 65/200 [06:34<07:15,  3.22s/it, [0;92mdata_loading=0.598, iteration=2.715, learning_rate=0.004, train_acc=56.12, train_loss_cross_entropy=1.625, train_loss_seg=1.625, train_loss_smooth=1.412, train_macc=16.85, train_miou=11.61[0m)] 33%|###3      | 66/200 [06:34<07:15,  3.25s/it, [0;92mdata_loading=0.598, iteration=2.715, learning_rate=0.004, train_acc=56.12, train_loss_cross_entropy=1.625, train_loss_seg=1.625, train_loss_smooth=1.412, train_macc=16.85, train_miou=11.61[0m)] 33%|###3      | 66/200 [06:37<07:15,  3.25s/it, [0;92mdata_loading=0.638, iteration=2.399, learning_rate=0.004, train_acc=56.40, train_loss_cross_entropy=1.614, train_loss_seg=1.614, train_loss_smooth=1.398, train_macc=17.20, train_miou=11.89[0m)] 34%|###3      | 67/200 [06:37<07:03,  3.19s/it, [0;92mdata_loading=0.638, iteration=2.399, learning_rate=0.004, train_acc=56.40, train_loss_cross_entropy=1.614, train_loss_seg=1.614, train_loss_smooth=1.398, train_macc=17.20, train_miou=11.89[0m)] 34%|###3      | 67/200 [06:40<07:03,  3.19s/it, [0;92mdata_loading=0.792, iteration=2.545, learning_rate=0.004, train_acc=56.79, train_loss_cross_entropy=1.601, train_loss_seg=1.601, train_loss_smooth=1.381, train_macc=17.53, train_miou=12.15[0m)] 34%|###4      | 68/200 [06:40<07:06,  3.23s/it, [0;92mdata_loading=0.792, iteration=2.545, learning_rate=0.004, train_acc=56.79, train_loss_cross_entropy=1.601, train_loss_seg=1.601, train_loss_smooth=1.381, train_macc=17.53, train_miou=12.15[0m)] 34%|###4      | 68/200 [06:43<07:06,  3.23s/it, [0;92mdata_loading=0.613, iteration=2.368, learning_rate=0.005, train_acc=57.18, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_loss_smooth=1.361, train_macc=17.82, train_miou=12.38[0m)] 34%|###4      | 69/200 [06:43<06:53,  3.16s/it, [0;92mdata_loading=0.613, iteration=2.368, learning_rate=0.005, train_acc=57.18, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_loss_smooth=1.361, train_macc=17.82, train_miou=12.38[0m)] 34%|###4      | 69/200 [06:46<06:53,  3.16s/it, [0;92mdata_loading=0.675, iteration=2.503, learning_rate=0.005, train_acc=57.67, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_loss_smooth=1.339, train_macc=18.16, train_miou=12.64[0m)] 35%|###5      | 70/200 [06:46<06:51,  3.16s/it, [0;92mdata_loading=0.675, iteration=2.503, learning_rate=0.005, train_acc=57.67, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_loss_smooth=1.339, train_macc=18.16, train_miou=12.64[0m)] 35%|###5      | 70/200 [06:50<06:51,  3.16s/it, [0;92mdata_loading=0.695, iteration=2.743, learning_rate=0.005, train_acc=58.05, train_loss_cross_entropy=1.559, train_loss_seg=1.559, train_loss_smooth=1.322, train_macc=18.42, train_miou=12.83[0m)] 36%|###5      | 71/200 [06:50<06:58,  3.25s/it, [0;92mdata_loading=0.695, iteration=2.743, learning_rate=0.005, train_acc=58.05, train_loss_cross_entropy=1.559, train_loss_seg=1.559, train_loss_smooth=1.322, train_macc=18.42, train_miou=12.83[0m)] 36%|###5      | 71/200 [06:53<06:58,  3.25s/it, [0;92mdata_loading=0.909, iteration=2.477, learning_rate=0.006, train_acc=58.21, train_loss_cross_entropy=1.553, train_loss_seg=1.553, train_loss_smooth=1.315, train_macc=18.59, train_miou=12.96[0m)] 36%|###6      | 72/200 [06:53<07:01,  3.29s/it, [0;92mdata_loading=0.909, iteration=2.477, learning_rate=0.006, train_acc=58.21, train_loss_cross_entropy=1.553, train_loss_seg=1.553, train_loss_smooth=1.315, train_macc=18.59, train_miou=12.96[0m)] 36%|###6      | 72/200 [06:56<07:01,  3.29s/it, [0;92mdata_loading=0.706, iteration=2.847, learning_rate=0.006, train_acc=58.62, train_loss_cross_entropy=1.539, train_loss_seg=1.539, train_loss_smooth=1.297, train_macc=19.03, train_miou=13.28[0m)] 36%|###6      | 73/200 [06:56<07:07,  3.37s/it, [0;92mdata_loading=0.706, iteration=2.847, learning_rate=0.006, train_acc=58.62, train_loss_cross_entropy=1.539, train_loss_seg=1.539, train_loss_smooth=1.297, train_macc=19.03, train_miou=13.28[0m)] 36%|###6      | 73/200 [07:00<07:07,  3.37s/it, [0;92mdata_loading=0.661, iteration=2.842, learning_rate=0.006, train_acc=58.90, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_loss_smooth=1.283, train_macc=19.40, train_miou=13.55[0m)] 37%|###7      | 74/200 [07:00<07:09,  3.41s/it, [0;92mdata_loading=0.661, iteration=2.842, learning_rate=0.006, train_acc=58.90, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_loss_smooth=1.283, train_macc=19.40, train_miou=13.55[0m)] 37%|###7      | 74/200 [07:03<07:09,  3.41s/it, [0;92mdata_loading=0.634, iteration=2.684, learning_rate=0.007, train_acc=59.29, train_loss_cross_entropy=1.518, train_loss_seg=1.518, train_loss_smooth=1.269, train_macc=19.67, train_miou=13.75[0m)] 38%|###7      | 75/200 [07:03<07:02,  3.38s/it, [0;92mdata_loading=0.634, iteration=2.684, learning_rate=0.007, train_acc=59.29, train_loss_cross_entropy=1.518, train_loss_seg=1.518, train_loss_smooth=1.269, train_macc=19.67, train_miou=13.75[0m)] 38%|###7      | 75/200 [07:07<07:02,  3.38s/it, [0;92mdata_loading=0.687, iteration=2.555, learning_rate=0.007, train_acc=59.65, train_loss_cross_entropy=1.507, train_loss_seg=1.507, train_loss_smooth=1.253, train_macc=20.09, train_miou=14.05[0m)] 38%|###8      | 76/200 [07:07<06:54,  3.34s/it, [0;92mdata_loading=0.687, iteration=2.555, learning_rate=0.007, train_acc=59.65, train_loss_cross_entropy=1.507, train_loss_seg=1.507, train_loss_smooth=1.253, train_macc=20.09, train_miou=14.05[0m)] 38%|###8      | 76/200 [07:09<06:54,  3.34s/it, [0;92mdata_loading=0.580, iteration=2.402, learning_rate=0.008, train_acc=59.99, train_loss_cross_entropy=1.494, train_loss_seg=1.494, train_loss_smooth=1.235, train_macc=20.40, train_miou=14.29[0m)] 38%|###8      | 77/200 [07:09<06:37,  3.23s/it, [0;92mdata_loading=0.580, iteration=2.402, learning_rate=0.008, train_acc=59.99, train_loss_cross_entropy=1.494, train_loss_seg=1.494, train_loss_smooth=1.235, train_macc=20.40, train_miou=14.29[0m)] 38%|###8      | 77/200 [07:13<06:37,  3.23s/it, [0;92mdata_loading=0.638, iteration=2.529, learning_rate=0.008, train_acc=60.33, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_loss_smooth=1.215, train_macc=20.71, train_miou=14.54[0m)] 39%|###9      | 78/200 [07:13<06:32,  3.21s/it, [0;92mdata_loading=0.638, iteration=2.529, learning_rate=0.008, train_acc=60.33, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_loss_smooth=1.215, train_macc=20.71, train_miou=14.54[0m)] 39%|###9      | 78/200 [07:16<06:32,  3.21s/it, [0;92mdata_loading=0.729, iteration=2.472, learning_rate=0.009, train_acc=60.65, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.201, train_macc=21.01, train_miou=14.76[0m)] 40%|###9      | 79/200 [07:16<06:28,  3.21s/it, [0;92mdata_loading=0.729, iteration=2.472, learning_rate=0.009, train_acc=60.65, train_loss_cross_entropy=1.470, train_loss_seg=1.470, train_loss_smooth=1.201, train_macc=21.01, train_miou=14.76[0m)] 40%|###9      | 79/200 [07:19<06:28,  3.21s/it, [0;92mdata_loading=0.767, iteration=2.538, learning_rate=0.009, train_acc=60.92, train_loss_cross_entropy=1.461, train_loss_seg=1.461, train_loss_smooth=1.188, train_macc=21.32, train_miou=14.99[0m)] 40%|####      | 80/200 [07:19<06:28,  3.24s/it, [0;92mdata_loading=0.767, iteration=2.538, learning_rate=0.009, train_acc=60.92, train_loss_cross_entropy=1.461, train_loss_seg=1.461, train_loss_smooth=1.188, train_macc=21.32, train_miou=14.99[0m)] 40%|####      | 80/200 [07:21<06:28,  3.24s/it, [0;92mdata_loading=0.697, iteration=1.328, learning_rate=0.010, train_acc=61.05, train_loss_cross_entropy=1.450, train_loss_seg=1.450, train_loss_smooth=1.174, train_macc=21.43, train_miou=15.07[0m)] 40%|####      | 81/200 [07:21<05:42,  2.87s/it, [0;92mdata_loading=0.697, iteration=1.328, learning_rate=0.010, train_acc=61.05, train_loss_cross_entropy=1.450, train_loss_seg=1.450, train_loss_smooth=1.174, train_macc=21.43, train_miou=15.07[0m)] 40%|####      | 81/200 [07:25<05:42,  2.87s/it, [0;92mdata_loading=0.851, iteration=2.627, learning_rate=0.010, train_acc=61.27, train_loss_cross_entropy=1.441, train_loss_seg=1.441, train_loss_smooth=1.162, train_macc=21.66, train_miou=15.22[0m)] 41%|####1     | 82/200 [07:25<06:00,  3.06s/it, [0;92mdata_loading=0.851, iteration=2.627, learning_rate=0.010, train_acc=61.27, train_loss_cross_entropy=1.441, train_loss_seg=1.441, train_loss_smooth=1.162, train_macc=21.66, train_miou=15.22[0m)] 41%|####1     | 82/200 [07:28<06:00,  3.06s/it, [0;92mdata_loading=0.584, iteration=2.650, learning_rate=0.011, train_acc=61.51, train_loss_cross_entropy=1.432, train_loss_seg=1.432, train_loss_smooth=1.151, train_macc=21.91, train_miou=15.41[0m)] 42%|####1     | 83/200 [07:28<06:03,  3.11s/it, [0;92mdata_loading=0.584, iteration=2.650, learning_rate=0.011, train_acc=61.51, train_loss_cross_entropy=1.432, train_loss_seg=1.432, train_loss_smooth=1.151, train_macc=21.91, train_miou=15.41[0m)] 42%|####1     | 83/200 [07:31<06:03,  3.11s/it, [0;92mdata_loading=0.603, iteration=2.593, learning_rate=0.012, train_acc=61.93, train_loss_cross_entropy=1.420, train_loss_seg=1.420, train_loss_smooth=1.133, train_macc=22.33, train_miou=15.73[0m)] 42%|####2     | 84/200 [07:31<06:03,  3.14s/it, [0;92mdata_loading=0.603, iteration=2.593, learning_rate=0.012, train_acc=61.93, train_loss_cross_entropy=1.420, train_loss_seg=1.420, train_loss_smooth=1.133, train_macc=22.33, train_miou=15.73[0m)] 42%|####2     | 84/200 [07:34<06:03,  3.14s/it, [0;92mdata_loading=0.788, iteration=2.600, learning_rate=0.012, train_acc=62.15, train_loss_cross_entropy=1.411, train_loss_seg=1.411, train_loss_smooth=1.122, train_macc=22.69, train_miou=16.00[0m)] 42%|####2     | 85/200 [07:34<06:09,  3.21s/it, [0;92mdata_loading=0.788, iteration=2.600, learning_rate=0.012, train_acc=62.15, train_loss_cross_entropy=1.411, train_loss_seg=1.411, train_loss_smooth=1.122, train_macc=22.69, train_miou=16.00[0m)] 42%|####2     | 85/200 [07:38<06:09,  3.21s/it, [0;92mdata_loading=0.795, iteration=2.539, learning_rate=0.013, train_acc=62.31, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.116, train_macc=22.99, train_miou=16.26[0m)] 43%|####3     | 86/200 [07:38<06:10,  3.25s/it, [0;92mdata_loading=0.795, iteration=2.539, learning_rate=0.013, train_acc=62.31, train_loss_cross_entropy=1.405, train_loss_seg=1.405, train_loss_smooth=1.116, train_macc=22.99, train_miou=16.26[0m)] 43%|####3     | 86/200 [07:41<06:10,  3.25s/it, [0;92mdata_loading=0.732, iteration=2.520, learning_rate=0.014, train_acc=62.42, train_loss_cross_entropy=1.399, train_loss_seg=1.399, train_loss_smooth=1.111, train_macc=23.06, train_miou=16.31[0m)] 44%|####3     | 87/200 [07:41<06:07,  3.25s/it, [0;92mdata_loading=0.732, iteration=2.520, learning_rate=0.014, train_acc=62.42, train_loss_cross_entropy=1.399, train_loss_seg=1.399, train_loss_smooth=1.111, train_macc=23.06, train_miou=16.31[0m)] 44%|####3     | 87/200 [07:44<06:07,  3.25s/it, [0;92mdata_loading=0.595, iteration=2.413, learning_rate=0.015, train_acc=62.64, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.100, train_macc=23.42, train_miou=16.61[0m)] 44%|####4     | 88/200 [07:44<05:55,  3.18s/it, [0;92mdata_loading=0.595, iteration=2.413, learning_rate=0.015, train_acc=62.64, train_loss_cross_entropy=1.391, train_loss_seg=1.391, train_loss_smooth=1.100, train_macc=23.42, train_miou=16.61[0m)] 44%|####4     | 88/200 [07:47<05:55,  3.18s/it, [0;92mdata_loading=0.642, iteration=2.405, learning_rate=0.016, train_acc=62.85, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.088, train_macc=23.74, train_miou=16.86[0m)] 44%|####4     | 89/200 [07:47<05:48,  3.14s/it, [0;92mdata_loading=0.642, iteration=2.405, learning_rate=0.016, train_acc=62.85, train_loss_cross_entropy=1.382, train_loss_seg=1.382, train_loss_smooth=1.088, train_macc=23.74, train_miou=16.86[0m)] 44%|####4     | 89/200 [07:50<05:48,  3.14s/it, [0;92mdata_loading=0.694, iteration=1.744, learning_rate=0.017, train_acc=63.03, train_loss_cross_entropy=1.374, train_loss_seg=1.374, train_loss_smooth=1.077, train_macc=23.91, train_miou=17.00[0m)] 45%|####5     | 90/200 [07:50<05:22,  2.93s/it, [0;92mdata_loading=0.694, iteration=1.744, learning_rate=0.017, train_acc=63.03, train_loss_cross_entropy=1.374, train_loss_seg=1.374, train_loss_smooth=1.077, train_macc=23.91, train_miou=17.00[0m)] 45%|####5     | 90/200 [07:56<05:22,  2.93s/it, [0;92mdata_loading=3.751, iteration=2.432, learning_rate=0.018, train_acc=63.28, train_loss_cross_entropy=1.365, train_loss_seg=1.365, train_loss_smooth=1.064, train_macc=24.23, train_miou=17.27[0m)] 46%|####5     | 91/200 [07:56<07:05,  3.91s/it, [0;92mdata_loading=3.751, iteration=2.432, learning_rate=0.018, train_acc=63.28, train_loss_cross_entropy=1.365, train_loss_seg=1.365, train_loss_smooth=1.064, train_macc=24.23, train_miou=17.27[0m)] 46%|####5     | 91/200 [08:00<07:05,  3.91s/it, [0;92mdata_loading=1.520, iteration=2.833, learning_rate=0.019, train_acc=63.49, train_loss_cross_entropy=1.358, train_loss_seg=1.358, train_loss_smooth=1.058, train_macc=24.51, train_miou=17.53[0m)] 46%|####6     | 92/200 [08:00<07:16,  4.04s/it, [0;92mdata_loading=1.520, iteration=2.833, learning_rate=0.019, train_acc=63.49, train_loss_cross_entropy=1.358, train_loss_seg=1.358, train_loss_smooth=1.058, train_macc=24.51, train_miou=17.53[0m)] 46%|####6     | 92/200 [08:02<07:16,  4.04s/it, [0;92mdata_loading=0.642, iteration=1.515, learning_rate=0.020, train_acc=63.62, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.047, train_macc=24.84, train_miou=17.81[0m)] 46%|####6     | 93/200 [08:02<06:11,  3.48s/it, [0;92mdata_loading=0.642, iteration=1.515, learning_rate=0.020, train_acc=63.62, train_loss_cross_entropy=1.350, train_loss_seg=1.350, train_loss_smooth=1.047, train_macc=24.84, train_miou=17.81[0m)] 46%|####6     | 93/200 [08:05<06:11,  3.48s/it, [0;92mdata_loading=0.672, iteration=2.395, learning_rate=0.021, train_acc=63.77, train_loss_cross_entropy=1.344, train_loss_seg=1.344, train_loss_smooth=1.041, train_macc=25.02, train_miou=17.94[0m)] 47%|####6     | 94/200 [08:05<05:55,  3.35s/it, [0;92mdata_loading=0.672, iteration=2.395, learning_rate=0.021, train_acc=63.77, train_loss_cross_entropy=1.344, train_loss_seg=1.344, train_loss_smooth=1.041, train_macc=25.02, train_miou=17.94[0m)] 47%|####6     | 94/200 [08:23<05:55,  3.35s/it, [0;92mdata_loading=15.30, iteration=2.740, learning_rate=0.023, train_acc=63.91, train_loss_cross_entropy=1.341, train_loss_seg=1.341, train_loss_smooth=1.040, train_macc=25.22, train_miou=18.09[0m)] 48%|####7     | 95/200 [08:23<13:34,  7.76s/it, [0;92mdata_loading=15.30, iteration=2.740, learning_rate=0.023, train_acc=63.91, train_loss_cross_entropy=1.341, train_loss_seg=1.341, train_loss_smooth=1.040, train_macc=25.22, train_miou=18.09[0m)] 48%|####7     | 95/200 [08:27<13:34,  7.76s/it, [0;92mdata_loading=0.747, iteration=2.710, learning_rate=0.024, train_acc=64.03, train_loss_cross_entropy=1.336, train_loss_seg=1.336, train_loss_smooth=1.038, train_macc=25.44, train_miou=18.27[0m)] 48%|####8     | 96/200 [08:27<11:12,  6.47s/it, [0;92mdata_loading=0.747, iteration=2.710, learning_rate=0.024, train_acc=64.03, train_loss_cross_entropy=1.336, train_loss_seg=1.336, train_loss_smooth=1.038, train_macc=25.44, train_miou=18.27[0m)] 48%|####8     | 96/200 [08:30<11:12,  6.47s/it, [0;92mdata_loading=0.640, iteration=2.229, learning_rate=0.025, train_acc=64.09, train_loss_cross_entropy=1.333, train_loss_seg=1.333, train_loss_smooth=1.037, train_macc=25.75, train_miou=18.50[0m)] 48%|####8     | 97/200 [08:30<09:15,  5.39s/it, [0;92mdata_loading=0.640, iteration=2.229, learning_rate=0.025, train_acc=64.09, train_loss_cross_entropy=1.333, train_loss_seg=1.333, train_loss_smooth=1.037, train_macc=25.75, train_miou=18.50[0m)] 48%|####8     | 97/200 [08:33<09:15,  5.39s/it, [0;92mdata_loading=0.771, iteration=2.257, learning_rate=0.027, train_acc=64.25, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.030, train_macc=26.07, train_miou=18.75[0m)] 49%|####9     | 98/200 [08:33<07:57,  4.68s/it, [0;92mdata_loading=0.771, iteration=2.257, learning_rate=0.027, train_acc=64.25, train_loss_cross_entropy=1.327, train_loss_seg=1.327, train_loss_smooth=1.030, train_macc=26.07, train_miou=18.75[0m)] 49%|####9     | 98/200 [08:36<07:57,  4.68s/it, [0;92mdata_loading=0.681, iteration=2.654, learning_rate=0.029, train_acc=64.46, train_loss_cross_entropy=1.32 , train_loss_seg=1.32 , train_loss_smooth=1.020, train_macc=26.35, train_miou=18.98[0m)] 50%|####9     | 99/200 [08:36<07:12,  4.28s/it, [0;92mdata_loading=0.681, iteration=2.654, learning_rate=0.029, train_acc=64.46, train_loss_cross_entropy=1.32 , train_loss_seg=1.32 , train_loss_smooth=1.020, train_macc=26.35, train_miou=18.98[0m)] 50%|####9     | 99/200 [08:45<07:12,  4.28s/it, [0;92mdata_loading=6.002, iteration=2.613, learning_rate=0.030, train_acc=64.63, train_loss_cross_entropy=1.314, train_loss_seg=1.314, train_loss_smooth=1.015, train_macc=26.75, train_miou=19.31[0m)] 50%|#####     | 100/200 [08:45<09:17,  5.58s/it, [0;92mdata_loading=6.002, iteration=2.613, learning_rate=0.030, train_acc=64.63, train_loss_cross_entropy=1.314, train_loss_seg=1.314, train_loss_smooth=1.015, train_macc=26.75, train_miou=19.31[0m)] 50%|#####     | 100/200 [08:48<09:17,  5.58s/it, [0;92mdata_loading=0.606, iteration=2.586, learning_rate=0.032, train_acc=64.80, train_loss_cross_entropy=1.309, train_loss_seg=1.309, train_loss_smooth=1.009, train_macc=27.07, train_miou=19.58[0m)] 50%|#####     | 101/200 [08:48<08:01,  4.86s/it, [0;92mdata_loading=0.606, iteration=2.586, learning_rate=0.032, train_acc=64.80, train_loss_cross_entropy=1.309, train_loss_seg=1.309, train_loss_smooth=1.009, train_macc=27.07, train_miou=19.58[0m)] 50%|#####     | 101/200 [08:51<08:01,  4.86s/it, [0;92mdata_loading=0.669, iteration=2.436, learning_rate=0.034, train_acc=64.96, train_loss_cross_entropy=1.302, train_loss_seg=1.302, train_loss_smooth=1.000, train_macc=27.24, train_miou=19.72[0m)] 51%|#####1    | 102/200 [08:51<07:04,  4.34s/it, [0;92mdata_loading=0.669, iteration=2.436, learning_rate=0.034, train_acc=64.96, train_loss_cross_entropy=1.302, train_loss_seg=1.302, train_loss_smooth=1.000, train_macc=27.24, train_miou=19.72[0m)] 51%|#####1    | 102/200 [08:54<07:04,  4.34s/it, [0;92mdata_loading=0.678, iteration=2.290, learning_rate=0.036, train_acc=65.12, train_loss_cross_entropy=1.296, train_loss_seg=1.296, train_loss_smooth=0.992, train_macc=27.44, train_miou=19.87[0m)] 52%|#####1    | 103/200 [08:54<06:20,  3.93s/it, [0;92mdata_loading=0.678, iteration=2.290, learning_rate=0.036, train_acc=65.12, train_loss_cross_entropy=1.296, train_loss_seg=1.296, train_loss_smooth=0.992, train_macc=27.44, train_miou=19.87[0m)] 52%|#####1    | 103/200 [08:57<06:20,  3.93s/it, [0;92mdata_loading=0.654, iteration=2.320, learning_rate=0.038, train_acc=65.24, train_loss_cross_entropy=1.290, train_loss_seg=1.290, train_loss_smooth=0.986, train_macc=27.55, train_miou=19.95[0m)] 52%|#####2    | 104/200 [08:57<05:49,  3.64s/it, [0;92mdata_loading=0.654, iteration=2.320, learning_rate=0.038, train_acc=65.24, train_loss_cross_entropy=1.290, train_loss_seg=1.290, train_loss_smooth=0.986, train_macc=27.55, train_miou=19.95[0m)] 52%|#####2    | 104/200 [09:00<05:49,  3.64s/it, [0;92mdata_loading=0.668, iteration=2.657, learning_rate=0.041, train_acc=65.47, train_loss_cross_entropy=1.283, train_loss_seg=1.283, train_loss_smooth=0.975, train_macc=27.76, train_miou=20.13[0m)] 52%|#####2    | 105/200 [09:00<05:36,  3.55s/it, [0;92mdata_loading=0.668, iteration=2.657, learning_rate=0.041, train_acc=65.47, train_loss_cross_entropy=1.283, train_loss_seg=1.283, train_loss_smooth=0.975, train_macc=27.76, train_miou=20.13[0m)] 52%|#####2    | 105/200 [09:03<05:36,  3.55s/it, [0;92mdata_loading=0.594, iteration=2.499, learning_rate=0.043, train_acc=65.55, train_loss_cross_entropy=1.279, train_loss_seg=1.279, train_loss_smooth=0.973, train_macc=27.88, train_miou=20.22[0m)] 53%|#####3    | 106/200 [09:03<05:20,  3.41s/it, [0;92mdata_loading=0.594, iteration=2.499, learning_rate=0.043, train_acc=65.55, train_loss_cross_entropy=1.279, train_loss_seg=1.279, train_loss_smooth=0.973, train_macc=27.88, train_miou=20.22[0m)] 53%|#####3    | 106/200 [09:07<05:20,  3.41s/it, [0;92mdata_loading=0.681, iteration=2.657, learning_rate=0.046, train_acc=65.70, train_loss_cross_entropy=1.274, train_loss_seg=1.274, train_loss_smooth=0.967, train_macc=28.09, train_miou=20.40[0m)] 54%|#####3    | 107/200 [09:07<05:15,  3.39s/it, [0;92mdata_loading=0.681, iteration=2.657, learning_rate=0.046, train_acc=65.70, train_loss_cross_entropy=1.274, train_loss_seg=1.274, train_loss_smooth=0.967, train_macc=28.09, train_miou=20.40[0m)] 54%|#####3    | 107/200 [09:10<05:15,  3.39s/it, [0;92mdata_loading=0.605, iteration=2.583, learning_rate=0.048, train_acc=65.91, train_loss_cross_entropy=1.268, train_loss_seg=1.268, train_loss_smooth=0.960, train_macc=28.47, train_miou=20.72[0m)] 54%|#####4    | 108/200 [09:10<05:06,  3.33s/it, [0;92mdata_loading=0.605, iteration=2.583, learning_rate=0.048, train_acc=65.91, train_loss_cross_entropy=1.268, train_loss_seg=1.268, train_loss_smooth=0.960, train_macc=28.47, train_miou=20.72[0m)] 54%|#####4    | 108/200 [09:22<05:06,  3.33s/it, [0;92mdata_loading=9.954, iteration=2.629, learning_rate=0.051, train_acc=66.06, train_loss_cross_entropy=1.263, train_loss_seg=1.263, train_loss_smooth=0.954, train_macc=28.81, train_miou=20.99[0m)] 55%|#####4    | 109/200 [09:22<09:15,  6.11s/it, [0;92mdata_loading=9.954, iteration=2.629, learning_rate=0.051, train_acc=66.06, train_loss_cross_entropy=1.263, train_loss_seg=1.263, train_loss_smooth=0.954, train_macc=28.81, train_miou=20.99[0m)] 55%|#####4    | 109/200 [09:25<09:15,  6.11s/it, [0;92mdata_loading=0.716, iteration=2.301, learning_rate=0.054, train_acc=66.21, train_loss_cross_entropy=1.257, train_loss_seg=1.257, train_loss_smooth=0.948, train_macc=29.02, train_miou=21.16[0m)] 55%|#####5    | 110/200 [09:25<07:46,  5.18s/it, [0;92mdata_loading=0.716, iteration=2.301, learning_rate=0.054, train_acc=66.21, train_loss_cross_entropy=1.257, train_loss_seg=1.257, train_loss_smooth=0.948, train_macc=29.02, train_miou=21.16[0m)] 55%|#####5    | 110/200 [09:28<07:46,  5.18s/it, [0;92mdata_loading=0.658, iteration=2.323, learning_rate=0.058, train_acc=66.31, train_loss_cross_entropy=1.254, train_loss_seg=1.254, train_loss_smooth=0.945, train_macc=29.27, train_miou=21.37[0m)] 56%|#####5    | 111/200 [09:28<06:42,  4.52s/it, [0;92mdata_loading=0.658, iteration=2.323, learning_rate=0.058, train_acc=66.31, train_loss_cross_entropy=1.254, train_loss_seg=1.254, train_loss_smooth=0.945, train_macc=29.27, train_miou=21.37[0m)] 56%|#####5    | 111/200 [09:32<06:42,  4.52s/it, [0;92mdata_loading=0.676, iteration=2.486, learning_rate=0.061, train_acc=66.48, train_loss_cross_entropy=1.248, train_loss_seg=1.248, train_loss_smooth=0.938, train_macc=29.46, train_miou=21.53[0m)] 56%|#####6    | 112/200 [09:32<06:01,  4.11s/it, [0;92mdata_loading=0.676, iteration=2.486, learning_rate=0.061, train_acc=66.48, train_loss_cross_entropy=1.248, train_loss_seg=1.248, train_loss_smooth=0.938, train_macc=29.46, train_miou=21.53[0m)] 56%|#####6    | 112/200 [09:35<06:01,  4.11s/it, [0;92mdata_loading=0.717, iteration=2.603, learning_rate=0.065, train_acc=66.65, train_loss_cross_entropy=1.243, train_loss_seg=1.243, train_loss_smooth=0.932, train_macc=29.77, train_miou=21.78[0m)] 56%|#####6    | 113/200 [09:35<05:37,  3.88s/it, [0;92mdata_loading=0.717, iteration=2.603, learning_rate=0.065, train_acc=66.65, train_loss_cross_entropy=1.243, train_loss_seg=1.243, train_loss_smooth=0.932, train_macc=29.77, train_miou=21.78[0m)] 56%|#####6    | 113/200 [09:38<05:37,  3.88s/it, [0;92mdata_loading=0.646, iteration=2.443, learning_rate=0.069, train_acc=66.83, train_loss_cross_entropy=1.237, train_loss_seg=1.237, train_loss_smooth=0.923, train_macc=30.05, train_miou=22.00[0m)] 57%|#####6    | 114/200 [09:38<05:13,  3.64s/it, [0;92mdata_loading=0.646, iteration=2.443, learning_rate=0.069, train_acc=66.83, train_loss_cross_entropy=1.237, train_loss_seg=1.237, train_loss_smooth=0.923, train_macc=30.05, train_miou=22.00[0m)] 57%|#####6    | 114/200 [09:41<05:13,  3.64s/it, [0;92mdata_loading=0.626, iteration=2.431, learning_rate=0.073, train_acc=66.92, train_loss_cross_entropy=1.233, train_loss_seg=1.233, train_loss_smooth=0.921, train_macc=30.16, train_miou=22.09[0m)] 57%|#####7    | 115/200 [09:41<04:54,  3.47s/it, [0;92mdata_loading=0.626, iteration=2.431, learning_rate=0.073, train_acc=66.92, train_loss_cross_entropy=1.233, train_loss_seg=1.233, train_loss_smooth=0.921, train_macc=30.16, train_miou=22.09[0m)] 57%|#####7    | 115/200 [09:45<04:54,  3.47s/it, [0;92mdata_loading=0.725, iteration=2.732, learning_rate=0.077, train_acc=67.09, train_loss_cross_entropy=1.228, train_loss_seg=1.228, train_loss_smooth=0.916, train_macc=30.38, train_miou=22.26[0m)] 58%|#####8    | 116/200 [09:45<04:50,  3.46s/it, [0;92mdata_loading=0.725, iteration=2.732, learning_rate=0.077, train_acc=67.09, train_loss_cross_entropy=1.228, train_loss_seg=1.228, train_loss_smooth=0.916, train_macc=30.38, train_miou=22.26[0m)] 58%|#####8    | 116/200 [09:48<04:50,  3.46s/it, [0;92mdata_loading=0.619, iteration=2.470, learning_rate=0.082, train_acc=67.19, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_loss_smooth=0.911, train_macc=30.50, train_miou=22.35[0m)] 58%|#####8    | 117/200 [09:48<04:38,  3.35s/it, [0;92mdata_loading=0.619, iteration=2.470, learning_rate=0.082, train_acc=67.19, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_loss_smooth=0.911, train_macc=30.50, train_miou=22.35[0m)] 58%|#####8    | 117/200 [10:11<04:38,  3.35s/it, [0;92mdata_loading=20.24, iteration=2.719, learning_rate=0.087, train_acc=67.42, train_loss_cross_entropy=1.217, train_loss_seg=1.217, train_loss_smooth=0.901, train_macc=30.72, train_miou=22.55[0m)] 59%|#####8    | 118/200 [10:11<12:37,  9.23s/it, [0;92mdata_loading=20.24, iteration=2.719, learning_rate=0.087, train_acc=67.42, train_loss_cross_entropy=1.217, train_loss_seg=1.217, train_loss_smooth=0.901, train_macc=30.72, train_miou=22.55[0m)] 59%|#####8    | 118/200 [10:14<12:37,  9.23s/it, [0;92mdata_loading=0.671, iteration=2.495, learning_rate=0.092, train_acc=67.47, train_loss_cross_entropy=1.216, train_loss_seg=1.216, train_loss_smooth=0.905, train_macc=30.85, train_miou=22.65[0m)] 60%|#####9    | 119/200 [10:14<10:00,  7.41s/it, [0;92mdata_loading=0.671, iteration=2.495, learning_rate=0.092, train_acc=67.47, train_loss_cross_entropy=1.216, train_loss_seg=1.216, train_loss_smooth=0.905, train_macc=30.85, train_miou=22.65[0m)] 60%|#####9    | 119/200 [10:17<10:00,  7.41s/it, [0;92mdata_loading=0.694, iteration=2.348, learning_rate=0.097, train_acc=67.59, train_loss_cross_entropy=1.211, train_loss_seg=1.211, train_loss_smooth=0.899, train_macc=30.97, train_miou=22.76[0m)] 60%|######    | 120/200 [10:17<08:08,  6.10s/it, [0;92mdata_loading=0.694, iteration=2.348, learning_rate=0.097, train_acc=67.59, train_loss_cross_entropy=1.211, train_loss_seg=1.211, train_loss_smooth=0.899, train_macc=30.97, train_miou=22.76[0m)] 60%|######    | 120/200 [10:20<08:08,  6.10s/it, [0;92mdata_loading=0.588, iteration=2.294, learning_rate=0.103, train_acc=67.69, train_loss_cross_entropy=1.209, train_loss_seg=1.209, train_loss_smooth=0.900, train_macc=31.17, train_miou=22.91[0m)] 60%|######    | 121/200 [10:20<06:45,  5.14s/it, [0;92mdata_loading=0.588, iteration=2.294, learning_rate=0.103, train_acc=67.69, train_loss_cross_entropy=1.209, train_loss_seg=1.209, train_loss_smooth=0.900, train_macc=31.17, train_miou=22.91[0m)] 60%|######    | 121/200 [10:23<06:45,  5.14s/it, [0;92mdata_loading=0.601, iteration=2.413, learning_rate=0.109, train_acc=67.83, train_loss_cross_entropy=1.204, train_loss_seg=1.204, train_loss_smooth=0.894, train_macc=31.39, train_miou=23.09[0m)] 61%|######1   | 122/200 [10:23<05:51,  4.50s/it, [0;92mdata_loading=0.601, iteration=2.413, learning_rate=0.109, train_acc=67.83, train_loss_cross_entropy=1.204, train_loss_seg=1.204, train_loss_smooth=0.894, train_macc=31.39, train_miou=23.09[0m)] 61%|######1   | 122/200 [10:26<05:51,  4.50s/it, [0;92mdata_loading=0.607, iteration=2.652, learning_rate=0.116, train_acc=67.98, train_loss_cross_entropy=1.200, train_loss_seg=1.200, train_loss_smooth=0.891, train_macc=31.54, train_miou=23.21[0m)] 62%|######1   | 123/200 [10:26<05:17,  4.13s/it, [0;92mdata_loading=0.607, iteration=2.652, learning_rate=0.116, train_acc=67.98, train_loss_cross_entropy=1.200, train_loss_seg=1.200, train_loss_smooth=0.891, train_macc=31.54, train_miou=23.21[0m)] 62%|######1   | 123/200 [10:29<05:17,  4.13s/it, [0;92mdata_loading=0.675, iteration=2.541, learning_rate=0.123, train_acc=68.10, train_loss_cross_entropy=1.195, train_loss_seg=1.195, train_loss_smooth=0.883, train_macc=31.72, train_miou=23.35[0m)] 62%|######2   | 124/200 [10:29<04:52,  3.85s/it, [0;92mdata_loading=0.675, iteration=2.541, learning_rate=0.123, train_acc=68.10, train_loss_cross_entropy=1.195, train_loss_seg=1.195, train_loss_smooth=0.883, train_macc=31.72, train_miou=23.35[0m)] 62%|######2   | 124/200 [10:32<04:52,  3.85s/it, [0;92mdata_loading=0.610, iteration=2.390, learning_rate=0.130, train_acc=68.19, train_loss_cross_entropy=1.192, train_loss_seg=1.192, train_loss_smooth=0.881, train_macc=31.95, train_miou=23.55[0m)] 62%|######2   | 125/200 [10:32<04:29,  3.60s/it, [0;92mdata_loading=0.610, iteration=2.390, learning_rate=0.130, train_acc=68.19, train_loss_cross_entropy=1.192, train_loss_seg=1.192, train_loss_smooth=0.881, train_macc=31.95, train_miou=23.55[0m)] 62%|######2   | 125/200 [10:35<04:29,  3.60s/it, [0;92mdata_loading=0.653, iteration=2.053, learning_rate=0.138, train_acc=68.30, train_loss_cross_entropy=1.188, train_loss_seg=1.188, train_loss_smooth=0.876, train_macc=32.10, train_miou=23.67[0m)] 63%|######3   | 126/200 [10:35<04:06,  3.33s/it, [0;92mdata_loading=0.653, iteration=2.053, learning_rate=0.138, train_acc=68.30, train_loss_cross_entropy=1.188, train_loss_seg=1.188, train_loss_smooth=0.876, train_macc=32.10, train_miou=23.67[0m)] 63%|######3   | 126/200 [10:55<04:06,  3.33s/it, [0;92mdata_loading=18.32, iteration=2.096, learning_rate=0.146, train_acc=68.48, train_loss_cross_entropy=1.183, train_loss_seg=1.183, train_loss_smooth=0.869, train_macc=32.36, train_miou=23.90[0m)] 64%|######3   | 127/200 [10:55<10:17,  8.46s/it, [0;92mdata_loading=18.32, iteration=2.096, learning_rate=0.146, train_acc=68.48, train_loss_cross_entropy=1.183, train_loss_seg=1.183, train_loss_smooth=0.869, train_macc=32.36, train_miou=23.90[0m)] 64%|######3   | 127/200 [10:58<10:17,  8.46s/it, [0;92mdata_loading=0.578, iteration=1.797, learning_rate=0.155, train_acc=68.59, train_loss_cross_entropy=1.178, train_loss_seg=1.178, train_loss_smooth=0.863, train_macc=32.58, train_miou=24.09[0m)] 64%|######4   | 128/200 [10:58<07:57,  6.63s/it, [0;92mdata_loading=0.578, iteration=1.797, learning_rate=0.155, train_acc=68.59, train_loss_cross_entropy=1.178, train_loss_seg=1.178, train_loss_smooth=0.863, train_macc=32.58, train_miou=24.09[0m)] 64%|######4   | 128/200 [11:01<07:57,  6.63s/it, [0;92mdata_loading=0.586, iteration=2.237, learning_rate=0.164, train_acc=68.68, train_loss_cross_entropy=1.174, train_loss_seg=1.174, train_loss_smooth=0.859, train_macc=32.68, train_miou=24.17[0m)] 64%|######4   | 129/200 [11:01<06:29,  5.49s/it, [0;92mdata_loading=0.586, iteration=2.237, learning_rate=0.164, train_acc=68.68, train_loss_cross_entropy=1.174, train_loss_seg=1.174, train_loss_smooth=0.859, train_macc=32.68, train_miou=24.17[0m)] 64%|######4   | 129/200 [11:04<06:29,  5.49s/it, [0;92mdata_loading=0.586, iteration=2.544, learning_rate=0.174, train_acc=68.81, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.855, train_macc=32.77, train_miou=24.24[0m)] 65%|######5   | 130/200 [11:04<05:34,  4.78s/it, [0;92mdata_loading=0.586, iteration=2.544, learning_rate=0.174, train_acc=68.81, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.855, train_macc=32.77, train_miou=24.24[0m)] 65%|######5   | 130/200 [11:07<05:34,  4.78s/it, [0;92mdata_loading=0.623, iteration=2.225, learning_rate=0.184, train_acc=68.87, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.860, train_macc=32.86, train_miou=24.26[0m)] 66%|######5   | 131/200 [11:07<04:49,  4.20s/it, [0;92mdata_loading=0.623, iteration=2.225, learning_rate=0.184, train_acc=68.87, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.860, train_macc=32.86, train_miou=24.26[0m)] 66%|######5   | 131/200 [11:10<04:49,  4.20s/it, [0;92mdata_loading=0.682, iteration=2.467, learning_rate=0.195, train_acc=68.92, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.867, train_macc=33.06, train_miou=24.42[0m)] 66%|######6   | 132/200 [11:10<04:24,  3.89s/it, [0;92mdata_loading=0.682, iteration=2.467, learning_rate=0.195, train_acc=68.92, train_loss_cross_entropy=1.170, train_loss_seg=1.170, train_loss_smooth=0.867, train_macc=33.06, train_miou=24.42[0m)] 66%|######6   | 132/200 [11:13<04:24,  3.89s/it, [0;92mdata_loading=0.476, iteration=2.462, learning_rate=0.207, train_acc=69.00, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_loss_smooth=0.865, train_macc=33.24, train_miou=24.57[0m)] 66%|######6   | 133/200 [11:13<04:01,  3.60s/it, [0;92mdata_loading=0.476, iteration=2.462, learning_rate=0.207, train_acc=69.00, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_loss_smooth=0.865, train_macc=33.24, train_miou=24.57[0m)] 66%|######6   | 133/200 [11:16<04:01,  3.60s/it, [0;92mdata_loading=0.664, iteration=2.611, learning_rate=0.219, train_acc=69.11, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_loss_smooth=0.863, train_macc=33.45, train_miou=24.75[0m)] 67%|######7   | 134/200 [11:16<03:51,  3.50s/it, [0;92mdata_loading=0.664, iteration=2.611, learning_rate=0.219, train_acc=69.11, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_loss_smooth=0.863, train_macc=33.45, train_miou=24.75[0m)] 67%|######7   | 134/200 [11:19<03:51,  3.50s/it, [0;92mdata_loading=0.652, iteration=2.444, learning_rate=0.232, train_acc=69.22, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_loss_smooth=0.858, train_macc=33.51, train_miou=24.80[0m)] 68%|######7   | 135/200 [11:19<03:39,  3.38s/it, [0;92mdata_loading=0.652, iteration=2.444, learning_rate=0.232, train_acc=69.22, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_loss_smooth=0.858, train_macc=33.51, train_miou=24.80[0m)] 68%|######7   | 135/200 [11:22<03:39,  3.38s/it, [0;92mdata_loading=0.787, iteration=2.325, learning_rate=0.246, train_acc=69.29, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_loss_smooth=0.855, train_macc=33.62, train_miou=24.90[0m)] 68%|######8   | 136/200 [11:22<03:31,  3.30s/it, [0;92mdata_loading=0.787, iteration=2.325, learning_rate=0.246, train_acc=69.29, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_loss_smooth=0.855, train_macc=33.62, train_miou=24.90[0m)] 68%|######8   | 136/200 [11:25<03:31,  3.30s/it, [0;92mdata_loading=0.614, iteration=2.478, learning_rate=0.261, train_acc=69.38, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_loss_smooth=0.852, train_macc=33.68, train_miou=24.96[0m)] 68%|######8   | 137/200 [11:25<03:24,  3.24s/it, [0;92mdata_loading=0.614, iteration=2.478, learning_rate=0.261, train_acc=69.38, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_loss_smooth=0.852, train_macc=33.68, train_miou=24.96[0m)] 68%|######8   | 137/200 [11:29<03:24,  3.24s/it, [0;92mdata_loading=0.599, iteration=2.822, learning_rate=0.276, train_acc=69.45, train_loss_cross_entropy=1.151, train_loss_seg=1.151, train_loss_smooth=0.853, train_macc=33.79, train_miou=25.05[0m)] 69%|######9   | 138/200 [11:29<03:24,  3.29s/it, [0;92mdata_loading=0.599, iteration=2.822, learning_rate=0.276, train_acc=69.45, train_loss_cross_entropy=1.151, train_loss_seg=1.151, train_loss_smooth=0.853, train_macc=33.79, train_miou=25.05[0m)] 69%|######9   | 138/200 [11:32<03:24,  3.29s/it, [0;92mdata_loading=0.763, iteration=2.528, learning_rate=0.293, train_acc=69.53, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_loss_smooth=0.855, train_macc=33.87, train_miou=25.13[0m)] 70%|######9   | 139/200 [11:32<03:20,  3.29s/it, [0;92mdata_loading=0.763, iteration=2.528, learning_rate=0.293, train_acc=69.53, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_loss_smooth=0.855, train_macc=33.87, train_miou=25.13[0m)] 70%|######9   | 139/200 [11:36<03:20,  3.29s/it, [0;92mdata_loading=0.774, iteration=2.859, learning_rate=0.310, train_acc=69.63, train_loss_cross_entropy=1.147, train_loss_seg=1.147, train_loss_smooth=0.851, train_macc=33.95, train_miou=25.20[0m)] 70%|#######   | 140/200 [11:36<03:23,  3.40s/it, [0;92mdata_loading=0.774, iteration=2.859, learning_rate=0.310, train_acc=69.63, train_loss_cross_entropy=1.147, train_loss_seg=1.147, train_loss_smooth=0.851, train_macc=33.95, train_miou=25.20[0m)] 70%|#######   | 140/200 [11:39<03:23,  3.40s/it, [0;92mdata_loading=0.706, iteration=2.799, learning_rate=0.329, train_acc=69.72, train_loss_cross_entropy=1.144, train_loss_seg=1.144, train_loss_smooth=0.848, train_macc=34.04, train_miou=25.29[0m)] 70%|#######   | 141/200 [11:39<03:22,  3.43s/it, [0;92mdata_loading=0.706, iteration=2.799, learning_rate=0.329, train_acc=69.72, train_loss_cross_entropy=1.144, train_loss_seg=1.144, train_loss_smooth=0.848, train_macc=34.04, train_miou=25.29[0m)] 70%|#######   | 141/200 [11:42<03:22,  3.43s/it, [0;92mdata_loading=0.826, iteration=1.669, learning_rate=0.348, train_acc=69.74, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.851, train_macc=34.09, train_miou=25.32[0m)] 71%|#######1  | 142/200 [11:42<03:02,  3.15s/it, [0;92mdata_loading=0.826, iteration=1.669, learning_rate=0.348, train_acc=69.74, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.851, train_macc=34.09, train_miou=25.32[0m)] 71%|#######1  | 142/200 [11:45<03:02,  3.15s/it, [0;92mdata_loading=0.779, iteration=2.364, learning_rate=0.369, train_acc=69.75, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.858, train_macc=34.15, train_miou=25.36[0m)] 72%|#######1  | 143/200 [11:45<02:59,  3.15s/it, [0;92mdata_loading=0.779, iteration=2.364, learning_rate=0.369, train_acc=69.75, train_loss_cross_entropy=1.143, train_loss_seg=1.143, train_loss_smooth=0.858, train_macc=34.15, train_miou=25.36[0m)] 72%|#######1  | 143/200 [11:48<02:59,  3.15s/it, [0;92mdata_loading=0.608, iteration=2.758, learning_rate=0.391, train_acc=69.72, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_loss_smooth=0.872, train_macc=34.24, train_miou=25.43[0m)] 72%|#######2  | 144/200 [11:48<02:59,  3.21s/it, [0;92mdata_loading=0.608, iteration=2.758, learning_rate=0.391, train_acc=69.72, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_loss_smooth=0.872, train_macc=34.24, train_miou=25.43[0m)] 72%|#######2  | 144/200 [11:51<02:59,  3.21s/it, [0;92mdata_loading=0.752, iteration=1.730, learning_rate=0.415, train_acc=69.78, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.868, train_macc=34.33, train_miou=25.49[0m)] 72%|#######2  | 145/200 [11:51<02:44,  2.99s/it, [0;92mdata_loading=0.752, iteration=1.730, learning_rate=0.415, train_acc=69.78, train_loss_cross_entropy=1.142, train_loss_seg=1.142, train_loss_smooth=0.868, train_macc=34.33, train_miou=25.49[0m)] 72%|#######2  | 145/200 [11:53<02:44,  2.99s/it, [0;92mdata_loading=0.659, iteration=1.701, learning_rate=0.439, train_acc=69.81, train_loss_cross_entropy=1.140, train_loss_seg=1.140, train_loss_smooth=0.867, train_macc=34.34, train_miou=25.50[0m)] 73%|#######3  | 146/200 [11:53<02:31,  2.80s/it, [0;92mdata_loading=0.659, iteration=1.701, learning_rate=0.439, train_acc=69.81, train_loss_cross_entropy=1.140, train_loss_seg=1.140, train_loss_smooth=0.867, train_macc=34.34, train_miou=25.50[0m)] 73%|#######3  | 146/200 [11:56<02:31,  2.80s/it, [0;92mdata_loading=0.837, iteration=2.577, learning_rate=0.466, train_acc=69.89, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.864, train_macc=34.39, train_miou=25.55[0m)] 74%|#######3  | 147/200 [11:56<02:38,  2.99s/it, [0;92mdata_loading=0.837, iteration=2.577, learning_rate=0.466, train_acc=69.89, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.864, train_macc=34.39, train_miou=25.55[0m)] 74%|#######3  | 147/200 [12:00<02:38,  2.99s/it, [0;92mdata_loading=0.746, iteration=2.570, learning_rate=0.493, train_acc=69.97, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.864, train_macc=34.43, train_miou=25.58[0m)] 74%|#######4  | 148/200 [12:00<02:40,  3.09s/it, [0;92mdata_loading=0.746, iteration=2.570, learning_rate=0.493, train_acc=69.97, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.864, train_macc=34.43, train_miou=25.58[0m)] 74%|#######4  | 148/200 [12:09<02:40,  3.09s/it, [0;92mdata_loading=6.533, iteration=2.886, learning_rate=0.523, train_acc=69.98, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.874, train_macc=34.44, train_miou=25.60[0m)] 74%|#######4  | 149/200 [12:09<04:14,  4.99s/it, [0;92mdata_loading=6.533, iteration=2.886, learning_rate=0.523, train_acc=69.98, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.874, train_macc=34.44, train_miou=25.60[0m)] 74%|#######4  | 149/200 [12:12<04:14,  4.99s/it, [0;92mdata_loading=0.741, iteration=2.391, learning_rate=0.554, train_acc=70.00, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.880, train_macc=34.46, train_miou=25.56[0m)] 75%|#######5  | 150/200 [12:12<03:41,  4.43s/it, [0;92mdata_loading=0.741, iteration=2.391, learning_rate=0.554, train_acc=70.00, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.880, train_macc=34.46, train_miou=25.56[0m)] 75%|#######5  | 150/200 [12:15<03:41,  4.43s/it, [0;92mdata_loading=0.652, iteration=2.376, learning_rate=0.587, train_acc=70.02, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.886, train_macc=34.46, train_miou=25.56[0m)] 76%|#######5  | 151/200 [12:15<03:16,  4.01s/it, [0;92mdata_loading=0.652, iteration=2.376, learning_rate=0.587, train_acc=70.02, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.886, train_macc=34.46, train_miou=25.56[0m)] 76%|#######5  | 151/200 [12:19<03:16,  4.01s/it, [0;92mdata_loading=0.787, iteration=2.628, learning_rate=0.622, train_acc=70.07, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.887, train_macc=34.47, train_miou=25.58[0m)] 76%|#######6  | 152/200 [12:19<03:03,  3.83s/it, [0;92mdata_loading=0.787, iteration=2.628, learning_rate=0.622, train_acc=70.07, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.887, train_macc=34.47, train_miou=25.58[0m)] 76%|#######6  | 152/200 [12:22<03:03,  3.83s/it, [0;92mdata_loading=0.919, iteration=2.738, learning_rate=0.659, train_acc=70.09, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.890, train_macc=34.42, train_miou=25.56[0m)] 76%|#######6  | 153/200 [12:22<02:57,  3.78s/it, [0;92mdata_loading=0.919, iteration=2.738, learning_rate=0.659, train_acc=70.09, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.890, train_macc=34.42, train_miou=25.56[0m)] 76%|#######6  | 153/200 [12:25<02:57,  3.78s/it, [0;92mdata_loading=0.757, iteration=2.410, learning_rate=0.698, train_acc=70.11, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.901, train_macc=34.38, train_miou=25.52[0m)] 77%|#######7  | 154/200 [12:25<02:45,  3.60s/it, [0;92mdata_loading=0.757, iteration=2.410, learning_rate=0.698, train_acc=70.11, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_loss_smooth=0.901, train_macc=34.38, train_miou=25.52[0m)] 77%|#######7  | 154/200 [12:29<02:45,  3.60s/it, [0;92mdata_loading=0.633, iteration=2.75 , learning_rate=0.740, train_acc=70.14, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.903, train_macc=34.40, train_miou=25.54[0m)] 78%|#######7  | 155/200 [12:29<02:38,  3.53s/it, [0;92mdata_loading=0.633, iteration=2.75 , learning_rate=0.740, train_acc=70.14, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.903, train_macc=34.40, train_miou=25.54[0m)] 78%|#######7  | 155/200 [12:32<02:38,  3.53s/it, [0;92mdata_loading=0.856, iteration=2.546, learning_rate=0.784, train_acc=70.20, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.904, train_macc=34.47, train_miou=25.60[0m)] 78%|#######8  | 156/200 [12:32<02:33,  3.49s/it, [0;92mdata_loading=0.856, iteration=2.546, learning_rate=0.784, train_acc=70.20, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.904, train_macc=34.47, train_miou=25.60[0m)] 78%|#######8  | 156/200 [12:36<02:33,  3.49s/it, [0;92mdata_loading=0.787, iteration=2.757, learning_rate=0.831, train_acc=70.20, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.911, train_macc=34.55, train_miou=25.65[0m)] 78%|#######8  | 157/200 [12:36<02:30,  3.51s/it, [0;92mdata_loading=0.787, iteration=2.757, learning_rate=0.831, train_acc=70.20, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.911, train_macc=34.55, train_miou=25.65[0m)] 78%|#######8  | 157/200 [12:49<02:30,  3.51s/it, [0;92mdata_loading=10.78, iteration=2.647, learning_rate=0.880, train_acc=70.22, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.917, train_macc=34.54, train_miou=25.64[0m)] 79%|#######9  | 158/200 [12:49<04:32,  6.49s/it, [0;92mdata_loading=10.78, iteration=2.647, learning_rate=0.880, train_acc=70.22, train_loss_cross_entropy=1.136, train_loss_seg=1.136, train_loss_smooth=0.917, train_macc=34.54, train_miou=25.64[0m)] 79%|#######9  | 158/200 [12:53<04:32,  6.49s/it, [0;92mdata_loading=0.604, iteration=2.741, learning_rate=0.932, train_acc=70.26, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.920, train_macc=34.57, train_miou=25.66[0m)] 80%|#######9  | 159/200 [12:53<03:47,  5.54s/it, [0;92mdata_loading=0.604, iteration=2.741, learning_rate=0.932, train_acc=70.26, train_loss_cross_entropy=1.135, train_loss_seg=1.135, train_loss_smooth=0.920, train_macc=34.57, train_miou=25.66[0m)] 80%|#######9  | 159/200 [12:55<03:47,  5.54s/it, [0;92mdata_loading=0.638, iteration=1.550, learning_rate=0.988, train_acc=70.24, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.938, train_macc=34.55, train_miou=25.63[0m)] 80%|########  | 160/200 [12:55<03:01,  4.54s/it, [0;92mdata_loading=0.638, iteration=1.550, learning_rate=0.988, train_acc=70.24, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_loss_smooth=0.938, train_macc=34.55, train_miou=25.63[0m)] 80%|########  | 160/200 [12:58<03:01,  4.54s/it, [0;92mdata_loading=0.732, iteration=2.460, learning_rate=1.047, train_acc=70.06, train_loss_cross_entropy=1.159, train_loss_seg=1.159, train_loss_smooth=1.007, train_macc=34.49, train_miou=25.53[0m)] 80%|########  | 161/200 [12:58<02:41,  4.13s/it, [0;92mdata_loading=0.732, iteration=2.460, learning_rate=1.047, train_acc=70.06, train_loss_cross_entropy=1.159, train_loss_seg=1.159, train_loss_smooth=1.007, train_macc=34.49, train_miou=25.53[0m)] 80%|########  | 161/200 [13:01<02:41,  4.13s/it, [0;92mdata_loading=0.636, iteration=2.835, learning_rate=1.109, train_acc=69.81, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_loss_smooth=1.052, train_macc=34.35, train_miou=25.37[0m)] 81%|########1 | 162/200 [13:01<02:29,  3.94s/it, [0;92mdata_loading=0.636, iteration=2.835, learning_rate=1.109, train_acc=69.81, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_loss_smooth=1.052, train_macc=34.35, train_miou=25.37[0m)] 81%|########1 | 162/200 [13:05<02:29,  3.94s/it, [0;92mdata_loading=0.668, iteration=2.858, learning_rate=1.175, train_acc=69.75, train_loss_cross_entropy=1.176, train_loss_seg=1.176, train_loss_smooth=1.071, train_macc=34.29, train_miou=25.31[0m)] 82%|########1 | 163/200 [13:05<02:21,  3.81s/it, [0;92mdata_loading=0.668, iteration=2.858, learning_rate=1.175, train_acc=69.75, train_loss_cross_entropy=1.176, train_loss_seg=1.176, train_loss_smooth=1.071, train_macc=34.29, train_miou=25.31[0m)] 82%|########1 | 163/200 [13:08<02:21,  3.81s/it, [0;92mdata_loading=0.845, iteration=2.604, learning_rate=1.245, train_acc=69.67, train_loss_cross_entropy=1.186, train_loss_seg=1.186, train_loss_smooth=1.106, train_macc=34.17, train_miou=25.22[0m)] 82%|########2 | 164/200 [13:08<02:13,  3.70s/it, [0;92mdata_loading=0.845, iteration=2.604, learning_rate=1.245, train_acc=69.67, train_loss_cross_entropy=1.186, train_loss_seg=1.186, train_loss_smooth=1.106, train_macc=34.17, train_miou=25.22[0m)] 82%|########2 | 164/200 [13:12<02:13,  3.70s/it, [0;92mdata_loading=0.663, iteration=2.881, learning_rate=1.320, train_acc=69.44, train_loss_cross_entropy=1.195, train_loss_seg=1.195, train_loss_smooth=1.140, train_macc=33.99, train_miou=25.06[0m)] 82%|########2 | 165/200 [13:12<02:07,  3.66s/it, [0;92mdata_loading=0.663, iteration=2.881, learning_rate=1.320, train_acc=69.44, train_loss_cross_entropy=1.195, train_loss_seg=1.195, train_loss_smooth=1.140, train_macc=33.99, train_miou=25.06[0m)] 82%|########2 | 165/200 [13:15<02:07,  3.66s/it, [0;92mdata_loading=0.703, iteration=2.543, learning_rate=1.398, train_acc=69.39, train_loss_cross_entropy=1.204, train_loss_seg=1.204, train_loss_smooth=1.173, train_macc=33.90, train_miou=25.00[0m)] 83%|########2 | 166/200 [13:15<02:00,  3.53s/it, [0;92mdata_loading=0.703, iteration=2.543, learning_rate=1.398, train_acc=69.39, train_loss_cross_entropy=1.204, train_loss_seg=1.204, train_loss_smooth=1.173, train_macc=33.90, train_miou=25.00[0m)] 83%|########2 | 166/200 [13:18<02:00,  3.53s/it, [0;92mdata_loading=0.76 , iteration=1.738, learning_rate=1.482, train_acc=69.33, train_loss_cross_entropy=1.213, train_loss_seg=1.213, train_loss_smooth=1.202, train_macc=33.81, train_miou=24.94[0m)] 84%|########3 | 167/200 [13:18<01:46,  3.22s/it, [0;92mdata_loading=0.76 , iteration=1.738, learning_rate=1.482, train_acc=69.33, train_loss_cross_entropy=1.213, train_loss_seg=1.213, train_loss_smooth=1.202, train_macc=33.81, train_miou=24.94[0m)] 84%|########3 | 167/200 [13:21<01:46,  3.22s/it, [0;92mdata_loading=0.781, iteration=2.567, learning_rate=1.570, train_acc=69.15, train_loss_cross_entropy=1.236, train_loss_seg=1.236, train_loss_smooth=1.283, train_macc=33.68, train_miou=24.78[0m)] 84%|########4 | 168/200 [13:21<01:44,  3.26s/it, [0;92mdata_loading=0.781, iteration=2.567, learning_rate=1.570, train_acc=69.15, train_loss_cross_entropy=1.236, train_loss_seg=1.236, train_loss_smooth=1.283, train_macc=33.68, train_miou=24.78[0m)] 84%|########4 | 168/200 [13:24<01:44,  3.26s/it, [0;92mdata_loading=0.676, iteration=2.618, learning_rate=1.663, train_acc=69.05, train_loss_cross_entropy=1.251, train_loss_seg=1.251, train_loss_smooth=1.335, train_macc=33.54, train_miou=24.65[0m)] 84%|########4 | 169/200 [13:24<01:41,  3.27s/it, [0;92mdata_loading=0.676, iteration=2.618, learning_rate=1.663, train_acc=69.05, train_loss_cross_entropy=1.251, train_loss_seg=1.251, train_loss_smooth=1.335, train_macc=33.54, train_miou=24.65[0m)] 84%|########4 | 169/200 [13:27<01:41,  3.27s/it, [0;92mdata_loading=0.696, iteration=1.713, learning_rate=1.762, train_acc=69.00, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_loss_smooth=1.384, train_macc=33.47, train_miou=24.60[0m)] 85%|########5 | 170/200 [13:27<01:30,  3.01s/it, [0;92mdata_loading=0.696, iteration=1.713, learning_rate=1.762, train_acc=69.00, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_loss_smooth=1.384, train_macc=33.47, train_miou=24.60[0m)] 85%|########5 | 170/200 [13:30<01:30,  3.01s/it, [0;92mdata_loading=0.827, iteration=2.470, learning_rate=1.867, train_acc=68.81, train_loss_cross_entropy=1.286, train_loss_seg=1.286, train_loss_smooth=1.456, train_macc=33.37, train_miou=24.47[0m)] 86%|########5 | 171/200 [13:30<01:29,  3.10s/it, [0;92mdata_loading=0.827, iteration=2.470, learning_rate=1.867, train_acc=68.81, train_loss_cross_entropy=1.286, train_loss_seg=1.286, train_loss_smooth=1.456, train_macc=33.37, train_miou=24.47[0m)] 86%|########5 | 171/200 [13:33<01:29,  3.10s/it, [0;92mdata_loading=0.760, iteration=2.470, learning_rate=1.979, train_acc=68.65, train_loss_cross_entropy=1.334, train_loss_seg=1.334, train_loss_smooth=1.623, train_macc=33.27, train_miou=24.36[0m)] 86%|########6 | 172/200 [13:33<01:27,  3.14s/it, [0;92mdata_loading=0.760, iteration=2.470, learning_rate=1.979, train_acc=68.65, train_loss_cross_entropy=1.334, train_loss_seg=1.334, train_loss_smooth=1.623, train_macc=33.27, train_miou=24.36[0m)] 86%|########6 | 172/200 [13:35<01:27,  3.14s/it, [0;92mdata_loading=0.473, iteration=1.557, learning_rate=2.097, train_acc=68.57, train_loss_cross_entropy=1.361, train_loss_seg=1.361, train_loss_smooth=1.713, train_macc=33.15, train_miou=24.29[0m)] 86%|########6 | 173/200 [13:35<01:15,  2.81s/it, [0;92mdata_loading=0.473, iteration=1.557, learning_rate=2.097, train_acc=68.57, train_loss_cross_entropy=1.361, train_loss_seg=1.361, train_loss_smooth=1.713, train_macc=33.15, train_miou=24.29[0m)] 86%|########6 | 173/200 [13:39<01:15,  2.81s/it, [0;92mdata_loading=0.811, iteration=2.728, learning_rate=2.221, train_acc=68.46, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=2.032, train_macc=33.00, train_miou=24.20[0m)] 87%|########7 | 174/200 [13:39<01:18,  3.03s/it, [0;92mdata_loading=0.811, iteration=2.728, learning_rate=2.221, train_acc=68.46, train_loss_cross_entropy=1.452, train_loss_seg=1.452, train_loss_smooth=2.032, train_macc=33.00, train_miou=24.20[0m)] 87%|########7 | 174/200 [13:43<01:18,  3.03s/it, [0;92mdata_loading=1.171, iteration=2.764, learning_rate=2.354, train_acc=68.20, train_loss_cross_entropy=1.827, train_loss_seg=1.827, train_loss_smooth=3.370, train_macc=32.86, train_miou=24.03[0m)] 88%|########7 | 175/200 [13:43<01:22,  3.30s/it, [0;92mdata_loading=1.171, iteration=2.764, learning_rate=2.354, train_acc=68.20, train_loss_cross_entropy=1.827, train_loss_seg=1.827, train_loss_smooth=3.370, train_macc=32.86, train_miou=24.03[0m)] 88%|########7 | 175/200 [13:46<01:22,  3.30s/it, [0;92mdata_loading=0.834, iteration=2.514, learning_rate=2.494, train_acc=68.03, train_loss_cross_entropy=1.916, train_loss_seg=1.916, train_loss_smooth=3.661, train_macc=32.73, train_miou=23.90[0m)] 88%|########7 | 175/200 [13:46<01:58,  4.72s/it, [0;92mdata_loading=0.834, iteration=2.514, learning_rate=2.494, train_acc=68.03, train_loss_cross_entropy=1.916, train_loss_seg=1.916, train_loss_smooth=3.661, train_macc=32.73, train_miou=23.90[0m)][2022-11-21 19:18:56,209][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 1.9163101831959048
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 1.9163101831959048
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 68.03216975567078
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 32.73089607605072
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 23.907677290634368
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '67.41', 1: '76.63', 2: '25.75', 3: '20.50', 4: '39.93', 5: '26.20', 6: '30.76', 7: '35.67', 8: '24.65', 9: '20.57', 10: '6.86', 11: '14.05', 12: '18.86', 13: '20.40', 14: '4.81', 15: '3.51', 16: '0.24', 17: '0.40', 18: '9.55', 19: '31.38'}
[2022-11-21 19:18:56,210][torch_points3d.metrics.base_tracker][INFO] - ==================================================

