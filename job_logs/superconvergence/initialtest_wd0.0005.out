MMData debug() function changed, please uncomment the 3rd assert line when doing inference without M2F features!
[2022-11-20 19:30:16,230][torch_points3d.trainer][INFO] - DEVICE : cuda
load_m2f_masks:  True
initialize train dataset
initialize val dataset
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
class_name:  MVFusionAPIModel
model_module:  torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d
name, cls of chosen model_cls:  MVFusionAPIModel <class 'torch_points3d.models.segmentation.multimodal.Feng.mvfusion_3d.MVFusionAPIModel'>
[2022-11-20 19:31:26,925][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
x feature dim:  {'FEAT': 3}
nc_in:  67
nc_in:  64
nc_in:  32
nc_in:  64
nc_in:  128
nc_in:  256
nc_in:  128
nc_in:  128
nc_in:  96
nc_in:  96
task:  segmentation.multimodal
tested_model_name:  MVFusion_3D_small
[2022-11-20 19:31:28,244][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 3, 'num_classes': 20}
[2022-11-20 19:31:28,244][torch_points3d.trainer][INFO] - MVFusionAPIModel(
  (backbone): MVFusionSparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): MVFusionUnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=c
          (transformerfusion): DVA_cls_5_fusion_7(
            (fusion): TransformerFusion(
              (input_layer): Linear(in_features=29, out_features=64, bias=True)
              (transformer_layers): ModuleList(
                (0): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (1): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (2): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
                (3): AttentionBlock(
                  (norm_1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (norm_2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
                  (attn): MultiheadAttention(
                    (out_proj): NonDynamicallyQuantizableLinear(in_features=64, out_features=64, bias=True)
                  )
                  (linear): Sequential(
                    (0): Linear(in_features=64, out_features=256, bias=True)
                    (1): GELU(approximate=none)
                    (2): Dropout(p=0.2, inplace=False)
                    (3): Linear(in_features=256, out_features=64, bias=True)
                    (4): Dropout(p=0.2, inplace=False)
                  )
                )
              )
            )
            (layer_norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=67, out_channels=64, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (2): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (3): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (4): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-11-20 19:31:28,247][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    dampening: 0
    foreach: None
    initial_lr: 0.0001
    lr: 0.0001
    maximize: False
    momentum: 0.95
    nesterov: False
    weight_decay: 0.0005
)[0m
[2022-11-20 19:31:28,247][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: ExponentialLR({'gamma': 0.9855}, update_scheduler_on=on_epoch)[0m
[2022-11-20 19:31:28,247][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: None[0m
[2022-11-20 19:31:28,247][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-11-20 19:31:28,248][torch_points3d.trainer][INFO] - Model size = 30911764
[2022-11-20 19:31:28,249][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['x', 'y', 'z']),
    AddFeatsByKeys(pos_x=True, pos_y=True, pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=7680000, use_coverage=True, k_coverage=2),
])
Size of [0;95mtrain_dataset [0m= 1201
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 312
[0;95mBatch size =[0m 6
[2022-11-20 19:31:36,625][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-11-20 19:31:36,625][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
[2022-11-20 19:31:38,756][torch_points3d.trainer][INFO] - EPOCH 1 / 2
Executing lr range test
[2022-11-20 19:31:38,758][torch_points3d.trainer][INFO] - Initial learning rate = 0.000100
  0%|          | 0/200 [00:00<?, ?it/s]  0%|          | 0/200 [01:27<?, ?it/s, [0;92mdata_loading=83.85, iteration=3.394, learning_rate=0.000, train_acc=1.743, train_loss_cross_entropy=3.229, train_loss_seg=3.229, train_loss_smooth=3.229, train_macc=3.391, train_miou=0.643[0m)]  0%|          | 1/200 [01:27<4:49:23, 87.25s/it, [0;92mdata_loading=83.85, iteration=3.394, learning_rate=0.000, train_acc=1.743, train_loss_cross_entropy=3.229, train_loss_seg=3.229, train_loss_smooth=3.229, train_macc=3.391, train_miou=0.643[0m)]  0%|          | 1/200 [02:06<4:49:23, 87.25s/it, [0;92mdata_loading=36.28, iteration=2.504, learning_rate=0.000, train_acc=2.47 , train_loss_cross_entropy=3.218, train_loss_seg=3.218, train_loss_smooth=3.218, train_macc=5.060, train_miou=0.849[0m)]  1%|1         | 2/200 [02:06<3:13:51, 58.74s/it, [0;92mdata_loading=36.28, iteration=2.504, learning_rate=0.000, train_acc=2.47 , train_loss_cross_entropy=3.218, train_loss_seg=3.218, train_loss_smooth=3.218, train_macc=5.060, train_miou=0.849[0m)]  1%|1         | 2/200 [02:08<3:13:51, 58.74s/it, [0;92mdata_loading=0.455, iteration=2.268, learning_rate=0.000, train_acc=2.533, train_loss_cross_entropy=3.212, train_loss_seg=3.212, train_loss_smooth=3.212, train_macc=5.127, train_miou=0.886[0m)]  2%|1         | 3/200 [02:08<1:48:53, 33.16s/it, [0;92mdata_loading=0.455, iteration=2.268, learning_rate=0.000, train_acc=2.533, train_loss_cross_entropy=3.212, train_loss_seg=3.212, train_loss_smooth=3.212, train_macc=5.127, train_miou=0.886[0m)]  2%|1         | 3/200 [02:11<1:48:53, 33.16s/it, [0;92mdata_loading=0.58 , iteration=2.282, learning_rate=0.000, train_acc=2.575, train_loss_cross_entropy=3.213, train_loss_seg=3.213, train_loss_smooth=3.213, train_macc=5.114, train_miou=0.883[0m)]  2%|2         | 4/200 [02:11<1:09:15, 21.20s/it, [0;92mdata_loading=0.58 , iteration=2.282, learning_rate=0.000, train_acc=2.575, train_loss_cross_entropy=3.213, train_loss_seg=3.213, train_loss_smooth=3.213, train_macc=5.114, train_miou=0.883[0m)]  2%|2         | 4/200 [02:13<1:09:15, 21.20s/it, [0;92mdata_loading=0.588, iteration=1.418, learning_rate=0.000, train_acc=2.640, train_loss_cross_entropy=3.209, train_loss_seg=3.209, train_loss_smooth=3.209, train_macc=5.025, train_miou=0.898[0m)]  2%|2         | 5/200 [02:13<46:24, 14.28s/it, [0;92mdata_loading=0.588, iteration=1.418, learning_rate=0.000, train_acc=2.640, train_loss_cross_entropy=3.209, train_loss_seg=3.209, train_loss_smooth=3.209, train_macc=5.025, train_miou=0.898[0m)]    2%|2         | 5/200 [02:15<46:24, 14.28s/it, [0;92mdata_loading=0.613, iteration=1.404, learning_rate=0.000, train_acc=2.571, train_loss_cross_entropy=3.200, train_loss_seg=3.200, train_loss_smooth=3.199, train_macc=4.925, train_miou=0.888[0m)]  3%|3         | 6/200 [02:15<32:41, 10.11s/it, [0;92mdata_loading=0.613, iteration=1.404, learning_rate=0.000, train_acc=2.571, train_loss_cross_entropy=3.200, train_loss_seg=3.200, train_loss_smooth=3.199, train_macc=4.925, train_miou=0.888[0m)]  3%|3         | 6/200 [02:18<32:41, 10.11s/it, [0;92mdata_loading=0.641, iteration=2.461, learning_rate=0.000, train_acc=2.612, train_loss_cross_entropy=3.194, train_loss_seg=3.194, train_loss_smooth=3.193, train_macc=4.824, train_miou=0.920[0m)]  4%|3         | 7/200 [02:18<25:09,  7.82s/it, [0;92mdata_loading=0.641, iteration=2.461, learning_rate=0.000, train_acc=2.612, train_loss_cross_entropy=3.194, train_loss_seg=3.194, train_loss_smooth=3.193, train_macc=4.824, train_miou=0.920[0m)]  4%|3         | 7/200 [02:22<25:09,  7.82s/it, [0;92mdata_loading=0.661, iteration=2.618, learning_rate=0.000, train_acc=2.718, train_loss_cross_entropy=3.190, train_loss_seg=3.190, train_loss_smooth=3.189, train_macc=4.807, train_miou=0.960[0m)]  4%|4         | 8/200 [02:22<20:23,  6.37s/it, [0;92mdata_loading=0.661, iteration=2.618, learning_rate=0.000, train_acc=2.718, train_loss_cross_entropy=3.190, train_loss_seg=3.190, train_loss_smooth=3.189, train_macc=4.807, train_miou=0.960[0m)]  4%|4         | 8/200 [02:25<20:23,  6.37s/it, [0;92mdata_loading=0.661, iteration=2.516, learning_rate=0.000, train_acc=2.739, train_loss_cross_entropy=3.184, train_loss_seg=3.184, train_loss_smooth=3.183, train_macc=4.853, train_miou=0.964[0m)]  4%|4         | 9/200 [02:25<17:06,  5.37s/it, [0;92mdata_loading=0.661, iteration=2.516, learning_rate=0.000, train_acc=2.739, train_loss_cross_entropy=3.184, train_loss_seg=3.184, train_loss_smooth=3.183, train_macc=4.853, train_miou=0.964[0m)]  4%|4         | 9/200 [02:28<17:06,  5.37s/it, [0;92mdata_loading=0.683, iteration=2.392, learning_rate=0.000, train_acc=2.774, train_loss_cross_entropy=3.178, train_loss_seg=3.178, train_loss_smooth=3.177, train_macc=4.833, train_miou=0.965[0m)]  5%|5         | 10/200 [02:28<14:46,  4.67s/it, [0;92mdata_loading=0.683, iteration=2.392, learning_rate=0.000, train_acc=2.774, train_loss_cross_entropy=3.178, train_loss_seg=3.178, train_loss_smooth=3.177, train_macc=4.833, train_miou=0.965[0m)]  5%|5         | 10/200 [02:31<14:46,  4.67s/it, [0;92mdata_loading=0.691, iteration=2.354, learning_rate=0.000, train_acc=2.784, train_loss_cross_entropy=3.178, train_loss_seg=3.178, train_loss_smooth=3.176, train_macc=4.831, train_miou=0.968[0m)]  6%|5         | 11/200 [02:31<13:08,  4.17s/it, [0;92mdata_loading=0.691, iteration=2.354, learning_rate=0.000, train_acc=2.784, train_loss_cross_entropy=3.178, train_loss_seg=3.178, train_loss_smooth=3.176, train_macc=4.831, train_miou=0.968[0m)]  6%|5         | 11/200 [02:34<13:08,  4.17s/it, [0;92mdata_loading=0.610, iteration=2.518, learning_rate=0.000, train_acc=2.820, train_loss_cross_entropy=3.176, train_loss_seg=3.176, train_loss_smooth=3.174, train_macc=4.835, train_miou=0.968[0m)]  6%|6         | 12/200 [02:34<12:04,  3.85s/it, [0;92mdata_loading=0.610, iteration=2.518, learning_rate=0.000, train_acc=2.820, train_loss_cross_entropy=3.176, train_loss_seg=3.176, train_loss_smooth=3.174, train_macc=4.835, train_miou=0.968[0m)]  6%|6         | 12/200 [02:36<12:04,  3.85s/it, [0;92mdata_loading=0.556, iteration=1.453, learning_rate=0.000, train_acc=2.861, train_loss_cross_entropy=3.169, train_loss_seg=3.169, train_loss_smooth=3.166, train_macc=4.706, train_miou=0.975[0m)]  6%|6         | 13/200 [02:36<10:16,  3.29s/it, [0;92mdata_loading=0.556, iteration=1.453, learning_rate=0.000, train_acc=2.861, train_loss_cross_entropy=3.169, train_loss_seg=3.169, train_loss_smooth=3.166, train_macc=4.706, train_miou=0.975[0m)]  6%|6         | 13/200 [02:39<10:16,  3.29s/it, [0;92mdata_loading=0.610, iteration=2.483, learning_rate=0.000, train_acc=2.863, train_loss_cross_entropy=3.168, train_loss_seg=3.168, train_loss_smooth=3.166, train_macc=4.669, train_miou=0.992[0m)]  7%|7         | 14/200 [02:39<10:01,  3.23s/it, [0;92mdata_loading=0.610, iteration=2.483, learning_rate=0.000, train_acc=2.863, train_loss_cross_entropy=3.168, train_loss_seg=3.168, train_loss_smooth=3.166, train_macc=4.669, train_miou=0.992[0m)]  7%|7         | 14/200 [02:42<10:01,  3.23s/it, [0;92mdata_loading=0.672, iteration=2.746, learning_rate=0.000, train_acc=2.913, train_loss_cross_entropy=3.164, train_loss_seg=3.164, train_loss_smooth=3.161, train_macc=4.649, train_miou=0.991[0m)]  8%|7         | 15/200 [02:42<10:08,  3.29s/it, [0;92mdata_loading=0.672, iteration=2.746, learning_rate=0.000, train_acc=2.913, train_loss_cross_entropy=3.164, train_loss_seg=3.164, train_loss_smooth=3.161, train_macc=4.649, train_miou=0.991[0m)]  8%|7         | 15/200 [02:46<10:08,  3.29s/it, [0;92mdata_loading=0.686, iteration=2.761, learning_rate=0.000, train_acc=3.125, train_loss_cross_entropy=3.158, train_loss_seg=3.158, train_loss_smooth=3.154, train_macc=4.637, train_miou=1.023[0m)]  8%|8         | 16/200 [02:46<10:14,  3.34s/it, [0;92mdata_loading=0.686, iteration=2.761, learning_rate=0.000, train_acc=3.125, train_loss_cross_entropy=3.158, train_loss_seg=3.158, train_loss_smooth=3.154, train_macc=4.637, train_miou=1.023[0m)]  8%|8         | 16/200 [02:49<10:14,  3.34s/it, [0;92mdata_loading=0.738, iteration=2.330, learning_rate=0.000, train_acc=3.210, train_loss_cross_entropy=3.151, train_loss_seg=3.151, train_loss_smooth=3.147, train_macc=4.645, train_miou=1.041[0m)]  8%|8         | 17/200 [02:49<09:55,  3.26s/it, [0;92mdata_loading=0.738, iteration=2.330, learning_rate=0.000, train_acc=3.210, train_loss_cross_entropy=3.151, train_loss_seg=3.151, train_loss_smooth=3.147, train_macc=4.645, train_miou=1.041[0m)]  8%|8         | 17/200 [02:52<09:55,  3.26s/it, [0;92mdata_loading=0.689, iteration=2.261, learning_rate=0.000, train_acc=3.322, train_loss_cross_entropy=3.145, train_loss_seg=3.145, train_loss_smooth=3.139, train_macc=4.567, train_miou=1.056[0m)]  9%|9         | 18/200 [02:52<09:36,  3.16s/it, [0;92mdata_loading=0.689, iteration=2.261, learning_rate=0.000, train_acc=3.322, train_loss_cross_entropy=3.145, train_loss_seg=3.145, train_loss_smooth=3.139, train_macc=4.567, train_miou=1.056[0m)]  9%|9         | 18/200 [02:55<09:36,  3.16s/it, [0;92mdata_loading=0.694, iteration=2.549, learning_rate=0.000, train_acc=3.471, train_loss_cross_entropy=3.137, train_loss_seg=3.137, train_loss_smooth=3.130, train_macc=4.589, train_miou=1.080[0m)] 10%|9         | 19/200 [02:55<09:37,  3.19s/it, [0;92mdata_loading=0.694, iteration=2.549, learning_rate=0.000, train_acc=3.471, train_loss_cross_entropy=3.137, train_loss_seg=3.137, train_loss_smooth=3.130, train_macc=4.589, train_miou=1.080[0m)] 10%|9         | 19/200 [02:59<09:37,  3.19s/it, [0;92mdata_loading=0.989, iteration=2.406, learning_rate=0.000, train_acc=3.637, train_loss_cross_entropy=3.130, train_loss_seg=3.130, train_loss_smooth=3.122, train_macc=4.623, train_miou=1.108[0m)] 10%|#         | 20/200 [02:59<09:45,  3.25s/it, [0;92mdata_loading=0.989, iteration=2.406, learning_rate=0.000, train_acc=3.637, train_loss_cross_entropy=3.130, train_loss_seg=3.130, train_loss_smooth=3.122, train_macc=4.623, train_miou=1.108[0m)] 10%|#         | 20/200 [03:01<09:45,  3.25s/it, [0;92mdata_loading=0.610, iteration=1.699, learning_rate=0.000, train_acc=3.800, train_loss_cross_entropy=3.122, train_loss_seg=3.122, train_loss_smooth=3.114, train_macc=4.642, train_miou=1.134[0m)] 10%|#         | 21/200 [03:01<08:51,  2.97s/it, [0;92mdata_loading=0.610, iteration=1.699, learning_rate=0.000, train_acc=3.800, train_loss_cross_entropy=3.122, train_loss_seg=3.122, train_loss_smooth=3.114, train_macc=4.642, train_miou=1.134[0m)] 10%|#         | 21/200 [03:04<08:51,  2.97s/it, [0;92mdata_loading=0.766, iteration=1.852, learning_rate=0.000, train_acc=3.924, train_loss_cross_entropy=3.118, train_loss_seg=3.118, train_loss_smooth=3.108, train_macc=4.661, train_miou=1.157[0m)] 11%|#1        | 22/200 [03:04<08:29,  2.86s/it, [0;92mdata_loading=0.766, iteration=1.852, learning_rate=0.000, train_acc=3.924, train_loss_cross_entropy=3.118, train_loss_seg=3.118, train_loss_smooth=3.108, train_macc=4.661, train_miou=1.157[0m)] 11%|#1        | 22/200 [03:07<08:29,  2.86s/it, [0;92mdata_loading=0.670, iteration=2.326, learning_rate=0.000, train_acc=4.184, train_loss_cross_entropy=3.109, train_loss_seg=3.109, train_loss_smooth=3.099, train_macc=4.689, train_miou=1.197[0m)] 12%|#1        | 23/200 [03:07<08:33,  2.90s/it, [0;92mdata_loading=0.670, iteration=2.326, learning_rate=0.000, train_acc=4.184, train_loss_cross_entropy=3.109, train_loss_seg=3.109, train_loss_smooth=3.099, train_macc=4.689, train_miou=1.197[0m)] 12%|#1        | 23/200 [03:09<08:33,  2.90s/it, [0;92mdata_loading=0.657, iteration=1.561, learning_rate=0.000, train_acc=4.531, train_loss_cross_entropy=3.098, train_loss_seg=3.098, train_loss_smooth=3.085, train_macc=4.681, train_miou=1.249[0m)] 12%|#2        | 24/200 [03:09<07:54,  2.70s/it, [0;92mdata_loading=0.657, iteration=1.561, learning_rate=0.000, train_acc=4.531, train_loss_cross_entropy=3.098, train_loss_seg=3.098, train_loss_smooth=3.085, train_macc=4.681, train_miou=1.249[0m)] 12%|#2        | 24/200 [03:12<07:54,  2.70s/it, [0;92mdata_loading=0.650, iteration=2.280, learning_rate=0.000, train_acc=5.14 , train_loss_cross_entropy=3.082, train_loss_seg=3.082, train_loss_smooth=3.066, train_macc=4.750, train_miou=1.331[0m)] 12%|#2        | 25/200 [03:12<08:04,  2.77s/it, [0;92mdata_loading=0.650, iteration=2.280, learning_rate=0.000, train_acc=5.14 , train_loss_cross_entropy=3.082, train_loss_seg=3.082, train_loss_smooth=3.066, train_macc=4.750, train_miou=1.331[0m)] 12%|#2        | 25/200 [03:15<08:04,  2.77s/it, [0;92mdata_loading=0.695, iteration=2.211, learning_rate=0.000, train_acc=5.544, train_loss_cross_entropy=3.072, train_loss_seg=3.072, train_loss_smooth=3.053, train_macc=4.729, train_miou=1.385[0m)] 13%|#3        | 26/200 [03:15<08:08,  2.81s/it, [0;92mdata_loading=0.695, iteration=2.211, learning_rate=0.000, train_acc=5.544, train_loss_cross_entropy=3.072, train_loss_seg=3.072, train_loss_smooth=3.053, train_macc=4.729, train_miou=1.385[0m)] 13%|#3        | 26/200 [03:17<08:08,  2.81s/it, [0;92mdata_loading=0.584, iteration=1.529, learning_rate=0.000, train_acc=6.031, train_loss_cross_entropy=3.064, train_loss_seg=3.064, train_loss_smooth=3.044, train_macc=4.710, train_miou=1.452[0m)] 14%|#3        | 27/200 [03:17<07:29,  2.60s/it, [0;92mdata_loading=0.584, iteration=1.529, learning_rate=0.000, train_acc=6.031, train_loss_cross_entropy=3.064, train_loss_seg=3.064, train_loss_smooth=3.044, train_macc=4.710, train_miou=1.452[0m)] 14%|#3        | 27/200 [03:20<07:29,  2.60s/it, [0;92mdata_loading=0.615, iteration=2.202, learning_rate=0.000, train_acc=6.840, train_loss_cross_entropy=3.049, train_loss_seg=3.049, train_loss_smooth=3.025, train_macc=4.818, train_miou=1.561[0m)] 14%|#4        | 28/200 [03:20<07:38,  2.67s/it, [0;92mdata_loading=0.615, iteration=2.202, learning_rate=0.000, train_acc=6.840, train_loss_cross_entropy=3.049, train_loss_seg=3.049, train_loss_smooth=3.025, train_macc=4.818, train_miou=1.561[0m)] 14%|#4        | 28/200 [03:25<07:38,  2.67s/it, [0;92mdata_loading=2.54 , iteration=2.531, learning_rate=0.000, train_acc=7.576, train_loss_cross_entropy=3.039, train_loss_seg=3.039, train_loss_smooth=3.013, train_macc=4.902, train_miou=1.661[0m)] 14%|#4        | 29/200 [03:25<09:39,  3.39s/it, [0;92mdata_loading=2.54 , iteration=2.531, learning_rate=0.000, train_acc=7.576, train_loss_cross_entropy=3.039, train_loss_seg=3.039, train_loss_smooth=3.013, train_macc=4.902, train_miou=1.661[0m)] 14%|#4        | 29/200 [03:27<09:39,  3.39s/it, [0;92mdata_loading=0.635, iteration=1.722, learning_rate=0.000, train_acc=8.281, train_loss_cross_entropy=3.024, train_loss_seg=3.024, train_loss_smooth=2.995, train_macc=4.937, train_miou=1.753[0m)] 15%|#5        | 30/200 [03:27<08:43,  3.08s/it, [0;92mdata_loading=0.635, iteration=1.722, learning_rate=0.000, train_acc=8.281, train_loss_cross_entropy=3.024, train_loss_seg=3.024, train_loss_smooth=2.995, train_macc=4.937, train_miou=1.753[0m)] 15%|#5        | 30/200 [03:29<08:43,  3.08s/it, [0;92mdata_loading=0.600, iteration=1.650, learning_rate=0.000, train_acc=9.158, train_loss_cross_entropy=3.007, train_loss_seg=3.007, train_loss_smooth=2.974, train_macc=5.002, train_miou=1.868[0m)] 16%|#5        | 31/200 [03:29<07:58,  2.83s/it, [0;92mdata_loading=0.600, iteration=1.650, learning_rate=0.000, train_acc=9.158, train_loss_cross_entropy=3.007, train_loss_seg=3.007, train_loss_smooth=2.974, train_macc=5.002, train_miou=1.868[0m)] 16%|#5        | 31/200 [03:32<07:58,  2.83s/it, [0;92mdata_loading=0.814, iteration=2.322, learning_rate=0.000, train_acc=10.17, train_loss_cross_entropy=2.993, train_loss_seg=2.993, train_loss_smooth=2.956, train_macc=5.078, train_miou=1.989[0m)] 16%|#6        | 32/200 [03:32<08:10,  2.92s/it, [0;92mdata_loading=0.814, iteration=2.322, learning_rate=0.000, train_acc=10.17, train_loss_cross_entropy=2.993, train_loss_seg=2.993, train_loss_smooth=2.956, train_macc=5.078, train_miou=1.989[0m)] 16%|#6        | 32/200 [03:36<08:10,  2.92s/it, [0;92mdata_loading=0.756, iteration=2.603, learning_rate=0.000, train_acc=11.29, train_loss_cross_entropy=2.982, train_loss_seg=2.982, train_loss_smooth=2.942, train_macc=5.150, train_miou=2.115[0m)] 16%|#6        | 33/200 [03:36<08:29,  3.05s/it, [0;92mdata_loading=0.756, iteration=2.603, learning_rate=0.000, train_acc=11.29, train_loss_cross_entropy=2.982, train_loss_seg=2.982, train_loss_smooth=2.942, train_macc=5.150, train_miou=2.115[0m)] 16%|#6        | 33/200 [03:38<08:29,  3.05s/it, [0;92mdata_loading=0.692, iteration=1.695, learning_rate=0.000, train_acc=12.03, train_loss_cross_entropy=2.968, train_loss_seg=2.968, train_loss_smooth=2.925, train_macc=5.215, train_miou=2.203[0m)] 17%|#7        | 34/200 [03:38<07:53,  2.85s/it, [0;92mdata_loading=0.692, iteration=1.695, learning_rate=0.000, train_acc=12.03, train_loss_cross_entropy=2.968, train_loss_seg=2.968, train_loss_smooth=2.925, train_macc=5.215, train_miou=2.203[0m)] 17%|#7        | 34/200 [03:42<07:53,  2.85s/it, [0;92mdata_loading=0.789, iteration=2.798, learning_rate=0.000, train_acc=13.04, train_loss_cross_entropy=2.957, train_loss_seg=2.957, train_loss_smooth=2.912, train_macc=5.312, train_miou=2.298[0m)] 18%|#7        | 35/200 [03:42<08:27,  3.07s/it, [0;92mdata_loading=0.789, iteration=2.798, learning_rate=0.000, train_acc=13.04, train_loss_cross_entropy=2.957, train_loss_seg=2.957, train_loss_smooth=2.912, train_macc=5.312, train_miou=2.298[0m)] 18%|#7        | 35/200 [03:45<08:27,  3.07s/it, [0;92mdata_loading=0.553, iteration=2.425, learning_rate=0.000, train_acc=14.02, train_loss_cross_entropy=2.942, train_loss_seg=2.942, train_loss_smooth=2.892, train_macc=5.376, train_miou=2.400[0m)] 18%|#8        | 36/200 [03:45<08:19,  3.05s/it, [0;92mdata_loading=0.553, iteration=2.425, learning_rate=0.000, train_acc=14.02, train_loss_cross_entropy=2.942, train_loss_seg=2.942, train_loss_smooth=2.892, train_macc=5.376, train_miou=2.400[0m)] 18%|#8        | 36/200 [03:48<08:19,  3.05s/it, [0;92mdata_loading=0.689, iteration=2.489, learning_rate=0.000, train_acc=14.82, train_loss_cross_entropy=2.927, train_loss_seg=2.927, train_loss_smooth=2.873, train_macc=5.451, train_miou=2.488[0m)] 18%|#8        | 37/200 [03:48<08:22,  3.09s/it, [0;92mdata_loading=0.689, iteration=2.489, learning_rate=0.000, train_acc=14.82, train_loss_cross_entropy=2.927, train_loss_seg=2.927, train_loss_smooth=2.873, train_macc=5.451, train_miou=2.488[0m)] 18%|#8        | 37/200 [03:54<08:22,  3.09s/it, [0;92mdata_loading=3.494, iteration=2.481, learning_rate=0.000, train_acc=15.90, train_loss_cross_entropy=2.909, train_loss_seg=2.909, train_loss_smooth=2.850, train_macc=5.560, train_miou=2.601[0m)] 19%|#9        | 38/200 [03:54<10:40,  3.95s/it, [0;92mdata_loading=3.494, iteration=2.481, learning_rate=0.000, train_acc=15.90, train_loss_cross_entropy=2.909, train_loss_seg=2.909, train_loss_smooth=2.850, train_macc=5.560, train_miou=2.601[0m)] 19%|#9        | 38/200 [03:56<10:40,  3.95s/it, [0;92mdata_loading=0.363, iteration=2.342, learning_rate=0.000, train_acc=16.88, train_loss_cross_entropy=2.894, train_loss_seg=2.894, train_loss_smooth=2.831, train_macc=5.656, train_miou=2.698[0m)] 20%|#9        | 39/200 [03:56<09:36,  3.58s/it, [0;92mdata_loading=0.363, iteration=2.342, learning_rate=0.000, train_acc=16.88, train_loss_cross_entropy=2.894, train_loss_seg=2.894, train_loss_smooth=2.831, train_macc=5.656, train_miou=2.698[0m)] 20%|#9        | 39/200 [04:00<09:36,  3.58s/it, [0;92mdata_loading=0.577, iteration=2.471, learning_rate=0.001, train_acc=17.81, train_loss_cross_entropy=2.882, train_loss_seg=2.882, train_loss_smooth=2.816, train_macc=5.717, train_miou=2.788[0m)] 20%|##        | 40/200 [04:00<09:07,  3.42s/it, [0;92mdata_loading=0.577, iteration=2.471, learning_rate=0.001, train_acc=17.81, train_loss_cross_entropy=2.882, train_loss_seg=2.882, train_loss_smooth=2.816, train_macc=5.717, train_miou=2.788[0m)] 20%|##        | 40/200 [04:02<09:07,  3.42s/it, [0;92mdata_loading=0.596, iteration=1.591, learning_rate=0.001, train_acc=18.46, train_loss_cross_entropy=2.863, train_loss_seg=2.863, train_loss_smooth=2.790, train_macc=5.769, train_miou=2.857[0m)] 20%|##        | 41/200 [04:02<08:04,  3.05s/it, [0;92mdata_loading=0.596, iteration=1.591, learning_rate=0.001, train_acc=18.46, train_loss_cross_entropy=2.863, train_loss_seg=2.863, train_loss_smooth=2.790, train_macc=5.769, train_miou=2.857[0m)] 20%|##        | 41/200 [04:05<08:04,  3.05s/it, [0;92mdata_loading=0.648, iteration=2.612, learning_rate=0.001, train_acc=19.25, train_loss_cross_entropy=2.851, train_loss_seg=2.851, train_loss_smooth=2.775, train_macc=5.825, train_miou=2.938[0m)] 21%|##1       | 42/200 [04:05<08:11,  3.11s/it, [0;92mdata_loading=0.648, iteration=2.612, learning_rate=0.001, train_acc=19.25, train_loss_cross_entropy=2.851, train_loss_seg=2.851, train_loss_smooth=2.775, train_macc=5.825, train_miou=2.938[0m)] 21%|##1       | 42/200 [04:08<08:11,  3.11s/it, [0;92mdata_loading=0.604, iteration=2.583, learning_rate=0.001, train_acc=19.85, train_loss_cross_entropy=2.843, train_loss_seg=2.843, train_loss_smooth=2.766, train_macc=5.869, train_miou=2.996[0m)] 22%|##1       | 43/200 [04:08<08:12,  3.14s/it, [0;92mdata_loading=0.604, iteration=2.583, learning_rate=0.001, train_acc=19.85, train_loss_cross_entropy=2.843, train_loss_seg=2.843, train_loss_smooth=2.766, train_macc=5.869, train_miou=2.996[0m)] 22%|##1       | 43/200 [04:18<08:12,  3.14s/it, [0;92mdata_loading=6.684, iteration=2.652, learning_rate=0.001, train_acc=20.64, train_loss_cross_entropy=2.829, train_loss_seg=2.829, train_loss_smooth=2.748, train_macc=5.928, train_miou=3.072[0m)] 22%|##2       | 44/200 [04:18<12:59,  5.00s/it, [0;92mdata_loading=6.684, iteration=2.652, learning_rate=0.001, train_acc=20.64, train_loss_cross_entropy=2.829, train_loss_seg=2.829, train_loss_smooth=2.748, train_macc=5.928, train_miou=3.072[0m)] 22%|##2       | 44/200 [04:21<12:59,  5.00s/it, [0;92mdata_loading=0.739, iteration=2.293, learning_rate=0.001, train_acc=21.27, train_loss_cross_entropy=2.816, train_loss_seg=2.816, train_loss_smooth=2.730, train_macc=5.960, train_miou=3.130[0m)] 22%|##2       | 45/200 [04:21<11:23,  4.41s/it, [0;92mdata_loading=0.739, iteration=2.293, learning_rate=0.001, train_acc=21.27, train_loss_cross_entropy=2.816, train_loss_seg=2.816, train_loss_smooth=2.730, train_macc=5.960, train_miou=3.130[0m)] 22%|##2       | 45/200 [04:24<11:23,  4.41s/it, [0;92mdata_loading=0.845, iteration=2.569, learning_rate=0.001, train_acc=21.93, train_loss_cross_entropy=2.798, train_loss_seg=2.798, train_loss_smooth=2.706, train_macc=6.021, train_miou=3.195[0m)] 23%|##3       | 46/200 [04:24<10:32,  4.11s/it, [0;92mdata_loading=0.845, iteration=2.569, learning_rate=0.001, train_acc=21.93, train_loss_cross_entropy=2.798, train_loss_seg=2.798, train_loss_smooth=2.706, train_macc=6.021, train_miou=3.195[0m)] 23%|##3       | 46/200 [04:27<10:32,  4.11s/it, [0;92mdata_loading=0.710, iteration=2.506, learning_rate=0.001, train_acc=22.43, train_loss_cross_entropy=2.789, train_loss_seg=2.789, train_loss_smooth=2.695, train_macc=6.064, train_miou=3.244[0m)] 24%|##3       | 47/200 [04:27<09:47,  3.84s/it, [0;92mdata_loading=0.710, iteration=2.506, learning_rate=0.001, train_acc=22.43, train_loss_cross_entropy=2.789, train_loss_seg=2.789, train_loss_smooth=2.695, train_macc=6.064, train_miou=3.244[0m)] 24%|##3       | 47/200 [04:30<09:47,  3.84s/it, [0;92mdata_loading=0.585, iteration=2.672, learning_rate=0.001, train_acc=23.03, train_loss_cross_entropy=2.776, train_loss_seg=2.776, train_loss_smooth=2.679, train_macc=6.127, train_miou=3.303[0m)] 24%|##4       | 48/200 [04:30<09:17,  3.67s/it, [0;92mdata_loading=0.585, iteration=2.672, learning_rate=0.001, train_acc=23.03, train_loss_cross_entropy=2.776, train_loss_seg=2.776, train_loss_smooth=2.679, train_macc=6.127, train_miou=3.303[0m)] 24%|##4       | 48/200 [04:34<09:17,  3.67s/it, [0;92mdata_loading=0.719, iteration=2.447, learning_rate=0.001, train_acc=23.43, train_loss_cross_entropy=2.769, train_loss_seg=2.769, train_loss_smooth=2.671, train_macc=6.161, train_miou=3.341[0m)] 24%|##4       | 49/200 [04:34<08:51,  3.52s/it, [0;92mdata_loading=0.719, iteration=2.447, learning_rate=0.001, train_acc=23.43, train_loss_cross_entropy=2.769, train_loss_seg=2.769, train_loss_smooth=2.671, train_macc=6.161, train_miou=3.341[0m)] 24%|##4       | 49/200 [04:36<08:51,  3.52s/it, [0;92mdata_loading=0.652, iteration=1.692, learning_rate=0.001, train_acc=23.87, train_loss_cross_entropy=2.757, train_loss_seg=2.757, train_loss_smooth=2.655, train_macc=6.193, train_miou=3.386[0m)] 25%|##5       | 50/200 [04:36<07:54,  3.17s/it, [0;92mdata_loading=0.652, iteration=1.692, learning_rate=0.001, train_acc=23.87, train_loss_cross_entropy=2.757, train_loss_seg=2.757, train_loss_smooth=2.655, train_macc=6.193, train_miou=3.386[0m)] 25%|##5       | 50/200 [04:39<07:54,  3.17s/it, [0;92mdata_loading=0.652, iteration=2.775, learning_rate=0.001, train_acc=24.66, train_loss_cross_entropy=2.748, train_loss_seg=2.748, train_loss_smooth=2.643, train_macc=6.287, train_miou=3.460[0m)] 26%|##5       | 51/200 [04:39<08:03,  3.24s/it, [0;92mdata_loading=0.652, iteration=2.775, learning_rate=0.001, train_acc=24.66, train_loss_cross_entropy=2.748, train_loss_seg=2.748, train_loss_smooth=2.643, train_macc=6.287, train_miou=3.460[0m)] 26%|##5       | 51/200 [04:42<08:03,  3.24s/it, [0;92mdata_loading=0.623, iteration=1.699, learning_rate=0.001, train_acc=25.21, train_loss_cross_entropy=2.730, train_loss_seg=2.730, train_loss_smooth=2.618, train_macc=6.315, train_miou=3.519[0m)] 26%|##6       | 52/200 [04:42<07:19,  2.97s/it, [0;92mdata_loading=0.623, iteration=1.699, learning_rate=0.001, train_acc=25.21, train_loss_cross_entropy=2.730, train_loss_seg=2.730, train_loss_smooth=2.618, train_macc=6.315, train_miou=3.519[0m)] 26%|##6       | 52/200 [04:51<07:19,  2.97s/it, [0;92mdata_loading=7.263, iteration=2.270, learning_rate=0.002, train_acc=25.88, train_loss_cross_entropy=2.712, train_loss_seg=2.712, train_loss_smooth=2.592, train_macc=6.399, train_miou=3.591[0m)] 26%|##6       | 53/200 [04:51<12:05,  4.94s/it, [0;92mdata_loading=7.263, iteration=2.270, learning_rate=0.002, train_acc=25.88, train_loss_cross_entropy=2.712, train_loss_seg=2.712, train_loss_smooth=2.592, train_macc=6.399, train_miou=3.591[0m)] 26%|##6       | 53/200 [04:53<12:05,  4.94s/it, [0;92mdata_loading=0.533, iteration=1.554, learning_rate=0.002, train_acc=26.36, train_loss_cross_entropy=2.696, train_loss_seg=2.696, train_loss_smooth=2.571, train_macc=6.465, train_miou=3.637[0m)] 27%|##7       | 54/200 [04:53<09:56,  4.08s/it, [0;92mdata_loading=0.533, iteration=1.554, learning_rate=0.002, train_acc=26.36, train_loss_cross_entropy=2.696, train_loss_seg=2.696, train_loss_smooth=2.571, train_macc=6.465, train_miou=3.637[0m)] 27%|##7       | 54/200 [04:57<09:56,  4.08s/it, [0;92mdata_loading=0.801, iteration=2.511, learning_rate=0.002, train_acc=26.91, train_loss_cross_entropy=2.682, train_loss_seg=2.682, train_loss_smooth=2.551, train_macc=6.523, train_miou=3.690[0m)] 28%|##7       | 55/200 [04:57<09:18,  3.85s/it, [0;92mdata_loading=0.801, iteration=2.511, learning_rate=0.002, train_acc=26.91, train_loss_cross_entropy=2.682, train_loss_seg=2.682, train_loss_smooth=2.551, train_macc=6.523, train_miou=3.690[0m)] 28%|##7       | 55/200 [05:00<09:18,  3.85s/it, [0;92mdata_loading=0.560, iteration=2.389, learning_rate=0.002, train_acc=27.27, train_loss_cross_entropy=2.676, train_loss_seg=2.676, train_loss_smooth=2.544, train_macc=6.580, train_miou=3.721[0m)] 28%|##8       | 56/200 [05:00<08:35,  3.58s/it, [0;92mdata_loading=0.560, iteration=2.389, learning_rate=0.002, train_acc=27.27, train_loss_cross_entropy=2.676, train_loss_seg=2.676, train_loss_smooth=2.544, train_macc=6.580, train_miou=3.721[0m)] 28%|##8       | 56/200 [05:03<08:35,  3.58s/it, [0;92mdata_loading=0.663, iteration=2.457, learning_rate=0.002, train_acc=27.84, train_loss_cross_entropy=2.665, train_loss_seg=2.665, train_loss_smooth=2.53 , train_macc=6.658, train_miou=3.768[0m)] 28%|##8       | 57/200 [05:03<08:12,  3.44s/it, [0;92mdata_loading=0.663, iteration=2.457, learning_rate=0.002, train_acc=27.84, train_loss_cross_entropy=2.665, train_loss_seg=2.665, train_loss_smooth=2.53 , train_macc=6.658, train_miou=3.768[0m)] 28%|##8       | 57/200 [05:06<08:12,  3.44s/it, [0;92mdata_loading=0.730, iteration=2.600, learning_rate=0.002, train_acc=28.35, train_loss_cross_entropy=2.655, train_loss_seg=2.655, train_loss_smooth=2.518, train_macc=6.727, train_miou=3.808[0m)] 29%|##9       | 58/200 [05:06<08:04,  3.41s/it, [0;92mdata_loading=0.730, iteration=2.600, learning_rate=0.002, train_acc=28.35, train_loss_cross_entropy=2.655, train_loss_seg=2.655, train_loss_smooth=2.518, train_macc=6.727, train_miou=3.808[0m)] 29%|##9       | 58/200 [05:09<08:04,  3.41s/it, [0;92mdata_loading=0.695, iteration=2.602, learning_rate=0.002, train_acc=28.82, train_loss_cross_entropy=2.648, train_loss_seg=2.648, train_loss_smooth=2.509, train_macc=6.795, train_miou=3.852[0m)] 30%|##9       | 59/200 [05:09<07:56,  3.38s/it, [0;92mdata_loading=0.695, iteration=2.602, learning_rate=0.002, train_acc=28.82, train_loss_cross_entropy=2.648, train_loss_seg=2.648, train_loss_smooth=2.509, train_macc=6.795, train_miou=3.852[0m)] 30%|##9       | 59/200 [05:13<07:56,  3.38s/it, [0;92mdata_loading=0.801, iteration=2.720, learning_rate=0.003, train_acc=29.35, train_loss_cross_entropy=2.637, train_loss_seg=2.637, train_loss_smooth=2.495, train_macc=6.830, train_miou=3.901[0m)] 30%|###       | 60/200 [05:13<07:58,  3.42s/it, [0;92mdata_loading=0.801, iteration=2.720, learning_rate=0.003, train_acc=29.35, train_loss_cross_entropy=2.637, train_loss_seg=2.637, train_loss_smooth=2.495, train_macc=6.830, train_miou=3.901[0m)] 30%|###       | 60/200 [05:16<07:58,  3.42s/it, [0;92mdata_loading=0.627, iteration=2.247, learning_rate=0.003, train_acc=29.73, train_loss_cross_entropy=2.627, train_loss_seg=2.627, train_loss_smooth=2.482, train_macc=6.884, train_miou=3.934[0m)] 30%|###       | 61/200 [05:16<07:32,  3.26s/it, [0;92mdata_loading=0.627, iteration=2.247, learning_rate=0.003, train_acc=29.73, train_loss_cross_entropy=2.627, train_loss_seg=2.627, train_loss_smooth=2.482, train_macc=6.884, train_miou=3.934[0m)] 30%|###       | 61/200 [05:19<07:32,  3.26s/it, [0;92mdata_loading=0.648, iteration=2.386, learning_rate=0.003, train_acc=30.14, train_loss_cross_entropy=2.617, train_loss_seg=2.617, train_loss_smooth=2.469, train_macc=6.921, train_miou=3.967[0m)] 31%|###1      | 62/200 [05:19<07:20,  3.19s/it, [0;92mdata_loading=0.648, iteration=2.386, learning_rate=0.003, train_acc=30.14, train_loss_cross_entropy=2.617, train_loss_seg=2.617, train_loss_smooth=2.469, train_macc=6.921, train_miou=3.967[0m)] 31%|###1      | 62/200 [05:22<07:20,  3.19s/it, [0;92mdata_loading=0.585, iteration=2.322, learning_rate=0.003, train_acc=30.45, train_loss_cross_entropy=2.609, train_loss_seg=2.609, train_loss_smooth=2.458, train_macc=6.937, train_miou=3.997[0m)] 32%|###1      | 63/200 [05:22<07:05,  3.11s/it, [0;92mdata_loading=0.585, iteration=2.322, learning_rate=0.003, train_acc=30.45, train_loss_cross_entropy=2.609, train_loss_seg=2.609, train_loss_smooth=2.458, train_macc=6.937, train_miou=3.997[0m)] 32%|###1      | 63/200 [05:25<07:05,  3.11s/it, [0;92mdata_loading=0.638, iteration=2.662, learning_rate=0.003, train_acc=30.83, train_loss_cross_entropy=2.601, train_loss_seg=2.601, train_loss_smooth=2.449, train_macc=6.950, train_miou=4.030[0m)] 32%|###2      | 64/200 [05:25<07:10,  3.16s/it, [0;92mdata_loading=0.638, iteration=2.662, learning_rate=0.003, train_acc=30.83, train_loss_cross_entropy=2.601, train_loss_seg=2.601, train_loss_smooth=2.449, train_macc=6.950, train_miou=4.030[0m)] 32%|###2      | 64/200 [05:29<07:10,  3.16s/it, [0;92mdata_loading=0.862, iteration=2.655, learning_rate=0.004, train_acc=31.21, train_loss_cross_entropy=2.594, train_loss_seg=2.594, train_loss_smooth=2.440, train_macc=7.014, train_miou=4.068[0m)] 32%|###2      | 65/200 [05:29<07:21,  3.27s/it, [0;92mdata_loading=0.862, iteration=2.655, learning_rate=0.004, train_acc=31.21, train_loss_cross_entropy=2.594, train_loss_seg=2.594, train_loss_smooth=2.440, train_macc=7.014, train_miou=4.068[0m)] 32%|###2      | 65/200 [05:32<07:21,  3.27s/it, [0;92mdata_loading=0.727, iteration=2.388, learning_rate=0.004, train_acc=31.53, train_loss_cross_entropy=2.584, train_loss_seg=2.584, train_loss_smooth=2.425, train_macc=7.059, train_miou=4.102[0m)] 33%|###3      | 66/200 [05:32<07:11,  3.22s/it, [0;92mdata_loading=0.727, iteration=2.388, learning_rate=0.004, train_acc=31.53, train_loss_cross_entropy=2.584, train_loss_seg=2.584, train_loss_smooth=2.425, train_macc=7.059, train_miou=4.102[0m)] 33%|###3      | 66/200 [05:38<07:11,  3.22s/it, [0;92mdata_loading=3.738, iteration=2.36 , learning_rate=0.004, train_acc=31.85, train_loss_cross_entropy=2.570, train_loss_seg=2.570, train_loss_smooth=2.406, train_macc=7.107, train_miou=4.14 [0m)] 34%|###3      | 67/200 [05:38<09:03,  4.09s/it, [0;92mdata_loading=3.738, iteration=2.36 , learning_rate=0.004, train_acc=31.85, train_loss_cross_entropy=2.570, train_loss_seg=2.570, train_loss_smooth=2.406, train_macc=7.107, train_miou=4.14 [0m)] 34%|###3      | 67/200 [05:41<09:03,  4.09s/it, [0;92mdata_loading=0.695, iteration=2.481, learning_rate=0.004, train_acc=32.13, train_loss_cross_entropy=2.560, train_loss_seg=2.560, train_loss_smooth=2.392, train_macc=7.148, train_miou=4.17 [0m)] 34%|###4      | 68/200 [05:41<08:23,  3.81s/it, [0;92mdata_loading=0.695, iteration=2.481, learning_rate=0.004, train_acc=32.13, train_loss_cross_entropy=2.560, train_loss_seg=2.560, train_loss_smooth=2.392, train_macc=7.148, train_miou=4.17 [0m)] 34%|###4      | 68/200 [05:52<08:23,  3.81s/it, [0;92mdata_loading=8.539, iteration=2.772, learning_rate=0.005, train_acc=32.52, train_loss_cross_entropy=2.552, train_loss_seg=2.552, train_loss_smooth=2.382, train_macc=7.221, train_miou=4.223[0m)] 34%|###4      | 69/200 [05:52<13:14,  6.06s/it, [0;92mdata_loading=8.539, iteration=2.772, learning_rate=0.005, train_acc=32.52, train_loss_cross_entropy=2.552, train_loss_seg=2.552, train_loss_smooth=2.382, train_macc=7.221, train_miou=4.223[0m)] 34%|###4      | 69/200 [05:56<13:14,  6.06s/it, [0;92mdata_loading=0.687, iteration=2.670, learning_rate=0.005, train_acc=32.92, train_loss_cross_entropy=2.539, train_loss_seg=2.539, train_loss_smooth=2.362, train_macc=7.253, train_miou=4.264[0m)] 35%|###5      | 70/200 [05:56<11:22,  5.25s/it, [0;92mdata_loading=0.687, iteration=2.670, learning_rate=0.005, train_acc=32.92, train_loss_cross_entropy=2.539, train_loss_seg=2.539, train_loss_smooth=2.362, train_macc=7.253, train_miou=4.264[0m)] 35%|###5      | 70/200 [05:59<11:22,  5.25s/it, [0;92mdata_loading=0.661, iteration=2.339, learning_rate=0.005, train_acc=33.22, train_loss_cross_entropy=2.528, train_loss_seg=2.528, train_loss_smooth=2.346, train_macc=7.298, train_miou=4.304[0m)] 36%|###5      | 71/200 [05:59<09:50,  4.58s/it, [0;92mdata_loading=0.661, iteration=2.339, learning_rate=0.005, train_acc=33.22, train_loss_cross_entropy=2.528, train_loss_seg=2.528, train_loss_smooth=2.346, train_macc=7.298, train_miou=4.304[0m)] 36%|###5      | 71/200 [06:01<09:50,  4.58s/it, [0;92mdata_loading=0.548, iteration=1.751, learning_rate=0.006, train_acc=33.46, train_loss_cross_entropy=2.519, train_loss_seg=2.519, train_loss_smooth=2.333, train_macc=7.341, train_miou=4.335[0m)] 36%|###6      | 72/200 [06:01<08:18,  3.89s/it, [0;92mdata_loading=0.548, iteration=1.751, learning_rate=0.006, train_acc=33.46, train_loss_cross_entropy=2.519, train_loss_seg=2.519, train_loss_smooth=2.333, train_macc=7.341, train_miou=4.335[0m)] 36%|###6      | 72/200 [06:04<08:18,  3.89s/it, [0;92mdata_loading=0.688, iteration=2.529, learning_rate=0.006, train_acc=33.81, train_loss_cross_entropy=2.507, train_loss_seg=2.507, train_loss_smooth=2.316, train_macc=7.395, train_miou=4.376[0m)] 36%|###6      | 73/200 [06:04<07:48,  3.69s/it, [0;92mdata_loading=0.688, iteration=2.529, learning_rate=0.006, train_acc=33.81, train_loss_cross_entropy=2.507, train_loss_seg=2.507, train_loss_smooth=2.316, train_macc=7.395, train_miou=4.376[0m)] 36%|###6      | 73/200 [06:07<07:48,  3.69s/it, [0;92mdata_loading=0.702, iteration=2.564, learning_rate=0.006, train_acc=34.09, train_loss_cross_entropy=2.501, train_loss_seg=2.501, train_loss_smooth=2.308, train_macc=7.449, train_miou=4.412[0m)] 37%|###7      | 74/200 [06:07<07:29,  3.56s/it, [0;92mdata_loading=0.702, iteration=2.564, learning_rate=0.006, train_acc=34.09, train_loss_cross_entropy=2.501, train_loss_seg=2.501, train_loss_smooth=2.308, train_macc=7.449, train_miou=4.412[0m)] 37%|###7      | 74/200 [06:11<07:29,  3.56s/it, [0;92mdata_loading=0.639, iteration=2.709, learning_rate=0.007, train_acc=34.37, train_loss_cross_entropy=2.493, train_loss_seg=2.493, train_loss_smooth=2.298, train_macc=7.494, train_miou=4.452[0m)] 38%|###7      | 75/200 [06:11<07:17,  3.50s/it, [0;92mdata_loading=0.639, iteration=2.709, learning_rate=0.007, train_acc=34.37, train_loss_cross_entropy=2.493, train_loss_seg=2.493, train_loss_smooth=2.298, train_macc=7.494, train_miou=4.452[0m)] 38%|###7      | 75/200 [06:13<07:17,  3.50s/it, [0;92mdata_loading=0.709, iteration=1.503, learning_rate=0.007, train_acc=34.46, train_loss_cross_entropy=2.487, train_loss_seg=2.487, train_loss_smooth=2.291, train_macc=7.510, train_miou=4.465[0m)] 38%|###8      | 76/200 [06:13<06:26,  3.11s/it, [0;92mdata_loading=0.709, iteration=1.503, learning_rate=0.007, train_acc=34.46, train_loss_cross_entropy=2.487, train_loss_seg=2.487, train_loss_smooth=2.291, train_macc=7.510, train_miou=4.465[0m)] 38%|###8      | 76/200 [06:16<06:26,  3.11s/it, [0;92mdata_loading=0.633, iteration=2.362, learning_rate=0.008, train_acc=34.70, train_loss_cross_entropy=2.477, train_loss_seg=2.477, train_loss_smooth=2.277, train_macc=7.546, train_miou=4.498[0m)] 38%|###8      | 77/200 [06:16<06:18,  3.08s/it, [0;92mdata_loading=0.633, iteration=2.362, learning_rate=0.008, train_acc=34.70, train_loss_cross_entropy=2.477, train_loss_seg=2.477, train_loss_smooth=2.277, train_macc=7.546, train_miou=4.498[0m)] 38%|###8      | 77/200 [06:23<06:18,  3.08s/it, [0;92mdata_loading=4.365, iteration=2.555, learning_rate=0.008, train_acc=34.96, train_loss_cross_entropy=2.467, train_loss_seg=2.467, train_loss_smooth=2.263, train_macc=7.582, train_miou=4.532[0m)] 39%|###9      | 78/200 [06:23<08:36,  4.23s/it, [0;92mdata_loading=4.365, iteration=2.555, learning_rate=0.008, train_acc=34.96, train_loss_cross_entropy=2.467, train_loss_seg=2.467, train_loss_smooth=2.263, train_macc=7.582, train_miou=4.532[0m)] 39%|###9      | 78/200 [06:26<08:36,  4.23s/it, [0;92mdata_loading=0.817, iteration=2.539, learning_rate=0.009, train_acc=35.13, train_loss_cross_entropy=2.460, train_loss_seg=2.460, train_loss_smooth=2.255, train_macc=7.621, train_miou=4.557[0m)] 40%|###9      | 79/200 [06:26<08:00,  3.97s/it, [0;92mdata_loading=0.817, iteration=2.539, learning_rate=0.009, train_acc=35.13, train_loss_cross_entropy=2.460, train_loss_seg=2.460, train_loss_smooth=2.255, train_macc=7.621, train_miou=4.557[0m)] 40%|###9      | 79/200 [06:30<08:00,  3.97s/it, [0;92mdata_loading=0.915, iteration=2.533, learning_rate=0.009, train_acc=35.36, train_loss_cross_entropy=2.452, train_loss_seg=2.452, train_loss_smooth=2.243, train_macc=7.651, train_miou=4.581[0m)] 40%|####      | 80/200 [06:30<07:37,  3.81s/it, [0;92mdata_loading=0.915, iteration=2.533, learning_rate=0.009, train_acc=35.36, train_loss_cross_entropy=2.452, train_loss_seg=2.452, train_loss_smooth=2.243, train_macc=7.651, train_miou=4.581[0m)] 40%|####      | 80/200 [06:33<07:37,  3.81s/it, [0;92mdata_loading=0.687, iteration=2.527, learning_rate=0.010, train_acc=35.56, train_loss_cross_entropy=2.446, train_loss_seg=2.446, train_loss_smooth=2.235, train_macc=7.670, train_miou=4.602[0m)] 40%|####      | 81/200 [06:33<07:12,  3.63s/it, [0;92mdata_loading=0.687, iteration=2.527, learning_rate=0.010, train_acc=35.56, train_loss_cross_entropy=2.446, train_loss_seg=2.446, train_loss_smooth=2.235, train_macc=7.670, train_miou=4.602[0m)] 40%|####      | 81/200 [06:36<07:12,  3.63s/it, [0;92mdata_loading=0.635, iteration=2.567, learning_rate=0.010, train_acc=35.87, train_loss_cross_entropy=2.437, train_loss_seg=2.437, train_loss_smooth=2.223, train_macc=7.720, train_miou=4.638[0m)] 41%|####1     | 82/200 [06:36<06:53,  3.50s/it, [0;92mdata_loading=0.635, iteration=2.567, learning_rate=0.010, train_acc=35.87, train_loss_cross_entropy=2.437, train_loss_seg=2.437, train_loss_smooth=2.223, train_macc=7.720, train_miou=4.638[0m)] 41%|####1     | 82/200 [06:46<06:53,  3.50s/it, [0;92mdata_loading=6.944, iteration=2.714, learning_rate=0.011, train_acc=36.12, train_loss_cross_entropy=2.428, train_loss_seg=2.428, train_loss_smooth=2.210, train_macc=7.757, train_miou=4.665[0m)] 42%|####1     | 83/200 [06:46<10:26,  5.35s/it, [0;92mdata_loading=6.944, iteration=2.714, learning_rate=0.011, train_acc=36.12, train_loss_cross_entropy=2.428, train_loss_seg=2.428, train_loss_smooth=2.210, train_macc=7.757, train_miou=4.665[0m)] 42%|####1     | 83/200 [06:49<10:26,  5.35s/it, [0;92mdata_loading=0.837, iteration=2.422, learning_rate=0.012, train_acc=36.39, train_loss_cross_entropy=2.418, train_loss_seg=2.418, train_loss_smooth=2.195, train_macc=7.777, train_miou=4.691[0m)] 42%|####2     | 84/200 [06:49<09:07,  4.72s/it, [0;92mdata_loading=0.837, iteration=2.422, learning_rate=0.012, train_acc=36.39, train_loss_cross_entropy=2.418, train_loss_seg=2.418, train_loss_smooth=2.195, train_macc=7.777, train_miou=4.691[0m)] 42%|####2     | 84/200 [06:52<09:07,  4.72s/it, [0;92mdata_loading=0.754, iteration=2.337, learning_rate=0.012, train_acc=36.62, train_loss_cross_entropy=2.409, train_loss_seg=2.409, train_loss_smooth=2.182, train_macc=7.792, train_miou=4.713[0m)] 42%|####2     | 85/200 [06:52<08:06,  4.23s/it, [0;92mdata_loading=0.754, iteration=2.337, learning_rate=0.012, train_acc=36.62, train_loss_cross_entropy=2.409, train_loss_seg=2.409, train_loss_smooth=2.182, train_macc=7.792, train_miou=4.713[0m)] 42%|####2     | 85/200 [06:55<08:06,  4.23s/it, [0;92mdata_loading=0.602, iteration=2.336, learning_rate=0.013, train_acc=36.84, train_loss_cross_entropy=2.400, train_loss_seg=2.400, train_loss_smooth=2.169, train_macc=7.806, train_miou=4.732[0m)] 43%|####3     | 86/200 [06:55<07:18,  3.85s/it, [0;92mdata_loading=0.602, iteration=2.336, learning_rate=0.013, train_acc=36.84, train_loss_cross_entropy=2.400, train_loss_seg=2.400, train_loss_smooth=2.169, train_macc=7.806, train_miou=4.732[0m)] 43%|####3     | 86/200 [07:01<07:18,  3.85s/it, [0;92mdata_loading=3.322, iteration=2.597, learning_rate=0.014, train_acc=36.98, train_loss_cross_entropy=2.393, train_loss_seg=2.393, train_loss_smooth=2.159, train_macc=7.834, train_miou=4.749[0m)] 44%|####3     | 87/200 [07:01<08:24,  4.47s/it, [0;92mdata_loading=3.322, iteration=2.597, learning_rate=0.014, train_acc=36.98, train_loss_cross_entropy=2.393, train_loss_seg=2.393, train_loss_smooth=2.159, train_macc=7.834, train_miou=4.749[0m)] 44%|####3     | 87/200 [07:07<08:24,  4.47s/it, [0;92mdata_loading=3.206, iteration=3.082, learning_rate=0.015, train_acc=37.24, train_loss_cross_entropy=2.386, train_loss_seg=2.386, train_loss_smooth=2.151, train_macc=7.867, train_miou=4.773[0m)] 44%|####4     | 88/200 [07:07<09:21,  5.01s/it, [0;92mdata_loading=3.206, iteration=3.082, learning_rate=0.015, train_acc=37.24, train_loss_cross_entropy=2.386, train_loss_seg=2.386, train_loss_smooth=2.151, train_macc=7.867, train_miou=4.773[0m)] 44%|####4     | 88/200 [07:10<09:21,  5.01s/it, [0;92mdata_loading=0.609, iteration=2.356, learning_rate=0.016, train_acc=37.52, train_loss_cross_entropy=2.376, train_loss_seg=2.376, train_loss_smooth=2.136, train_macc=7.887, train_miou=4.800[0m)] 44%|####4     | 89/200 [07:10<08:08,  4.40s/it, [0;92mdata_loading=0.609, iteration=2.356, learning_rate=0.016, train_acc=37.52, train_loss_cross_entropy=2.376, train_loss_seg=2.376, train_loss_smooth=2.136, train_macc=7.887, train_miou=4.800[0m)] 44%|####4     | 89/200 [07:13<08:08,  4.40s/it, [0;92mdata_loading=0.595, iteration=2.570, learning_rate=0.017, train_acc=37.90, train_loss_cross_entropy=2.364, train_loss_seg=2.364, train_loss_smooth=2.114, train_macc=7.941, train_miou=4.843[0m)] 45%|####5     | 90/200 [07:13<07:23,  4.03s/it, [0;92mdata_loading=0.595, iteration=2.570, learning_rate=0.017, train_acc=37.90, train_loss_cross_entropy=2.364, train_loss_seg=2.364, train_loss_smooth=2.114, train_macc=7.941, train_miou=4.843[0m)] 45%|####5     | 90/200 [07:16<07:23,  4.03s/it, [0;92mdata_loading=0.609, iteration=2.473, learning_rate=0.018, train_acc=38.10, train_loss_cross_entropy=2.357, train_loss_seg=2.357, train_loss_smooth=2.105, train_macc=7.967, train_miou=4.861[0m)] 46%|####5     | 91/200 [07:16<06:48,  3.75s/it, [0;92mdata_loading=0.609, iteration=2.473, learning_rate=0.018, train_acc=38.10, train_loss_cross_entropy=2.357, train_loss_seg=2.357, train_loss_smooth=2.105, train_macc=7.967, train_miou=4.861[0m)] 46%|####5     | 91/200 [07:19<06:48,  3.75s/it, [0;92mdata_loading=0.578, iteration=2.170, learning_rate=0.019, train_acc=38.32, train_loss_cross_entropy=2.346, train_loss_seg=2.346, train_loss_smooth=2.088, train_macc=8.000, train_miou=4.885[0m)] 46%|####6     | 92/200 [07:19<06:12,  3.45s/it, [0;92mdata_loading=0.578, iteration=2.170, learning_rate=0.019, train_acc=38.32, train_loss_cross_entropy=2.346, train_loss_seg=2.346, train_loss_smooth=2.088, train_macc=8.000, train_miou=4.885[0m)] 46%|####6     | 92/200 [07:22<06:12,  3.45s/it, [0;92mdata_loading=0.609, iteration=2.339, learning_rate=0.020, train_acc=38.57, train_loss_cross_entropy=2.339, train_loss_seg=2.339, train_loss_smooth=2.078, train_macc=8.026, train_miou=4.909[0m)] 46%|####6     | 93/200 [07:22<05:52,  3.30s/it, [0;92mdata_loading=0.609, iteration=2.339, learning_rate=0.020, train_acc=38.57, train_loss_cross_entropy=2.339, train_loss_seg=2.339, train_loss_smooth=2.078, train_macc=8.026, train_miou=4.909[0m)] 46%|####6     | 93/200 [07:26<05:52,  3.30s/it, [0;92mdata_loading=0.704, iteration=2.706, learning_rate=0.021, train_acc=38.84, train_loss_cross_entropy=2.330, train_loss_seg=2.330, train_loss_smooth=2.064, train_macc=8.072, train_miou=4.943[0m)] 47%|####6     | 94/200 [07:26<05:53,  3.33s/it, [0;92mdata_loading=0.704, iteration=2.706, learning_rate=0.021, train_acc=38.84, train_loss_cross_entropy=2.330, train_loss_seg=2.330, train_loss_smooth=2.064, train_macc=8.072, train_miou=4.943[0m)] 47%|####6     | 94/200 [07:29<05:53,  3.33s/it, [0;92mdata_loading=0.805, iteration=2.567, learning_rate=0.023, train_acc=39.07, train_loss_cross_entropy=2.321, train_loss_seg=2.321, train_loss_smooth=2.050, train_macc=8.131, train_miou=4.98 [0m)] 48%|####7     | 95/200 [07:29<05:51,  3.34s/it, [0;92mdata_loading=0.805, iteration=2.567, learning_rate=0.023, train_acc=39.07, train_loss_cross_entropy=2.321, train_loss_seg=2.321, train_loss_smooth=2.050, train_macc=8.131, train_miou=4.98 [0m)] 48%|####7     | 95/200 [07:38<05:51,  3.34s/it, [0;92mdata_loading=6.284, iteration=2.498, learning_rate=0.024, train_acc=39.21, train_loss_cross_entropy=2.315, train_loss_seg=2.315, train_loss_smooth=2.044, train_macc=8.145, train_miou=4.996[0m)] 48%|####8     | 96/200 [07:38<08:37,  4.98s/it, [0;92mdata_loading=6.284, iteration=2.498, learning_rate=0.024, train_acc=39.21, train_loss_cross_entropy=2.315, train_loss_seg=2.315, train_loss_smooth=2.044, train_macc=8.145, train_miou=4.996[0m)] 48%|####8     | 96/200 [07:41<08:37,  4.98s/it, [0;92mdata_loading=0.746, iteration=2.701, learning_rate=0.025, train_acc=39.39, train_loss_cross_entropy=2.309, train_loss_seg=2.309, train_loss_smooth=2.037, train_macc=8.166, train_miou=5.012[0m)] 48%|####8     | 97/200 [07:41<07:45,  4.52s/it, [0;92mdata_loading=0.746, iteration=2.701, learning_rate=0.025, train_acc=39.39, train_loss_cross_entropy=2.309, train_loss_seg=2.309, train_loss_smooth=2.037, train_macc=8.166, train_miou=5.012[0m)] 48%|####8     | 97/200 [07:45<07:45,  4.52s/it, [0;92mdata_loading=0.850, iteration=2.625, learning_rate=0.027, train_acc=39.73, train_loss_cross_entropy=2.297, train_loss_seg=2.297, train_loss_smooth=2.015, train_macc=8.252, train_miou=5.072[0m)] 49%|####9     | 98/200 [07:45<07:08,  4.21s/it, [0;92mdata_loading=0.850, iteration=2.625, learning_rate=0.027, train_acc=39.73, train_loss_cross_entropy=2.297, train_loss_seg=2.297, train_loss_smooth=2.015, train_macc=8.252, train_miou=5.072[0m)] 49%|####9     | 98/200 [07:48<07:08,  4.21s/it, [0;92mdata_loading=0.722, iteration=2.544, learning_rate=0.029, train_acc=39.88, train_loss_cross_entropy=2.291, train_loss_seg=2.291, train_loss_smooth=2.009, train_macc=8.303, train_miou=5.103[0m)] 50%|####9     | 99/200 [07:48<06:36,  3.92s/it, [0;92mdata_loading=0.722, iteration=2.544, learning_rate=0.029, train_acc=39.88, train_loss_cross_entropy=2.291, train_loss_seg=2.291, train_loss_smooth=2.009, train_macc=8.303, train_miou=5.103[0m)] 50%|####9     | 99/200 [07:51<06:36,  3.92s/it, [0;92mdata_loading=0.760, iteration=2.709, learning_rate=0.030, train_acc=40.12, train_loss_cross_entropy=2.283, train_loss_seg=2.283, train_loss_smooth=1.995, train_macc=8.366, train_miou=5.140[0m)] 50%|#####     | 100/200 [07:51<06:18,  3.79s/it, [0;92mdata_loading=0.760, iteration=2.709, learning_rate=0.030, train_acc=40.12, train_loss_cross_entropy=2.283, train_loss_seg=2.283, train_loss_smooth=1.995, train_macc=8.366, train_miou=5.140[0m)] 50%|#####     | 100/200 [07:55<06:18,  3.79s/it, [0;92mdata_loading=0.672, iteration=2.604, learning_rate=0.032, train_acc=40.27, train_loss_cross_entropy=2.276, train_loss_seg=2.276, train_loss_smooth=1.987, train_macc=8.399, train_miou=5.160[0m)] 50%|#####     | 101/200 [07:55<05:59,  3.63s/it, [0;92mdata_loading=0.672, iteration=2.604, learning_rate=0.032, train_acc=40.27, train_loss_cross_entropy=2.276, train_loss_seg=2.276, train_loss_smooth=1.987, train_macc=8.399, train_miou=5.160[0m)] 50%|#####     | 101/200 [07:58<05:59,  3.63s/it, [0;92mdata_loading=0.649, iteration=2.321, learning_rate=0.034, train_acc=40.40, train_loss_cross_entropy=2.271, train_loss_seg=2.271, train_loss_smooth=1.981, train_macc=8.423, train_miou=5.181[0m)] 51%|#####1    | 102/200 [07:58<05:36,  3.43s/it, [0;92mdata_loading=0.649, iteration=2.321, learning_rate=0.034, train_acc=40.40, train_loss_cross_entropy=2.271, train_loss_seg=2.271, train_loss_smooth=1.981, train_macc=8.423, train_miou=5.181[0m)] 51%|#####1    | 102/200 [08:01<05:36,  3.43s/it, [0;92mdata_loading=0.591, iteration=2.476, learning_rate=0.036, train_acc=40.55, train_loss_cross_entropy=2.265, train_loss_seg=2.265, train_loss_smooth=1.974, train_macc=8.456, train_miou=5.200[0m)] 52%|#####1    | 103/200 [08:01<05:22,  3.32s/it, [0;92mdata_loading=0.591, iteration=2.476, learning_rate=0.036, train_acc=40.55, train_loss_cross_entropy=2.265, train_loss_seg=2.265, train_loss_smooth=1.974, train_macc=8.456, train_miou=5.200[0m)] 52%|#####1    | 103/200 [08:12<05:22,  3.32s/it, [0;92mdata_loading=8.720, iteration=2.962, learning_rate=0.038, train_acc=40.84, train_loss_cross_entropy=2.257, train_loss_seg=2.257, train_loss_smooth=1.961, train_macc=8.509, train_miou=5.242[0m)] 52%|#####2    | 104/200 [08:12<09:19,  5.83s/it, [0;92mdata_loading=8.720, iteration=2.962, learning_rate=0.038, train_acc=40.84, train_loss_cross_entropy=2.257, train_loss_seg=2.257, train_loss_smooth=1.961, train_macc=8.509, train_miou=5.242[0m)] 52%|#####2    | 104/200 [08:23<09:19,  5.83s/it, [0;92mdata_loading=7.776, iteration=2.564, learning_rate=0.041, train_acc=41.02, train_loss_cross_entropy=2.253, train_loss_seg=2.253, train_loss_smooth=1.958, train_macc=8.561, train_miou=5.280[0m)] 52%|#####2    | 105/200 [08:23<11:22,  7.19s/it, [0;92mdata_loading=7.776, iteration=2.564, learning_rate=0.041, train_acc=41.02, train_loss_cross_entropy=2.253, train_loss_seg=2.253, train_loss_smooth=1.958, train_macc=8.561, train_miou=5.280[0m)] 52%|#####2    | 105/200 [08:26<11:22,  7.19s/it, [0;92mdata_loading=0.587, iteration=2.248, learning_rate=0.043, train_acc=41.20, train_loss_cross_entropy=2.244, train_loss_seg=2.244, train_loss_smooth=1.943, train_macc=8.606, train_miou=5.315[0m)] 53%|#####3    | 106/200 [08:26<09:12,  5.88s/it, [0;92mdata_loading=0.587, iteration=2.248, learning_rate=0.043, train_acc=41.20, train_loss_cross_entropy=2.244, train_loss_seg=2.244, train_loss_smooth=1.943, train_macc=8.606, train_miou=5.315[0m)] 53%|#####3    | 106/200 [08:28<09:12,  5.88s/it, [0;92mdata_loading=0.601, iteration=2.183, learning_rate=0.046, train_acc=41.40, train_loss_cross_entropy=2.234, train_loss_seg=2.234, train_loss_smooth=1.927, train_macc=8.666, train_miou=5.364[0m)] 54%|#####3    | 107/200 [08:28<07:40,  4.95s/it, [0;92mdata_loading=0.601, iteration=2.183, learning_rate=0.046, train_acc=41.40, train_loss_cross_entropy=2.234, train_loss_seg=2.234, train_loss_smooth=1.927, train_macc=8.666, train_miou=5.364[0m)] 54%|#####3    | 107/200 [08:31<07:40,  4.95s/it, [0;92mdata_loading=0.657, iteration=2.245, learning_rate=0.048, train_acc=41.61, train_loss_cross_entropy=2.226, train_loss_seg=2.226, train_loss_smooth=1.913, train_macc=8.713, train_miou=5.408[0m)] 54%|#####4    | 108/200 [08:31<06:38,  4.34s/it, [0;92mdata_loading=0.657, iteration=2.245, learning_rate=0.048, train_acc=41.61, train_loss_cross_entropy=2.226, train_loss_seg=2.226, train_loss_smooth=1.913, train_macc=8.713, train_miou=5.408[0m)] 54%|#####4    | 108/200 [08:34<06:38,  4.34s/it, [0;92mdata_loading=0.662, iteration=2.380, learning_rate=0.051, train_acc=41.81, train_loss_cross_entropy=2.217, train_loss_seg=2.217, train_loss_smooth=1.899, train_macc=8.777, train_miou=5.475[0m)] 55%|#####4    | 109/200 [08:34<05:59,  3.95s/it, [0;92mdata_loading=0.662, iteration=2.380, learning_rate=0.051, train_acc=41.81, train_loss_cross_entropy=2.217, train_loss_seg=2.217, train_loss_smooth=1.899, train_macc=8.777, train_miou=5.475[0m)] 55%|#####4    | 109/200 [08:37<05:59,  3.95s/it, [0;92mdata_loading=0.664, iteration=2.576, learning_rate=0.054, train_acc=41.98, train_loss_cross_entropy=2.211, train_loss_seg=2.211, train_loss_smooth=1.890, train_macc=8.853, train_miou=5.533[0m)] 55%|#####5    | 110/200 [08:37<05:36,  3.74s/it, [0;92mdata_loading=0.664, iteration=2.576, learning_rate=0.054, train_acc=41.98, train_loss_cross_entropy=2.211, train_loss_seg=2.211, train_loss_smooth=1.890, train_macc=8.853, train_miou=5.533[0m)] 55%|#####5    | 110/200 [08:40<05:36,  3.74s/it, [0;92mdata_loading=0.599, iteration=2.167, learning_rate=0.058, train_acc=42.20, train_loss_cross_entropy=2.201, train_loss_seg=2.201, train_loss_smooth=1.874, train_macc=8.889, train_miou=5.569[0m)] 56%|#####5    | 111/200 [08:40<05:06,  3.45s/it, [0;92mdata_loading=0.599, iteration=2.167, learning_rate=0.058, train_acc=42.20, train_loss_cross_entropy=2.201, train_loss_seg=2.201, train_loss_smooth=1.874, train_macc=8.889, train_miou=5.569[0m)] 56%|#####5    | 111/200 [08:43<05:06,  3.45s/it, [0;92mdata_loading=0.588, iteration=2.276, learning_rate=0.061, train_acc=42.34, train_loss_cross_entropy=2.194, train_loss_seg=2.194, train_loss_smooth=1.864, train_macc=8.926, train_miou=5.597[0m)] 56%|#####6    | 112/200 [08:43<04:47,  3.27s/it, [0;92mdata_loading=0.588, iteration=2.276, learning_rate=0.061, train_acc=42.34, train_loss_cross_entropy=2.194, train_loss_seg=2.194, train_loss_smooth=1.864, train_macc=8.926, train_miou=5.597[0m)] 56%|#####6    | 112/200 [09:00<04:47,  3.27s/it, [0;92mdata_loading=14.37, iteration=2.610, learning_rate=0.065, train_acc=42.53, train_loss_cross_entropy=2.189, train_loss_seg=2.189, train_loss_smooth=1.857, train_macc=8.987, train_miou=5.643[0m)] 56%|#####6    | 113/200 [09:00<10:42,  7.39s/it, [0;92mdata_loading=14.37, iteration=2.610, learning_rate=0.065, train_acc=42.53, train_loss_cross_entropy=2.189, train_loss_seg=2.189, train_loss_smooth=1.857, train_macc=8.987, train_miou=5.643[0m)] 56%|#####6    | 113/200 [09:03<10:42,  7.39s/it, [0;92mdata_loading=0.717, iteration=1.671, learning_rate=0.069, train_acc=42.63, train_loss_cross_entropy=2.182, train_loss_seg=2.182, train_loss_smooth=1.847, train_macc=9.019, train_miou=5.665[0m)] 57%|#####6    | 114/200 [09:03<08:26,  5.89s/it, [0;92mdata_loading=0.717, iteration=1.671, learning_rate=0.069, train_acc=42.63, train_loss_cross_entropy=2.182, train_loss_seg=2.182, train_loss_smooth=1.847, train_macc=9.019, train_miou=5.665[0m)] 57%|#####6    | 114/200 [09:06<08:26,  5.89s/it, [0;92mdata_loading=0.664, iteration=2.583, learning_rate=0.073, train_acc=42.90, train_loss_cross_entropy=2.173, train_loss_seg=2.173, train_loss_smooth=1.831, train_macc=9.096, train_miou=5.721[0m)] 57%|#####7    | 115/200 [09:06<07:13,  5.10s/it, [0;92mdata_loading=0.664, iteration=2.583, learning_rate=0.073, train_acc=42.90, train_loss_cross_entropy=2.173, train_loss_seg=2.173, train_loss_smooth=1.831, train_macc=9.096, train_miou=5.721[0m)] 57%|#####7    | 115/200 [09:09<07:13,  5.10s/it, [0;92mdata_loading=0.648, iteration=2.320, learning_rate=0.077, train_acc=43.10, train_loss_cross_entropy=2.165, train_loss_seg=2.165, train_loss_smooth=1.818, train_macc=9.156, train_miou=5.765[0m)] 58%|#####8    | 116/200 [09:09<06:14,  4.46s/it, [0;92mdata_loading=0.648, iteration=2.320, learning_rate=0.077, train_acc=43.10, train_loss_cross_entropy=2.165, train_loss_seg=2.165, train_loss_smooth=1.818, train_macc=9.156, train_miou=5.765[0m)] 58%|#####8    | 116/200 [09:12<06:14,  4.46s/it, [0;92mdata_loading=0.676, iteration=2.339, learning_rate=0.082, train_acc=43.19, train_loss_cross_entropy=2.159, train_loss_seg=2.159, train_loss_smooth=1.812, train_macc=9.199, train_miou=5.790[0m)] 58%|#####8    | 117/200 [09:12<05:34,  4.02s/it, [0;92mdata_loading=0.676, iteration=2.339, learning_rate=0.082, train_acc=43.19, train_loss_cross_entropy=2.159, train_loss_seg=2.159, train_loss_smooth=1.812, train_macc=9.199, train_miou=5.790[0m)] 58%|#####8    | 117/200 [09:14<05:34,  4.02s/it, [0;92mdata_loading=0.680, iteration=1.521, learning_rate=0.087, train_acc=43.30, train_loss_cross_entropy=2.153, train_loss_seg=2.153, train_loss_smooth=1.803, train_macc=9.212, train_miou=5.810[0m)] 59%|#####8    | 118/200 [09:14<04:45,  3.48s/it, [0;92mdata_loading=0.680, iteration=1.521, learning_rate=0.087, train_acc=43.30, train_loss_cross_entropy=2.153, train_loss_seg=2.153, train_loss_smooth=1.803, train_macc=9.212, train_miou=5.810[0m)] 59%|#####8    | 118/200 [09:17<04:45,  3.48s/it, [0;92mdata_loading=0.642, iteration=2.144, learning_rate=0.092, train_acc=43.44, train_loss_cross_entropy=2.145, train_loss_seg=2.145, train_loss_smooth=1.791, train_macc=9.228, train_miou=5.828[0m)] 60%|#####9    | 119/200 [09:17<04:24,  3.27s/it, [0;92mdata_loading=0.642, iteration=2.144, learning_rate=0.092, train_acc=43.44, train_loss_cross_entropy=2.145, train_loss_seg=2.145, train_loss_smooth=1.791, train_macc=9.228, train_miou=5.828[0m)] 60%|#####9    | 119/200 [09:20<04:24,  3.27s/it, [0;92mdata_loading=0.695, iteration=2.217, learning_rate=0.097, train_acc=43.51, train_loss_cross_entropy=2.139, train_loss_seg=2.139, train_loss_smooth=1.782, train_macc=9.243, train_miou=5.843[0m)] 60%|######    | 120/200 [09:20<04:13,  3.16s/it, [0;92mdata_loading=0.695, iteration=2.217, learning_rate=0.097, train_acc=43.51, train_loss_cross_entropy=2.139, train_loss_seg=2.139, train_loss_smooth=1.782, train_macc=9.243, train_miou=5.843[0m)] 60%|######    | 120/200 [09:22<04:13,  3.16s/it, [0;92mdata_loading=0.590, iteration=2.027, learning_rate=0.103, train_acc=43.60, train_loss_cross_entropy=2.133, train_loss_seg=2.133, train_loss_smooth=1.773, train_macc=9.268, train_miou=5.864[0m)] 60%|######    | 121/200 [09:22<03:56,  3.00s/it, [0;92mdata_loading=0.590, iteration=2.027, learning_rate=0.103, train_acc=43.60, train_loss_cross_entropy=2.133, train_loss_seg=2.133, train_loss_smooth=1.773, train_macc=9.268, train_miou=5.864[0m)] 60%|######    | 121/200 [09:30<03:56,  3.00s/it, [0;92mdata_loading=4.636, iteration=2.705, learning_rate=0.109, train_acc=43.78, train_loss_cross_entropy=2.125, train_loss_seg=2.125, train_loss_smooth=1.761, train_macc=9.313, train_miou=5.898[0m)] 61%|######1   | 122/200 [09:30<05:35,  4.30s/it, [0;92mdata_loading=4.636, iteration=2.705, learning_rate=0.109, train_acc=43.78, train_loss_cross_entropy=2.125, train_loss_seg=2.125, train_loss_smooth=1.761, train_macc=9.313, train_miou=5.898[0m)] 61%|######1   | 122/200 [09:32<05:35,  4.30s/it, [0;92mdata_loading=0.809, iteration=1.564, learning_rate=0.116, train_acc=43.92, train_loss_cross_entropy=2.118, train_loss_seg=2.118, train_loss_smooth=1.749, train_macc=9.368, train_miou=5.944[0m)] 62%|######1   | 123/200 [09:32<04:46,  3.72s/it, [0;92mdata_loading=0.809, iteration=1.564, learning_rate=0.116, train_acc=43.92, train_loss_cross_entropy=2.118, train_loss_seg=2.118, train_loss_smooth=1.749, train_macc=9.368, train_miou=5.944[0m)] 62%|######1   | 123/200 [09:35<04:46,  3.72s/it, [0;92mdata_loading=0.723, iteration=2.268, learning_rate=0.123, train_acc=44.04, train_loss_cross_entropy=2.111, train_loss_seg=2.111, train_loss_smooth=1.74 , train_macc=9.440, train_miou=6.007[0m)] 62%|######2   | 124/200 [09:35<04:26,  3.50s/it, [0;92mdata_loading=0.723, iteration=2.268, learning_rate=0.123, train_acc=44.04, train_loss_cross_entropy=2.111, train_loss_seg=2.111, train_loss_smooth=1.74 , train_macc=9.440, train_miou=6.007[0m)] 62%|######2   | 124/200 [09:38<04:26,  3.50s/it, [0;92mdata_loading=0.700, iteration=2.676, learning_rate=0.130, train_acc=44.25, train_loss_cross_entropy=2.104, train_loss_seg=2.104, train_loss_smooth=1.728, train_macc=9.533, train_miou=6.082[0m)] 62%|######2   | 125/200 [09:38<04:19,  3.47s/it, [0;92mdata_loading=0.700, iteration=2.676, learning_rate=0.130, train_acc=44.25, train_loss_cross_entropy=2.104, train_loss_seg=2.104, train_loss_smooth=1.728, train_macc=9.533, train_miou=6.082[0m)] 62%|######2   | 125/200 [09:42<04:19,  3.47s/it, [0;92mdata_loading=0.823, iteration=2.966, learning_rate=0.138, train_acc=44.42, train_loss_cross_entropy=2.098, train_loss_seg=2.098, train_loss_smooth=1.720, train_macc=9.622, train_miou=6.151[0m)] 63%|######3   | 126/200 [09:42<04:23,  3.56s/it, [0;92mdata_loading=0.823, iteration=2.966, learning_rate=0.138, train_acc=44.42, train_loss_cross_entropy=2.098, train_loss_seg=2.098, train_loss_smooth=1.720, train_macc=9.622, train_miou=6.151[0m)] 63%|######3   | 126/200 [09:45<04:23,  3.56s/it, [0;92mdata_loading=0.601, iteration=2.614, learning_rate=0.146, train_acc=44.62, train_loss_cross_entropy=2.090, train_loss_seg=2.090, train_loss_smooth=1.706, train_macc=9.685, train_miou=6.205[0m)] 64%|######3   | 127/200 [09:45<04:12,  3.46s/it, [0;92mdata_loading=0.601, iteration=2.614, learning_rate=0.146, train_acc=44.62, train_loss_cross_entropy=2.090, train_loss_seg=2.090, train_loss_smooth=1.706, train_macc=9.685, train_miou=6.205[0m)] 64%|######3   | 127/200 [09:49<04:12,  3.46s/it, [0;92mdata_loading=0.801, iteration=2.494, learning_rate=0.155, train_acc=44.89, train_loss_cross_entropy=2.080, train_loss_seg=2.080, train_loss_smooth=1.687, train_macc=9.780, train_miou=6.276[0m)] 64%|######4   | 128/200 [09:49<04:05,  3.41s/it, [0;92mdata_loading=0.801, iteration=2.494, learning_rate=0.155, train_acc=44.89, train_loss_cross_entropy=2.080, train_loss_seg=2.080, train_loss_smooth=1.687, train_macc=9.780, train_miou=6.276[0m)] 64%|######4   | 128/200 [09:52<04:05,  3.41s/it, [0;92mdata_loading=0.838, iteration=2.748, learning_rate=0.164, train_acc=45.06, train_loss_cross_entropy=2.072, train_loss_seg=2.072, train_loss_smooth=1.673, train_macc=9.843, train_miou=6.326[0m)] 64%|######4   | 129/200 [09:52<04:05,  3.46s/it, [0;92mdata_loading=0.838, iteration=2.748, learning_rate=0.164, train_acc=45.06, train_loss_cross_entropy=2.072, train_loss_seg=2.072, train_loss_smooth=1.673, train_macc=9.843, train_miou=6.326[0m)] 64%|######4   | 129/200 [09:56<04:05,  3.46s/it, [0;92mdata_loading=0.678, iteration=2.749, learning_rate=0.174, train_acc=45.35, train_loss_cross_entropy=2.064, train_loss_seg=2.064, train_loss_smooth=1.659, train_macc=9.937, train_miou=6.394[0m)] 65%|######5   | 130/200 [09:56<04:01,  3.45s/it, [0;92mdata_loading=0.678, iteration=2.749, learning_rate=0.174, train_acc=45.35, train_loss_cross_entropy=2.064, train_loss_seg=2.064, train_loss_smooth=1.659, train_macc=9.937, train_miou=6.394[0m)] 65%|######5   | 130/200 [10:07<04:01,  3.45s/it, [0;92mdata_loading=8.460, iteration=2.482, learning_rate=0.184, train_acc=45.61, train_loss_cross_entropy=2.056, train_loss_seg=2.056, train_loss_smooth=1.645, train_macc=10.03, train_miou=6.463[0m)] 66%|######5   | 131/200 [10:07<06:33,  5.70s/it, [0;92mdata_loading=8.460, iteration=2.482, learning_rate=0.184, train_acc=45.61, train_loss_cross_entropy=2.056, train_loss_seg=2.056, train_loss_smooth=1.645, train_macc=10.03, train_miou=6.463[0m)] 66%|######5   | 131/200 [10:10<06:33,  5.70s/it, [0;92mdata_loading=0.620, iteration=2.542, learning_rate=0.195, train_acc=45.78, train_loss_cross_entropy=2.050, train_loss_seg=2.050, train_loss_smooth=1.637, train_macc=10.09, train_miou=6.511[0m)] 66%|######6   | 132/200 [10:10<05:35,  4.94s/it, [0;92mdata_loading=0.620, iteration=2.542, learning_rate=0.195, train_acc=45.78, train_loss_cross_entropy=2.050, train_loss_seg=2.050, train_loss_smooth=1.637, train_macc=10.09, train_miou=6.511[0m)] 66%|######6   | 132/200 [10:13<05:35,  4.94s/it, [0;92mdata_loading=0.658, iteration=2.839, learning_rate=0.207, train_acc=45.96, train_loss_cross_entropy=2.045, train_loss_seg=2.045, train_loss_smooth=1.632, train_macc=10.16, train_miou=6.557[0m)] 66%|######6   | 133/200 [10:13<05:01,  4.51s/it, [0;92mdata_loading=0.658, iteration=2.839, learning_rate=0.207, train_acc=45.96, train_loss_cross_entropy=2.045, train_loss_seg=2.045, train_loss_smooth=1.632, train_macc=10.16, train_miou=6.557[0m)] 66%|######6   | 133/200 [10:16<05:01,  4.51s/it, [0;92mdata_loading=0.668, iteration=2.475, learning_rate=0.219, train_acc=46.08, train_loss_cross_entropy=2.040, train_loss_seg=2.040, train_loss_smooth=1.627, train_macc=10.22, train_miou=6.602[0m)] 67%|######7   | 134/200 [10:16<04:30,  4.10s/it, [0;92mdata_loading=0.668, iteration=2.475, learning_rate=0.219, train_acc=46.08, train_loss_cross_entropy=2.040, train_loss_seg=2.040, train_loss_smooth=1.627, train_macc=10.22, train_miou=6.602[0m)] 67%|######7   | 134/200 [10:19<04:30,  4.10s/it, [0;92mdata_loading=0.608, iteration=2.388, learning_rate=0.232, train_acc=46.22, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.617, train_macc=10.29, train_miou=6.658[0m)] 68%|######7   | 135/200 [10:19<04:04,  3.77s/it, [0;92mdata_loading=0.608, iteration=2.388, learning_rate=0.232, train_acc=46.22, train_loss_cross_entropy=2.034, train_loss_seg=2.034, train_loss_smooth=1.617, train_macc=10.29, train_miou=6.658[0m)] 68%|######7   | 135/200 [10:23<04:04,  3.77s/it, [0;92mdata_loading=0.685, iteration=2.779, learning_rate=0.246, train_acc=46.27, train_loss_cross_entropy=2.032, train_loss_seg=2.032, train_loss_smooth=1.621, train_macc=10.32, train_miou=6.679[0m)] 68%|######8   | 136/200 [10:23<03:55,  3.68s/it, [0;92mdata_loading=0.685, iteration=2.779, learning_rate=0.246, train_acc=46.27, train_loss_cross_entropy=2.032, train_loss_seg=2.032, train_loss_smooth=1.621, train_macc=10.32, train_miou=6.679[0m)] 68%|######8   | 136/200 [10:26<03:55,  3.68s/it, [0;92mdata_loading=0.730, iteration=2.738, learning_rate=0.261, train_acc=46.48, train_loss_cross_entropy=2.025, train_loss_seg=2.025, train_loss_smooth=1.609, train_macc=10.38, train_miou=6.729[0m)] 68%|######8   | 137/200 [10:26<03:47,  3.61s/it, [0;92mdata_loading=0.730, iteration=2.738, learning_rate=0.261, train_acc=46.48, train_loss_cross_entropy=2.025, train_loss_seg=2.025, train_loss_smooth=1.609, train_macc=10.38, train_miou=6.729[0m)] 68%|######8   | 137/200 [10:30<03:47,  3.61s/it, [0;92mdata_loading=0.785, iteration=2.504, learning_rate=0.276, train_acc=46.66, train_loss_cross_entropy=2.019, train_loss_seg=2.019, train_loss_smooth=1.600, train_macc=10.45, train_miou=6.774[0m)] 69%|######9   | 138/200 [10:30<03:38,  3.52s/it, [0;92mdata_loading=0.785, iteration=2.504, learning_rate=0.276, train_acc=46.66, train_loss_cross_entropy=2.019, train_loss_seg=2.019, train_loss_smooth=1.600, train_macc=10.45, train_miou=6.774[0m)] 69%|######9   | 138/200 [10:33<03:38,  3.52s/it, [0;92mdata_loading=0.711, iteration=2.446, learning_rate=0.293, train_acc=46.80, train_loss_cross_entropy=2.014, train_loss_seg=2.014, train_loss_smooth=1.593, train_macc=10.51, train_miou=6.820[0m)] 70%|######9   | 139/200 [10:33<03:27,  3.41s/it, [0;92mdata_loading=0.711, iteration=2.446, learning_rate=0.293, train_acc=46.80, train_loss_cross_entropy=2.014, train_loss_seg=2.014, train_loss_smooth=1.593, train_macc=10.51, train_miou=6.820[0m)] 70%|######9   | 139/200 [10:37<03:27,  3.41s/it, [0;92mdata_loading=1.342, iteration=2.583, learning_rate=0.310, train_acc=46.94, train_loss_cross_entropy=2.008, train_loss_seg=2.008, train_loss_smooth=1.586, train_macc=10.58, train_miou=6.884[0m)] 70%|#######   | 140/200 [10:37<03:33,  3.56s/it, [0;92mdata_loading=1.342, iteration=2.583, learning_rate=0.310, train_acc=46.94, train_loss_cross_entropy=2.008, train_loss_seg=2.008, train_loss_smooth=1.586, train_macc=10.58, train_miou=6.884[0m)] 70%|#######   | 140/200 [10:40<03:33,  3.56s/it, [0;92mdata_loading=0.760, iteration=2.263, learning_rate=0.329, train_acc=47.13, train_loss_cross_entropy=2.001, train_loss_seg=2.001, train_loss_smooth=1.574, train_macc=10.65, train_miou=6.935[0m)] 70%|#######   | 141/200 [10:40<03:20,  3.40s/it, [0;92mdata_loading=0.760, iteration=2.263, learning_rate=0.329, train_acc=47.13, train_loss_cross_entropy=2.001, train_loss_seg=2.001, train_loss_smooth=1.574, train_macc=10.65, train_miou=6.935[0m)] 70%|#######   | 141/200 [10:43<03:20,  3.40s/it, [0;92mdata_loading=0.593, iteration=2.293, learning_rate=0.348, train_acc=47.22, train_loss_cross_entropy=1.998, train_loss_seg=1.998, train_loss_smooth=1.572, train_macc=10.73, train_miou=6.99 [0m)] 71%|#######1  | 142/200 [10:43<03:08,  3.25s/it, [0;92mdata_loading=0.593, iteration=2.293, learning_rate=0.348, train_acc=47.22, train_loss_cross_entropy=1.998, train_loss_seg=1.998, train_loss_smooth=1.572, train_macc=10.73, train_miou=6.99 [0m)] 71%|#######1  | 142/200 [10:46<03:08,  3.25s/it, [0;92mdata_loading=0.637, iteration=2.259, learning_rate=0.369, train_acc=47.35, train_loss_cross_entropy=1.992, train_loss_seg=1.992, train_loss_smooth=1.564, train_macc=10.80, train_miou=7.045[0m)] 72%|#######1  | 143/200 [10:46<02:59,  3.14s/it, [0;92mdata_loading=0.637, iteration=2.259, learning_rate=0.369, train_acc=47.35, train_loss_cross_entropy=1.992, train_loss_seg=1.992, train_loss_smooth=1.564, train_macc=10.80, train_miou=7.045[0m)] 72%|#######1  | 143/200 [10:48<02:59,  3.14s/it, [0;92mdata_loading=0.600, iteration=2.251, learning_rate=0.391, train_acc=47.44, train_loss_cross_entropy=1.988, train_loss_seg=1.988, train_loss_smooth=1.560, train_macc=10.84, train_miou=7.080[0m)] 72%|#######2  | 144/200 [10:48<02:51,  3.06s/it, [0;92mdata_loading=0.600, iteration=2.251, learning_rate=0.391, train_acc=47.44, train_loss_cross_entropy=1.988, train_loss_seg=1.988, train_loss_smooth=1.560, train_macc=10.84, train_miou=7.080[0m)] 72%|#######2  | 144/200 [10:52<02:51,  3.06s/it, [0;92mdata_loading=0.852, iteration=2.815, learning_rate=0.415, train_acc=47.49, train_loss_cross_entropy=1.985, train_loss_seg=1.985, train_loss_smooth=1.562, train_macc=10.89, train_miou=7.111[0m)] 72%|#######2  | 145/200 [10:52<02:58,  3.24s/it, [0;92mdata_loading=0.852, iteration=2.815, learning_rate=0.415, train_acc=47.49, train_loss_cross_entropy=1.985, train_loss_seg=1.985, train_loss_smooth=1.562, train_macc=10.89, train_miou=7.111[0m)] 72%|#######2  | 145/200 [10:56<02:58,  3.24s/it, [0;92mdata_loading=0.782, iteration=2.785, learning_rate=0.439, train_acc=47.68, train_loss_cross_entropy=1.980, train_loss_seg=1.980, train_loss_smooth=1.555, train_macc=11.00, train_miou=7.200[0m)] 73%|#######3  | 146/200 [10:56<03:00,  3.34s/it, [0;92mdata_loading=0.782, iteration=2.785, learning_rate=0.439, train_acc=47.68, train_loss_cross_entropy=1.980, train_loss_seg=1.980, train_loss_smooth=1.555, train_macc=11.00, train_miou=7.200[0m)] 73%|#######3  | 146/200 [11:01<03:00,  3.34s/it, [0;92mdata_loading=2.384, iteration=3.240, learning_rate=0.466, train_acc=47.89, train_loss_cross_entropy=1.975, train_loss_seg=1.975, train_loss_smooth=1.548, train_macc=11.17, train_miou=7.341[0m)] 74%|#######3  | 147/200 [11:01<03:33,  4.02s/it, [0;92mdata_loading=2.384, iteration=3.240, learning_rate=0.466, train_acc=47.89, train_loss_cross_entropy=1.975, train_loss_seg=1.975, train_loss_smooth=1.548, train_macc=11.17, train_miou=7.341[0m)] 74%|#######3  | 147/200 [11:05<03:33,  4.02s/it, [0;92mdata_loading=0.712, iteration=2.722, learning_rate=0.493, train_acc=47.99, train_loss_cross_entropy=1.970, train_loss_seg=1.970, train_loss_smooth=1.542, train_macc=11.24, train_miou=7.396[0m)] 74%|#######4  | 148/200 [11:05<03:20,  3.85s/it, [0;92mdata_loading=0.712, iteration=2.722, learning_rate=0.493, train_acc=47.99, train_loss_cross_entropy=1.970, train_loss_seg=1.970, train_loss_smooth=1.542, train_macc=11.24, train_miou=7.396[0m)] 74%|#######4  | 148/200 [11:12<03:20,  3.85s/it, [0;92mdata_loading=4.509, iteration=2.699, learning_rate=0.523, train_acc=48.10, train_loss_cross_entropy=1.966, train_loss_seg=1.966, train_loss_smooth=1.538, train_macc=11.37, train_miou=7.495[0m)] 74%|#######4  | 149/200 [11:12<04:07,  4.86s/it, [0;92mdata_loading=4.509, iteration=2.699, learning_rate=0.523, train_acc=48.10, train_loss_cross_entropy=1.966, train_loss_seg=1.966, train_loss_smooth=1.538, train_macc=11.37, train_miou=7.495[0m)] 74%|#######4  | 149/200 [11:14<04:07,  4.86s/it, [0;92mdata_loading=0.752, iteration=1.793, learning_rate=0.554, train_acc=48.20, train_loss_cross_entropy=1.960, train_loss_seg=1.960, train_loss_smooth=1.528, train_macc=11.46, train_miou=7.563[0m)] 75%|#######5  | 150/200 [11:14<03:28,  4.16s/it, [0;92mdata_loading=0.752, iteration=1.793, learning_rate=0.554, train_acc=48.20, train_loss_cross_entropy=1.960, train_loss_seg=1.960, train_loss_smooth=1.528, train_macc=11.46, train_miou=7.563[0m)] 75%|#######5  | 150/200 [11:18<03:28,  4.16s/it, [0;92mdata_loading=0.719, iteration=2.569, learning_rate=0.587, train_acc=48.38, train_loss_cross_entropy=1.954, train_loss_seg=1.954, train_loss_smooth=1.517, train_macc=11.54, train_miou=7.632[0m)] 76%|#######5  | 151/200 [11:18<03:11,  3.90s/it, [0;92mdata_loading=0.719, iteration=2.569, learning_rate=0.587, train_acc=48.38, train_loss_cross_entropy=1.954, train_loss_seg=1.954, train_loss_smooth=1.517, train_macc=11.54, train_miou=7.632[0m)] 76%|#######5  | 151/200 [11:20<03:11,  3.90s/it, [0;92mdata_loading=0.733, iteration=1.518, learning_rate=0.622, train_acc=48.47, train_loss_cross_entropy=1.948, train_loss_seg=1.948, train_loss_smooth=1.507, train_macc=11.57, train_miou=7.655[0m)] 76%|#######6  | 152/200 [11:20<02:43,  3.41s/it, [0;92mdata_loading=0.733, iteration=1.518, learning_rate=0.622, train_acc=48.47, train_loss_cross_entropy=1.948, train_loss_seg=1.948, train_loss_smooth=1.507, train_macc=11.57, train_miou=7.655[0m)] 76%|#######6  | 152/200 [11:23<02:43,  3.41s/it, [0;92mdata_loading=0.590, iteration=2.420, learning_rate=0.659, train_acc=48.66, train_loss_cross_entropy=1.942, train_loss_seg=1.942, train_loss_smooth=1.499, train_macc=11.71, train_miou=7.772[0m)] 76%|#######6  | 153/200 [11:23<02:34,  3.29s/it, [0;92mdata_loading=0.590, iteration=2.420, learning_rate=0.659, train_acc=48.66, train_loss_cross_entropy=1.942, train_loss_seg=1.942, train_loss_smooth=1.499, train_macc=11.71, train_miou=7.772[0m)] 76%|#######6  | 153/200 [11:25<02:34,  3.29s/it, [0;92mdata_loading=0.587, iteration=1.928, learning_rate=0.698, train_acc=48.80, train_loss_cross_entropy=1.938, train_loss_seg=1.938, train_loss_smooth=1.493, train_macc=11.77, train_miou=7.818[0m)] 77%|#######7  | 154/200 [11:25<02:20,  3.06s/it, [0;92mdata_loading=0.587, iteration=1.928, learning_rate=0.698, train_acc=48.80, train_loss_cross_entropy=1.938, train_loss_seg=1.938, train_loss_smooth=1.493, train_macc=11.77, train_miou=7.818[0m)] 77%|#######7  | 154/200 [11:29<02:20,  3.06s/it, [0;92mdata_loading=0.736, iteration=2.772, learning_rate=0.740, train_acc=48.90, train_loss_cross_entropy=1.933, train_loss_seg=1.933, train_loss_smooth=1.488, train_macc=11.85, train_miou=7.872[0m)] 78%|#######7  | 155/200 [11:29<02:23,  3.19s/it, [0;92mdata_loading=0.736, iteration=2.772, learning_rate=0.740, train_acc=48.90, train_loss_cross_entropy=1.933, train_loss_seg=1.933, train_loss_smooth=1.488, train_macc=11.85, train_miou=7.872[0m)] 78%|#######7  | 155/200 [11:34<02:23,  3.19s/it, [0;92mdata_loading=2.698, iteration=2.617, learning_rate=0.784, train_acc=48.98, train_loss_cross_entropy=1.930, train_loss_seg=1.930, train_loss_smooth=1.487, train_macc=11.92, train_miou=7.925[0m)] 78%|#######8  | 156/200 [11:34<02:48,  3.83s/it, [0;92mdata_loading=2.698, iteration=2.617, learning_rate=0.784, train_acc=48.98, train_loss_cross_entropy=1.930, train_loss_seg=1.930, train_loss_smooth=1.487, train_macc=11.92, train_miou=7.925[0m)] 78%|#######8  | 156/200 [11:38<02:48,  3.83s/it, [0;92mdata_loading=0.638, iteration=2.819, learning_rate=0.831, train_acc=49.14, train_loss_cross_entropy=1.925, train_loss_seg=1.925, train_loss_smooth=1.479, train_macc=12.04, train_miou=8.009[0m)] 78%|#######8  | 157/200 [11:38<02:39,  3.72s/it, [0;92mdata_loading=0.638, iteration=2.819, learning_rate=0.831, train_acc=49.14, train_loss_cross_entropy=1.925, train_loss_seg=1.925, train_loss_smooth=1.479, train_macc=12.04, train_miou=8.009[0m)] 78%|#######8  | 157/200 [11:48<02:39,  3.72s/it, [0;92mdata_loading=8.236, iteration=2.491, learning_rate=0.880, train_acc=49.24, train_loss_cross_entropy=1.920, train_loss_seg=1.920, train_loss_smooth=1.473, train_macc=12.11, train_miou=8.063[0m)] 79%|#######9  | 158/200 [11:48<04:04,  5.82s/it, [0;92mdata_loading=8.236, iteration=2.491, learning_rate=0.880, train_acc=49.24, train_loss_cross_entropy=1.920, train_loss_seg=1.920, train_loss_smooth=1.473, train_macc=12.11, train_miou=8.063[0m)] 79%|#######9  | 158/200 [11:52<04:04,  5.82s/it, [0;92mdata_loading=0.656, iteration=2.439, learning_rate=0.932, train_acc=49.37, train_loss_cross_entropy=1.914, train_loss_seg=1.914, train_loss_smooth=1.463, train_macc=12.20, train_miou=8.130[0m)] 80%|#######9  | 159/200 [11:52<03:25,  5.00s/it, [0;92mdata_loading=0.656, iteration=2.439, learning_rate=0.932, train_acc=49.37, train_loss_cross_entropy=1.914, train_loss_seg=1.914, train_loss_smooth=1.463, train_macc=12.20, train_miou=8.130[0m)] 80%|#######9  | 159/200 [11:55<03:25,  5.00s/it, [0;92mdata_loading=0.704, iteration=2.776, learning_rate=0.988, train_acc=49.52, train_loss_cross_entropy=1.909, train_loss_seg=1.909, train_loss_smooth=1.455, train_macc=12.28, train_miou=8.193[0m)] 80%|########  | 160/200 [11:55<03:01,  4.55s/it, [0;92mdata_loading=0.704, iteration=2.776, learning_rate=0.988, train_acc=49.52, train_loss_cross_entropy=1.909, train_loss_seg=1.909, train_loss_smooth=1.455, train_macc=12.28, train_miou=8.193[0m)] 80%|########  | 160/200 [11:58<03:01,  4.55s/it, [0;92mdata_loading=0.694, iteration=2.443, learning_rate=1.047, train_acc=49.63, train_loss_cross_entropy=1.905, train_loss_seg=1.905, train_loss_smooth=1.452, train_macc=12.37, train_miou=8.262[0m)] 80%|########  | 161/200 [11:58<02:40,  4.12s/it, [0;92mdata_loading=0.694, iteration=2.443, learning_rate=1.047, train_acc=49.63, train_loss_cross_entropy=1.905, train_loss_seg=1.905, train_loss_smooth=1.452, train_macc=12.37, train_miou=8.262[0m)] 80%|########  | 161/200 [12:01<02:40,  4.12s/it, [0;92mdata_loading=0.662, iteration=2.356, learning_rate=1.109, train_acc=49.63, train_loss_cross_entropy=1.906, train_loss_seg=1.906, train_loss_smooth=1.462, train_macc=12.40, train_miou=8.283[0m)] 81%|########1 | 162/200 [12:01<02:24,  3.79s/it, [0;92mdata_loading=0.662, iteration=2.356, learning_rate=1.109, train_acc=49.63, train_loss_cross_entropy=1.906, train_loss_seg=1.906, train_loss_smooth=1.462, train_macc=12.40, train_miou=8.283[0m)] 81%|########1 | 162/200 [12:04<02:24,  3.79s/it, [0;92mdata_loading=0.621, iteration=1.666, learning_rate=1.175, train_acc=49.72, train_loss_cross_entropy=1.901, train_loss_seg=1.901, train_loss_smooth=1.456, train_macc=12.46, train_miou=8.328[0m)] 82%|########1 | 163/200 [12:04<02:03,  3.34s/it, [0;92mdata_loading=0.621, iteration=1.666, learning_rate=1.175, train_acc=49.72, train_loss_cross_entropy=1.901, train_loss_seg=1.901, train_loss_smooth=1.456, train_macc=12.46, train_miou=8.328[0m)] 82%|########1 | 163/200 [12:06<02:03,  3.34s/it, [0;92mdata_loading=0.221, iteration=2.236, learning_rate=1.245, train_acc=49.84, train_loss_cross_entropy=1.895, train_loss_seg=1.895, train_loss_smooth=1.445, train_macc=12.51, train_miou=8.373[0m)] 82%|########2 | 164/200 [12:06<01:50,  3.08s/it, [0;92mdata_loading=0.221, iteration=2.236, learning_rate=1.245, train_acc=49.84, train_loss_cross_entropy=1.895, train_loss_seg=1.895, train_loss_smooth=1.445, train_macc=12.51, train_miou=8.373[0m)] 82%|########2 | 164/200 [12:12<01:50,  3.08s/it, [0;92mdata_loading=2.895, iteration=2.652, learning_rate=1.320, train_acc=49.92, train_loss_cross_entropy=1.892, train_loss_seg=1.892, train_loss_smooth=1.444, train_macc=12.54, train_miou=8.401[0m)] 82%|########2 | 165/200 [12:12<02:13,  3.82s/it, [0;92mdata_loading=2.895, iteration=2.652, learning_rate=1.320, train_acc=49.92, train_loss_cross_entropy=1.892, train_loss_seg=1.892, train_loss_smooth=1.444, train_macc=12.54, train_miou=8.401[0m)] 82%|########2 | 165/200 [12:15<02:13,  3.82s/it, [0;92mdata_loading=0.767, iteration=2.770, learning_rate=1.398, train_acc=50.07, train_loss_cross_entropy=1.888, train_loss_seg=1.888, train_loss_smooth=1.44 , train_macc=12.58, train_miou=8.437[0m)] 83%|########2 | 166/200 [12:15<02:06,  3.73s/it, [0;92mdata_loading=0.767, iteration=2.770, learning_rate=1.398, train_acc=50.07, train_loss_cross_entropy=1.888, train_loss_seg=1.888, train_loss_smooth=1.44 , train_macc=12.58, train_miou=8.437[0m)] 83%|########2 | 166/200 [12:29<02:06,  3.73s/it, [0;92mdata_loading=11.55, iteration=2.542, learning_rate=1.482, train_acc=50.21, train_loss_cross_entropy=1.884, train_loss_seg=1.884, train_loss_smooth=1.434, train_macc=12.62, train_miou=8.476[0m)] 84%|########3 | 167/200 [12:29<03:45,  6.84s/it, [0;92mdata_loading=11.55, iteration=2.542, learning_rate=1.482, train_acc=50.21, train_loss_cross_entropy=1.884, train_loss_seg=1.884, train_loss_smooth=1.434, train_macc=12.62, train_miou=8.476[0m)] 84%|########3 | 167/200 [12:32<03:45,  6.84s/it, [0;92mdata_loading=0.622, iteration=2.685, learning_rate=1.570, train_acc=50.25, train_loss_cross_entropy=1.883, train_loss_seg=1.883, train_loss_smooth=1.439, train_macc=12.66, train_miou=8.500[0m)] 84%|########4 | 168/200 [12:32<03:05,  5.78s/it, [0;92mdata_loading=0.622, iteration=2.685, learning_rate=1.570, train_acc=50.25, train_loss_cross_entropy=1.883, train_loss_seg=1.883, train_loss_smooth=1.439, train_macc=12.66, train_miou=8.500[0m)] 84%|########4 | 168/200 [12:36<03:05,  5.78s/it, [0;92mdata_loading=0.634, iteration=2.581, learning_rate=1.663, train_acc=50.33, train_loss_cross_entropy=1.880, train_loss_seg=1.880, train_loss_smooth=1.440, train_macc=12.73, train_miou=8.558[0m)] 84%|########4 | 169/200 [12:36<02:35,  5.01s/it, [0;92mdata_loading=0.634, iteration=2.581, learning_rate=1.663, train_acc=50.33, train_loss_cross_entropy=1.880, train_loss_seg=1.880, train_loss_smooth=1.440, train_macc=12.73, train_miou=8.558[0m)] 84%|########4 | 169/200 [12:39<02:35,  5.01s/it, [0;92mdata_loading=0.706, iteration=2.432, learning_rate=1.762, train_acc=50.41, train_loss_cross_entropy=1.877, train_loss_seg=1.877, train_loss_smooth=1.436, train_macc=12.80, train_miou=8.613[0m)] 85%|########5 | 170/200 [12:39<02:13,  4.45s/it, [0;92mdata_loading=0.706, iteration=2.432, learning_rate=1.762, train_acc=50.41, train_loss_cross_entropy=1.877, train_loss_seg=1.877, train_loss_smooth=1.436, train_macc=12.80, train_miou=8.613[0m)] 85%|########5 | 170/200 [12:42<02:13,  4.45s/it, [0;92mdata_loading=0.663, iteration=2.405, learning_rate=1.867, train_acc=50.46, train_loss_cross_entropy=1.874, train_loss_seg=1.874, train_loss_smooth=1.435, train_macc=12.86, train_miou=8.653[0m)] 86%|########5 | 171/200 [12:42<01:57,  4.04s/it, [0;92mdata_loading=0.663, iteration=2.405, learning_rate=1.867, train_acc=50.46, train_loss_cross_entropy=1.874, train_loss_seg=1.874, train_loss_smooth=1.435, train_macc=12.86, train_miou=8.653[0m)] 86%|########5 | 171/200 [12:45<01:57,  4.04s/it, [0;92mdata_loading=0.515, iteration=2.504, learning_rate=1.979, train_acc=50.59, train_loss_cross_entropy=1.869, train_loss_seg=1.869, train_loss_smooth=1.428, train_macc=12.93, train_miou=8.701[0m)] 86%|########6 | 172/200 [12:45<01:44,  3.73s/it, [0;92mdata_loading=0.515, iteration=2.504, learning_rate=1.979, train_acc=50.59, train_loss_cross_entropy=1.869, train_loss_seg=1.869, train_loss_smooth=1.428, train_macc=12.93, train_miou=8.701[0m)] 86%|########6 | 172/200 [12:48<01:44,  3.73s/it, [0;92mdata_loading=0.599, iteration=2.441, learning_rate=2.097, train_acc=50.68, train_loss_cross_entropy=1.866, train_loss_seg=1.866, train_loss_smooth=1.425, train_macc=13.02, train_miou=8.767[0m)] 86%|########6 | 173/200 [12:48<01:35,  3.52s/it, [0;92mdata_loading=0.599, iteration=2.441, learning_rate=2.097, train_acc=50.68, train_loss_cross_entropy=1.866, train_loss_seg=1.866, train_loss_smooth=1.425, train_macc=13.02, train_miou=8.767[0m)] 86%|########6 | 173/200 [12:51<01:35,  3.52s/it, [0;92mdata_loading=0.651, iteration=2.434, learning_rate=2.221, train_acc=50.80, train_loss_cross_entropy=1.861, train_loss_seg=1.861, train_loss_smooth=1.418, train_macc=13.07, train_miou=8.812[0m)] 87%|########7 | 174/200 [12:51<01:28,  3.39s/it, [0;92mdata_loading=0.651, iteration=2.434, learning_rate=2.221, train_acc=50.80, train_loss_cross_entropy=1.861, train_loss_seg=1.861, train_loss_smooth=1.418, train_macc=13.07, train_miou=8.812[0m)] 87%|########7 | 174/200 [12:53<01:28,  3.39s/it, [0;92mdata_loading=0.596, iteration=1.738, learning_rate=2.354, train_acc=50.92, train_loss_cross_entropy=1.855, train_loss_seg=1.855, train_loss_smooth=1.405, train_macc=13.11, train_miou=8.852[0m)] 88%|########7 | 175/200 [12:53<01:16,  3.08s/it, [0;92mdata_loading=0.596, iteration=1.738, learning_rate=2.354, train_acc=50.92, train_loss_cross_entropy=1.855, train_loss_seg=1.855, train_loss_smooth=1.405, train_macc=13.11, train_miou=8.852[0m)] 88%|########7 | 175/200 [12:56<01:16,  3.08s/it, [0;92mdata_loading=0.790, iteration=1.738, learning_rate=2.494, train_acc=51.05, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.392, train_macc=13.18, train_miou=8.907[0m)] 88%|########8 | 176/200 [12:56<01:09,  2.91s/it, [0;92mdata_loading=0.790, iteration=1.738, learning_rate=2.494, train_acc=51.05, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.392, train_macc=13.18, train_miou=8.907[0m)] 88%|########8 | 176/200 [12:59<01:09,  2.91s/it, [0;92mdata_loading=0.757, iteration=2.620, learning_rate=2.643, train_acc=51.18, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.381, train_macc=13.25, train_miou=8.960[0m)] 88%|########8 | 177/200 [12:59<01:10,  3.05s/it, [0;92mdata_loading=0.757, iteration=2.620, learning_rate=2.643, train_acc=51.18, train_loss_cross_entropy=1.843, train_loss_seg=1.843, train_loss_smooth=1.381, train_macc=13.25, train_miou=8.960[0m)] 88%|########8 | 177/200 [13:05<01:10,  3.05s/it, [0;92mdata_loading=3.375, iteration=2.716, learning_rate=2.800, train_acc=51.21, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.403, train_macc=13.27, train_miou=8.978[0m)] 89%|########9 | 178/200 [13:05<01:27,  3.96s/it, [0;92mdata_loading=3.375, iteration=2.716, learning_rate=2.800, train_acc=51.21, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.403, train_macc=13.27, train_miou=8.978[0m)] 89%|########9 | 178/200 [13:09<01:27,  3.96s/it, [0;92mdata_loading=0.743, iteration=2.513, learning_rate=2.967, train_acc=51.23, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.405, train_macc=13.29, train_miou=8.987[0m)] 90%|########9 | 179/200 [13:09<01:18,  3.75s/it, [0;92mdata_loading=0.743, iteration=2.513, learning_rate=2.967, train_acc=51.23, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.405, train_macc=13.29, train_miou=8.987[0m)] 90%|########9 | 179/200 [13:12<01:18,  3.75s/it, [0;92mdata_loading=0.694, iteration=2.539, learning_rate=3.144, train_acc=51.23, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.430, train_macc=13.29, train_miou=8.981[0m)] 90%|######### | 180/200 [13:12<01:11,  3.60s/it, [0;92mdata_loading=0.694, iteration=2.539, learning_rate=3.144, train_acc=51.23, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.430, train_macc=13.29, train_miou=8.981[0m)] 90%|######### | 180/200 [13:15<01:11,  3.60s/it, [0;92mdata_loading=0.754, iteration=2.400, learning_rate=3.331, train_acc=51.30, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.427, train_macc=13.33, train_miou=9.017[0m)] 90%|######### | 181/200 [13:15<01:05,  3.46s/it, [0;92mdata_loading=0.754, iteration=2.400, learning_rate=3.331, train_acc=51.30, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.427, train_macc=13.33, train_miou=9.017[0m)] 90%|######### | 181/200 [13:19<01:05,  3.46s/it, [0;92mdata_loading=0.857, iteration=2.696, learning_rate=3.529, train_acc=51.27, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.447, train_macc=13.34, train_miou=9.026[0m)] 91%|#########1| 182/200 [13:19<01:02,  3.49s/it, [0;92mdata_loading=0.857, iteration=2.696, learning_rate=3.529, train_acc=51.27, train_loss_cross_entropy=1.849, train_loss_seg=1.849, train_loss_smooth=1.447, train_macc=13.34, train_miou=9.026[0m)] 91%|#########1| 182/200 [13:22<01:02,  3.49s/it, [0;92mdata_loading=0.684, iteration=2.368, learning_rate=3.739, train_acc=51.35, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.447, train_macc=13.37, train_miou=9.048[0m)] 92%|#########1| 183/200 [13:22<00:57,  3.36s/it, [0;92mdata_loading=0.684, iteration=2.368, learning_rate=3.739, train_acc=51.35, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.447, train_macc=13.37, train_miou=9.048[0m)] 92%|#########1| 183/200 [13:24<00:57,  3.36s/it, [0;92mdata_loading=0.655, iteration=1.510, learning_rate=3.962, train_acc=51.40, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.448, train_macc=13.37, train_miou=9.050[0m)] 92%|#########2| 184/200 [13:24<00:48,  3.00s/it, [0;92mdata_loading=0.655, iteration=1.510, learning_rate=3.962, train_acc=51.40, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.448, train_macc=13.37, train_miou=9.050[0m)] 92%|#########2| 184/200 [13:27<00:48,  3.00s/it, [0;92mdata_loading=0.609, iteration=2.424, learning_rate=4.198, train_acc=51.44, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.463, train_macc=13.36, train_miou=9.046[0m)] 92%|#########2| 185/200 [13:27<00:45,  3.01s/it, [0;92mdata_loading=0.609, iteration=2.424, learning_rate=4.198, train_acc=51.44, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.463, train_macc=13.36, train_miou=9.046[0m)] 92%|#########2| 185/200 [13:30<00:45,  3.01s/it, [0;92mdata_loading=0.607, iteration=2.565, learning_rate=4.448, train_acc=51.47, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.47 , train_macc=13.35, train_miou=9.042[0m)] 93%|#########3| 186/200 [13:30<00:42,  3.06s/it, [0;92mdata_loading=0.607, iteration=2.565, learning_rate=4.448, train_acc=51.47, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.47 , train_macc=13.35, train_miou=9.042[0m)] 93%|#########3| 186/200 [13:37<00:42,  3.06s/it, [0;92mdata_loading=4.786, iteration=2.583, learning_rate=4.713, train_acc=51.47, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.480, train_macc=13.34, train_miou=9.028[0m)] 94%|#########3| 187/200 [13:37<00:56,  4.35s/it, [0;92mdata_loading=4.786, iteration=2.583, learning_rate=4.713, train_acc=51.47, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.480, train_macc=13.34, train_miou=9.028[0m)] 94%|#########3| 187/200 [13:40<00:56,  4.35s/it, [0;92mdata_loading=0.628, iteration=1.607, learning_rate=4.994, train_acc=51.45, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.486, train_macc=13.31, train_miou=9.017[0m)] 94%|#########3| 188/200 [13:40<00:44,  3.72s/it, [0;92mdata_loading=0.628, iteration=1.607, learning_rate=4.994, train_acc=51.45, train_loss_cross_entropy=1.847, train_loss_seg=1.847, train_loss_smooth=1.486, train_macc=13.31, train_miou=9.017[0m)] 94%|#########3| 188/200 [13:43<00:44,  3.72s/it, [0;92mdata_loading=0.628, iteration=2.289, learning_rate=5.292, train_acc=51.50, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.489, train_macc=13.30, train_miou=9.013[0m)] 94%|#########4| 189/200 [13:43<00:38,  3.48s/it, [0;92mdata_loading=0.628, iteration=2.289, learning_rate=5.292, train_acc=51.50, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.489, train_macc=13.30, train_miou=9.013[0m)] 94%|#########4| 189/200 [13:45<00:38,  3.48s/it, [0;92mdata_loading=0.429, iteration=2.401, learning_rate=5.607, train_acc=51.49, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.493, train_macc=13.32, train_miou=9.015[0m)] 95%|#########5| 190/200 [13:45<00:32,  3.28s/it, [0;92mdata_loading=0.429, iteration=2.401, learning_rate=5.607, train_acc=51.49, train_loss_cross_entropy=1.845, train_loss_seg=1.845, train_loss_smooth=1.493, train_macc=13.32, train_miou=9.015[0m)] 95%|#########5| 190/200 [13:49<00:32,  3.28s/it, [0;92mdata_loading=0.599, iteration=2.587, learning_rate=5.941, train_acc=51.51, train_loss_cross_entropy=1.844, train_loss_seg=1.844, train_loss_smooth=1.495, train_macc=13.34, train_miou=9.021[0m)] 96%|#########5| 191/200 [13:49<00:29,  3.25s/it, [0;92mdata_loading=0.599, iteration=2.587, learning_rate=5.941, train_acc=51.51, train_loss_cross_entropy=1.844, train_loss_seg=1.844, train_loss_smooth=1.495, train_macc=13.34, train_miou=9.021[0m)] 96%|#########5| 191/200 [13:52<00:29,  3.25s/it, [0;92mdata_loading=0.649, iteration=2.331, learning_rate=6.295, train_acc=51.56, train_loss_cross_entropy=1.841, train_loss_seg=1.841, train_loss_smooth=1.493, train_macc=13.34, train_miou=9.022[0m)] 96%|#########6| 192/200 [13:52<00:25,  3.17s/it, [0;92mdata_loading=0.649, iteration=2.331, learning_rate=6.295, train_acc=51.56, train_loss_cross_entropy=1.841, train_loss_seg=1.841, train_loss_smooth=1.493, train_macc=13.34, train_miou=9.022[0m)] 96%|#########6| 192/200 [13:55<00:25,  3.17s/it, [0;92mdata_loading=0.608, iteration=2.455, learning_rate=6.669, train_acc=51.60, train_loss_cross_entropy=1.841, train_loss_seg=1.841, train_loss_smooth=1.498, train_macc=13.35, train_miou=9.031[0m)] 96%|#########6| 193/200 [13:55<00:21,  3.14s/it, [0;92mdata_loading=0.608, iteration=2.455, learning_rate=6.669, train_acc=51.60, train_loss_cross_entropy=1.841, train_loss_seg=1.841, train_loss_smooth=1.498, train_macc=13.35, train_miou=9.031[0m)] 96%|#########6| 193/200 [13:58<00:21,  3.14s/it, [0;92mdata_loading=0.596, iteration=2.453, learning_rate=7.067, train_acc=51.49, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.525, train_macc=13.32, train_miou=9.016[0m)] 97%|#########7| 194/200 [13:58<00:18,  3.11s/it, [0;92mdata_loading=0.596, iteration=2.453, learning_rate=7.067, train_acc=51.49, train_loss_cross_entropy=1.846, train_loss_seg=1.846, train_loss_smooth=1.525, train_macc=13.32, train_miou=9.016[0m)] 97%|#########7| 194/200 [14:00<00:18,  3.11s/it, [0;92mdata_loading=0.598, iteration=1.558, learning_rate=7.488, train_acc=51.46, train_loss_cross_entropy=1.873, train_loss_seg=1.873, train_loss_smooth=1.641, train_macc=13.30, train_miou=9.000[0m)] 98%|#########7| 195/200 [14:00<00:14,  2.83s/it, [0;92mdata_loading=0.598, iteration=1.558, learning_rate=7.488, train_acc=51.46, train_loss_cross_entropy=1.873, train_loss_seg=1.873, train_loss_smooth=1.641, train_macc=13.30, train_miou=9.000[0m)] 98%|#########7| 195/200 [14:03<00:14,  2.83s/it, [0;92mdata_loading=1.305, iteration=2.309, learning_rate=7.934, train_acc=51.36, train_loss_cross_entropy=1.875, train_loss_seg=1.875, train_loss_smooth=1.652, train_macc=13.29, train_miou=8.982[0m)] 98%|#########8| 196/200 [14:03<00:12,  3.06s/it, [0;92mdata_loading=1.305, iteration=2.309, learning_rate=7.934, train_acc=51.36, train_loss_cross_entropy=1.875, train_loss_seg=1.875, train_loss_smooth=1.652, train_macc=13.29, train_miou=8.982[0m)] 98%|#########8| 196/200 [14:05<00:12,  3.06s/it, [0;92mdata_loading=0.191, iteration=1.735, learning_rate=8.406, train_acc=51.38, train_loss_cross_entropy=1.900, train_loss_seg=1.900, train_loss_smooth=1.757, train_macc=13.27, train_miou=8.967[0m)] 98%|#########8| 197/200 [14:05<00:08,  2.72s/it, [0;92mdata_loading=0.191, iteration=1.735, learning_rate=8.406, train_acc=51.38, train_loss_cross_entropy=1.900, train_loss_seg=1.900, train_loss_smooth=1.757, train_macc=13.27, train_miou=8.967[0m)] 98%|#########8| 197/200 [14:07<00:08,  2.72s/it, [0;92mdata_loading=0.011, iteration=1.814, learning_rate=8.907, train_acc=51.30, train_loss_cross_entropy=2.160, train_loss_seg=2.160, train_loss_smooth=2.809, train_macc=13.23, train_miou=8.930[0m)] 99%|#########9| 198/200 [14:07<00:04,  2.45s/it, [0;92mdata_loading=0.011, iteration=1.814, learning_rate=8.907, train_acc=51.30, train_loss_cross_entropy=2.160, train_loss_seg=2.160, train_loss_smooth=2.809, train_macc=13.23, train_miou=8.930[0m)] 99%|#########9| 198/200 [14:08<00:04,  2.45s/it, [0;92mdata_loading=0.005, iteration=1.331, learning_rate=9.437, train_acc=51.19, train_loss_cross_entropy=2.968, train_loss_seg=2.968, train_loss_smooth=6.070, train_macc=13.20, train_miou=8.899[0m)] 99%|#########9| 198/200 [14:08<00:08,  4.29s/it, [0;92mdata_loading=0.005, iteration=1.331, learning_rate=9.437, train_acc=51.19, train_loss_cross_entropy=2.968, train_loss_seg=2.968, train_loss_smooth=6.070, train_macc=13.20, train_miou=8.899[0m)][2022-11-20 19:45:48,122][torch_points3d.metrics.base_tracker][INFO] - ==================================================
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_loss_seg = 2.968209038727248
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_loss_cross_entropy = 2.968209038727248
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_acc = 51.19202643582407
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_macc = 13.201610929338287
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_miou = 8.899601519968755
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] -     train_miou_per_class = {0: '49.91', 1: '63.23', 2: '7.87', 3: '5.80', 4: '17.13', 5: '1.42', 6: '7.91', 7: '11.99', 8: '3.17', 9: '1.75', 10: '0.00', 11: '0.42', 12: '0.48', 13: '0.41', 14: '0.01', 15: '0.19', 16: '0.26', 17: '0.19', 18: '0.08', 19: '5.76'}
[2022-11-20 19:45:48,123][torch_points3d.metrics.base_tracker][INFO] - ==================================================

