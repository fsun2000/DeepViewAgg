[2022-10-18 14:18:58,741][torch_points3d.trainer][INFO] - DEVICE : cuda
wandb: W&B is a tool that helps track and visualize machine learning experiments
wandb: No credentials found.  Run "wandb login" to visualize your metrics
wandb: Tracking run with wandb version 0.8.36
wandb: Wandb version 0.13.4 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Run data is saved locally in wandb/run-20221018_121859-1dvcp624

self._cfg.training.checkpoint_dir:  
initialize train dataset
initialize val dataset
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
[2022-10-18 14:19:26,740][torch_points3d.applications.modelfactory][INFO] - The config will be used to build the model
backbone.down_modules.4.image.conv
backbone.down_modules.3.image.conv
backbone.down_modules.2.image.conv
backbone.down_modules.1.image.conv
backbone.down_modules.0.image.conv
backbone
head
[2022-10-18 14:19:28,170][torch_points3d.core.schedulers.bn_schedulers][INFO] - Setting batchnorm momentum at 0.02
[2022-10-18 14:19:35,116][torch_points3d.trainer][WARNING] - The model will not be able to be used from pretrained weights without the corresponding dataset. Current properties are {'feature_dimension': 1, 'num_classes': 20}
[2022-10-18 14:19:35,117][torch_points3d.trainer][INFO] - APIModel(
  (backbone): SparseConv3dUnet(
    (inner_modules): ModuleList(
      (0): Identity()
    )
    (down_modules): ModuleList(
      (0): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): UnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=v
          (conv): ADE20KResNet18Layer0(
            (conv): Sequential(
              (0): Sequential(
                (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                (1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (4): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
                (6): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                (7): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                (8): ReLU(inplace=True)
                (9): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
              )
            )
          )
          (atomic_pool): BimodalCSRPool()
          (view_pool): GroupBimodalCSRPool(
            num_groups=4
            use_mod=False
            group_scaling=True
            save_last=False
            (E_map): DeepSetFeat(
              pool=['max']
              fusion=concatenation
              use_num=True
              (mlp_elt_1): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=8, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_set): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=33, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_elt_2): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=64, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
            )
            (E_mod): Sequential(
              (0): Sequential(
                (0): Linear(in_features=128, out_features=32, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
              (1): Sequential(
                (0): Linear(in_features=32, out_features=32, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
            )
            (E_score): Linear(in_features=32, out_features=4, bias=True)
            (G): Gating(num_groups=4, weight=True, bias=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (1): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): UnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=v
          (conv): ADE20KResNet18Layer1(
            (conv): Sequential(
              (0): Sequential(
                (0): BasicBlock(
                  (conv1): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (downsample): Sequential(
                    (0): Conv2d(128, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  )
                )
                (1): BasicBlock(
                  (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn1): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): SynchronizedBatchNorm2d(64, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                )
              )
            )
          )
          (atomic_pool): BimodalCSRPool()
          (view_pool): GroupBimodalCSRPool(
            num_groups=4
            use_mod=False
            group_scaling=True
            save_last=False
            (E_map): DeepSetFeat(
              pool=['max']
              fusion=concatenation
              use_num=True
              (mlp_elt_1): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=8, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_set): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=33, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_elt_2): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=64, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
            )
            (E_mod): Sequential(
              (0): Sequential(
                (0): Linear(in_features=64, out_features=32, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
              (1): Sequential(
                (0): Linear(in_features=32, out_features=32, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
            )
            (E_score): Linear(in_features=32, out_features=4, bias=True)
            (G): Gating(num_groups=4, weight=True, bias=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (2): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): UnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=v
          (conv): ADE20KResNet18Layer2(
            (conv): Sequential(
              (0): Sequential(
                (0): BasicBlock(
                  (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
                  (bn1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (downsample): Sequential(
                    (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
                    (1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  )
                )
                (1): BasicBlock(
                  (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn1): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn2): SynchronizedBatchNorm2d(128, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                )
              )
            )
          )
          (atomic_pool): BimodalCSRPool()
          (view_pool): GroupBimodalCSRPool(
            num_groups=4
            use_mod=False
            group_scaling=True
            save_last=False
            (E_map): DeepSetFeat(
              pool=['max']
              fusion=concatenation
              use_num=True
              (mlp_elt_1): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=8, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_set): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=33, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_elt_2): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=64, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
            )
            (E_mod): Sequential(
              (0): Sequential(
                (0): Linear(in_features=128, out_features=64, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
              (1): Sequential(
                (0): Linear(in_features=64, out_features=64, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
            )
            (E_score): Linear(in_features=32, out_features=4, bias=True)
            (G): Gating(num_groups=4, weight=True, bias=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (3): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): UnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=v
          (conv): ADE20KResNet18Layer3(
            (conv): Sequential(
              (0): Sequential(
                (0): BasicBlock(
                  (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                  (bn1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                  (bn2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (downsample): Sequential(
                    (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  )
                )
                (1): BasicBlock(
                  (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                  (bn1): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                  (bn2): SynchronizedBatchNorm2d(256, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                )
              )
            )
          )
          (atomic_pool): BimodalCSRPool()
          (view_pool): GroupBimodalCSRPool(
            num_groups=4
            use_mod=False
            group_scaling=True
            save_last=False
            (E_map): DeepSetFeat(
              pool=['max']
              fusion=concatenation
              use_num=True
              (mlp_elt_1): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=8, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_set): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=33, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_elt_2): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=64, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
            )
            (E_mod): Sequential(
              (0): Sequential(
                (0): Linear(in_features=256, out_features=128, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
              (1): Sequential(
                (0): Linear(in_features=128, out_features=128, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
            )
            (E_score): Linear(in_features=32, out_features=4, bias=True)
            (G): Gating(num_groups=4, weight=True, bias=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (4): MultimodalBlockDown(
        (block_1): Identity()
        (block_2): Identity()
        (image): UnimodalBranch(
          drop_3d=None
          drop_mod=None
          keep_last_view=False
          checkpointing=v
          (conv): ADE20KResNet18Layer4(
            (conv): Sequential(
              (0): Sequential(
                (0): BasicBlock(
                  (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
                  (bn1): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                  (bn2): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (downsample): Sequential(
                    (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                    (1): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  )
                )
                (1): BasicBlock(
                  (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                  (bn1): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                  (relu): ReLU(inplace=True)
                  (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
                  (bn2): SynchronizedBatchNorm2d(512, eps=1e-05, momentum=0.001, affine=True, track_running_stats=True)
                )
              )
            )
          )
          (atomic_pool): BimodalCSRPool()
          (view_pool): GroupBimodalCSRPool(
            num_groups=4
            use_mod=False
            group_scaling=True
            save_last=False
            (E_map): DeepSetFeat(
              pool=['max']
              fusion=concatenation
              use_num=True
              (mlp_elt_1): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=8, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_set): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=33, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
              (mlp_elt_2): Sequential(
                (0): Sequential(
                  (0): Linear(in_features=64, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
                (1): Sequential(
                  (0): Linear(in_features=32, out_features=32, bias=False)
                  (1): FastBatchNorm1d(
                    (batch_norm): BatchNorm1d(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                  )
                  (2): LeakyReLU(negative_slope=0.2, inplace=True)
                )
              )
            )
            (E_mod): Sequential(
              (0): Sequential(
                (0): Linear(in_features=512, out_features=256, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
              (1): Sequential(
                (0): Linear(in_features=256, out_features=256, bias=False)
                (1): FastBatchNorm1d(
                  (batch_norm): BatchNorm1d(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                )
                (2): LeakyReLU(negative_slope=0.2, inplace=True)
              )
            )
            (E_score): Linear(in_features=32, out_features=4, bias=True)
            (G): Gating(num_groups=4, weight=True, bias=True)
          )
          (fusion): BimodalFusion(mode=concatenation)
        )
      )
      (5): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=513, out_channels=128, kernel_size=3, stride=1, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (6): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=32, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=32, out_channels=32, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (7): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=32, out_channels=32, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(32, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=32, out_channels=64, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=64, out_channels=64, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (8): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=64, out_channels=64, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(64, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=64, out_channels=128, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
      (9): MultimodalBlockDown(
        (block_1): ResNetDown(
          (conv_in): Seq(
            (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
            (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            (2): ReLU(inplace=True)
          )
          (blocks): Seq(
            (0): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
              (downsample): Seq(
                (0): Conv3d(in_channels=128, out_channels=256, kernel_size=1, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              )
            )
            (1): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (2): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (3): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (4): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
            (5): ResBlock(
              (block): Seq(
                (0): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (2): ReLU(inplace=True)
                (3): Conv3d(in_channels=256, out_channels=256, kernel_size=3, stride=1, dilation=1)
                (4): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
                (5): ReLU(inplace=True)
              )
            )
          )
        )
        (block_2): Identity()
        (image): IdentityBranch()
      )
    )
    (up_modules): ModuleList(
      (0): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=256, out_channels=256, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(256, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=384, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (1): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=128, out_channels=128, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=192, out_channels=128, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (2): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=128, out_channels=128, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(128, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=160, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (3): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=2, stride=2, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=224, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
            (downsample): Seq(
              (0): Conv3d(in_channels=224, out_channels=96, kernel_size=1, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
            )
          )
        )
      )
      (4): ResNetUp(
        (conv_in): Seq(
          (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
          (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
          (2): ReLU(inplace=True)
        )
        (blocks): Seq(
          (0): ResBlock(
            (block): Seq(
              (0): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (1): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (2): ReLU(inplace=True)
              (3): Conv3d(in_channels=96, out_channels=96, kernel_size=3, stride=1, dilation=1)
              (4): BatchNorm(96, eps=1e-05, momentum=0.02, affine=True, track_running_stats=True)
              (5): ReLU(inplace=True)
            )
          )
        )
      )
    )
  )
  (head): Sequential(
    (0): Linear(in_features=96, out_features=20, bias=True)
  )
)
[2022-10-18 14:19:35,127][torch_points3d.utils.colors][INFO] - [0;32mOptimizer: SGD (
Parameter Group 0
    dampening: 0.1
    foreach: None
    initial_lr: 0.1
    lr: 0.1
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 1
    dampening: 0.1
    foreach: None
    initial_lr: 0.1
    lr: 0.1
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 2
    dampening: 0.1
    foreach: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 3
    dampening: 0.1
    foreach: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 4
    dampening: 0.1
    foreach: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 5
    dampening: 0.1
    foreach: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001

Parameter Group 6
    dampening: 0.1
    foreach: None
    initial_lr: 0.001
    lr: 0.001
    maximize: False
    momentum: 0.9
    nesterov: False
    weight_decay: 0.0001
)[0m
[2022-10-18 14:19:35,127][torch_points3d.utils.colors][INFO] - [0;32mLearning Rate Scheduler: ExponentialLR({'gamma': 0.9885}, update_scheduler_on=on_epoch)[0m
[2022-10-18 14:19:35,127][torch_points3d.utils.colors][INFO] - [0;32mBatchNorm Scheduler: BNMomentumScheduler(base_momentum: 0.02, update_scheduler_on=on_epoch)[0m
[2022-10-18 14:19:35,127][torch_points3d.utils.colors][INFO] - [0;32mAccumulated gradients: None[0m
[2022-10-18 14:19:35,129][torch_points3d.trainer][INFO] - Model size = 44322864
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
[2022-10-18 14:19:35,130][torch_points3d.trainer][INFO] - Dataset: ScannetDatasetMM 
[0;95mtrain_pre_batch_collate_transform [0m= None
[0;95mval_pre_batch_collate_transform [0m= None
[0;95mtest_pre_batch_collate_transform [0m= None
[0;95mpre_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
])
[0;95mtest_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['z']),
    AddFeatsByKeys(pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mtrain_transform [0m= Compose([
    ElasticDistortion(apply_distorsion=True, granularity=[0.2, 0.8], magnitude=[0.4, 1.6]),
    Random3AxisRotation(apply_rotation=True, rot_x=8, rot_y=8, rot_z=180),
    Random symmetry of axes: x=True, y=True, z=False,
    RandomScaleAnisotropic([0.9, 1.1]),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['z']),
    AddFeatsByKeys(pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mval_transform [0m= Compose([
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['z']),
    AddFeatsByKeys(pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95minference_transform [0m= Compose([
    SaveOriginalPosId,
    PCAComputePointwise(num_neighbors=50, r=None, use_full_pos=False, use_cuda=False, use_faiss=False, ncells=None, nprobes=10, chunk_size=1000000),
    EigenFeatures(norm=True, linearity=True, planarity=True, scattering=True, temperature=None),
    RemoveAttributes(attr_names=['eigenvalues', 'eigenvectors'], strict=False),
    GridSampling3D(grid_size=0.03, quantize_coords=True, mode=last),
    XYZFeature(axis=['z']),
    AddFeatsByKeys(pos_z=True, rgb=False, linearity=False, norm=False, planarity=False, scattering=False),
])
[0;95mpre_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
])
[0;95mtest_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=1920000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95mtrain_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=1920000, use_coverage=True, k_coverage=2),
    JitterMappingFeatures(sigma=0.02, clip=0.03),
    ColorJitter(brightness=[0.4, 1.6], contrast=[0.4, 1.6], saturation=[0.30000000000000004, 1.7], hue=None),
    RandomHorizontalFlip(p=0.5),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95mval_transform_image [0m= ComposeMultiModal([
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=1920000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
[0;95minference_transform_image [0m= ComposeMultiModal([
    LoadImages(ref_size=[320, 240], crop_size=None, crop_offsets=None, downscale=None, show_progress=False),
    NonStaticMask(ref_size=(320, 240), proj_upscale=1, n_sample=5),
    MapImages(key=mapping_index, verbose=False, cylinder=False, ref_size=[320, 240], proj_upscale=1, method=SplattingVisibility, use_cuda=False, kwargs={'voxel': 0.03, 'r_max': 8, 'r_min': 0.05, 'exact': True, 'camera': 'scannet'}),
    NeighborhoodBasedMappingFeatures(k_list=[50], voxel=0.01, compute_density=True, compute_occlusion=True, use_faiss=False, use_cuda=False, ncells=None, nprobes=10, verbose=True),
    SelectMappingFromPointId(key=mapping_index),
    ToImageData(),
    PickImagesFromMemoryCredit(credit=1920000, use_coverage=True, k_coverage=2),
    ToFloatImage(),
    Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])
Size of [0;95mtrain_dataset [0m= 1201
Size of [0;95mtest_dataset [0m= 0
Size of [0;95mval_dataset [0m= 312
[0;95mBatch size =[0m 2
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
[2022-10-18 14:19:37,822][torch_points3d.datasets.base_dataset][INFO] - Available stage selection datasets: [0;95m ['val'] [0m
[2022-10-18 14:19:37,822][torch_points3d.datasets.base_dataset][INFO] - The models will be selected using the metrics on following dataset: [0;95m val [0m
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
[2022-10-18 14:19:42,196][torch_points3d.trainer][INFO] - EPOCH 1 / 300
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
  0% 0/601 [00:00<?, ?it/s]  0% 0/601 [00:29<?, ?it/s, [0;92mdata_loading=12.90, iteration=16.25, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 1/601 [00:29<4:51:36, 29.16s/it, [0;92mdata_loading=12.90, iteration=16.25, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 1/601 [00:30<4:51:36, 29.16s/it, [0;92mdata_loading=0.000, iteration=1.157, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 2/601 [00:30<2:06:40, 12.69s/it, [0;92mdata_loading=0.000, iteration=1.157, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 2/601 [00:31<2:06:40, 12.69s/it, [0;92mdata_loading=0.107, iteration=1.559, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 3/601 [00:31<1:16:18,  7.66s/it, [0;92mdata_loading=0.107, iteration=1.559, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  0% 3/601 [00:33<1:16:18,  7.66s/it, [0;92mdata_loading=0.000, iteration=1.590, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 4/601 [00:33<52:21,  5.26s/it, [0;92mdata_loading=0.000, iteration=1.590, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]    1% 4/601 [00:35<52:21,  5.26s/it, [0;92mdata_loading=0.000, iteration=1.430, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 5/601 [00:35<38:32,  3.88s/it, [0;92mdata_loading=0.000, iteration=1.430, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 5/601 [00:36<38:32,  3.88s/it, [0;92mdata_loading=0.080, iteration=1.749, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 6/601 [00:36<31:34,  3.18s/it, [0;92mdata_loading=0.080, iteration=1.749, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 6/601 [00:38<31:34,  3.18s/it, [0;92mdata_loading=0.000, iteration=1.299, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 7/601 [00:38<25:25,  2.57s/it, [0;92mdata_loading=0.000, iteration=1.299, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 7/601 [00:39<25:25,  2.57s/it, [0;92mdata_loading=0.021, iteration=1.452, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 8/601 [00:39<21:56,  2.22s/it, [0;92mdata_loading=0.021, iteration=1.452, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 8/601 [00:41<21:56,  2.22s/it, [0;92mdata_loading=0.000, iteration=1.783, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 9/601 [00:41<20:33,  2.08s/it, [0;92mdata_loading=0.000, iteration=1.783, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  1% 9/601 [00:42<20:33,  2.08s/it, [0;92mdata_loading=0.000, iteration=1.578, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  2% 10/601 [00:42<18:59,  1.93s/it, [0;92mdata_loading=0.000, iteration=1.578, train_acc=8.103, train_loss_cross_entropy=2.980, train_loss_seg=2.980, train_macc=9.654, train_miou=1.577[0m)]  2% 10/601 [00:44<18:59,  1.93s/it, [0;92mdata_loading=0.021, iteration=1.408, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 11/601 [00:44<17:27,  1.78s/it, [0;92mdata_loading=0.021, iteration=1.408, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 11/601 [00:46<17:27,  1.78s/it, [0;92mdata_loading=0.000, iteration=1.810, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 12/601 [00:46<17:32,  1.79s/it, [0;92mdata_loading=0.000, iteration=1.810, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 12/601 [00:47<17:32,  1.79s/it, [0;92mdata_loading=0.019, iteration=1.673, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 13/601 [00:47<17:13,  1.76s/it, [0;92mdata_loading=0.019, iteration=1.673, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 13/601 [00:49<17:13,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.272, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 14/601 [00:49<15:46,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.272, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 14/601 [00:50<15:46,  1.61s/it, [0;92mdata_loading=0.049, iteration=1.702, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 15/601 [00:50<16:09,  1.65s/it, [0;92mdata_loading=0.049, iteration=1.702, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  2% 15/601 [00:52<16:09,  1.65s/it, [0;92mdata_loading=0.082, iteration=1.966, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 16/601 [00:52<17:17,  1.77s/it, [0;92mdata_loading=0.082, iteration=1.966, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 16/601 [00:54<17:17,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.824, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 17/601 [00:54<17:24,  1.79s/it, [0;92mdata_loading=0.000, iteration=1.824, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 17/601 [00:56<17:24,  1.79s/it, [0;92mdata_loading=0.000, iteration=1.845, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 18/601 [00:56<17:33,  1.81s/it, [0;92mdata_loading=0.000, iteration=1.845, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 18/601 [00:57<17:33,  1.81s/it, [0;92mdata_loading=0.000, iteration=1.324, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 19/601 [00:57<16:07,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.324, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 19/601 [00:59<16:07,  1.66s/it, [0;92mdata_loading=0.010, iteration=1.725, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 20/601 [00:59<16:18,  1.68s/it, [0;92mdata_loading=0.010, iteration=1.725, train_acc=31.73, train_loss_cross_entropy=2.294, train_loss_seg=2.294, train_macc=14.55, train_miou=4.419[0m)]  3% 20/601 [01:01<16:18,  1.68s/it, [0;92mdata_loading=0.092, iteration=1.558, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  3% 21/601 [01:01<16:10,  1.67s/it, [0;92mdata_loading=0.092, iteration=1.558, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  3% 21/601 [01:02<16:10,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.355, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 22/601 [01:02<15:14,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.355, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 22/601 [01:03<15:14,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.067, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 23/601 [01:03<13:43,  1.43s/it, [0;92mdata_loading=0.000, iteration=1.067, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 23/601 [01:05<13:43,  1.43s/it, [0;92mdata_loading=0.000, iteration=1.510, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 24/601 [01:05<13:57,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.510, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 24/601 [01:06<13:57,  1.45s/it, [0;92mdata_loading=0.011, iteration=1.536, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 25/601 [01:06<14:12,  1.48s/it, [0;92mdata_loading=0.011, iteration=1.536, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 25/601 [01:08<14:12,  1.48s/it, [0;92mdata_loading=0.030, iteration=1.447, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 26/601 [01:08<14:10,  1.48s/it, [0;92mdata_loading=0.030, iteration=1.447, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 26/601 [01:09<14:10,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.617, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 27/601 [01:09<14:33,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.617, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  4% 27/601 [01:11<14:33,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.657, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 28/601 [01:11<14:55,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.657, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 28/601 [01:13<14:55,  1.56s/it, [0;92mdata_loading=0.007, iteration=1.770, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 29/601 [01:13<15:30,  1.63s/it, [0;92mdata_loading=0.007, iteration=1.770, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 29/601 [01:14<15:30,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.426, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 30/601 [01:14<14:56,  1.57s/it, [0;92mdata_loading=0.010, iteration=1.426, train_acc=41.63, train_loss_cross_entropy=2.027, train_loss_seg=2.027, train_macc=16.15, train_miou=5.464[0m)]  5% 30/601 [01:17<14:56,  1.57s/it, [0;92mdata_loading=0.089, iteration=2.104, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 31/601 [01:17<16:41,  1.76s/it, [0;92mdata_loading=0.089, iteration=2.104, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 31/601 [01:18<16:41,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.759, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 32/601 [01:18<16:40,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.759, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 32/601 [01:19<16:40,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.214, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 33/601 [01:19<15:06,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.214, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  5% 33/601 [01:21<15:06,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.711, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 34/601 [01:21<15:24,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.711, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 34/601 [01:23<15:24,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.671, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 35/601 [01:23<15:29,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.671, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 35/601 [01:25<15:29,  1.64s/it, [0;92mdata_loading=0.106, iteration=1.637, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 36/601 [01:25<15:45,  1.67s/it, [0;92mdata_loading=0.106, iteration=1.637, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 36/601 [01:26<15:45,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.601, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 37/601 [01:26<15:31,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.601, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 37/601 [01:28<15:31,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.538, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 38/601 [01:28<15:11,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.538, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 38/601 [01:29<15:11,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.458, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 39/601 [01:29<14:42,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.458, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  6% 39/601 [01:31<14:42,  1.57s/it, [0;92mdata_loading=0.010, iteration=1.547, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  7% 40/601 [01:31<14:39,  1.57s/it, [0;92mdata_loading=0.010, iteration=1.547, train_acc=47.24, train_loss_cross_entropy=1.926, train_loss_seg=1.926, train_macc=14.73, train_miou=6.643[0m)]  7% 40/601 [01:33<14:39,  1.57s/it, [0;92mdata_loading=0.079, iteration=1.677, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 41/601 [01:33<15:09,  1.62s/it, [0;92mdata_loading=0.079, iteration=1.677, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 41/601 [01:34<15:09,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.499, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 42/601 [01:34<14:46,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.499, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 42/601 [01:36<14:46,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.568, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 43/601 [01:36<14:42,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.568, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 43/601 [01:37<14:42,  1.58s/it, [0;92mdata_loading=0.007, iteration=1.510, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 44/601 [01:37<14:30,  1.56s/it, [0;92mdata_loading=0.007, iteration=1.510, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 44/601 [01:39<14:30,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.510, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 45/601 [01:39<14:21,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.510, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  7% 45/601 [01:41<14:21,  1.55s/it, [0;92mdata_loading=0.078, iteration=2.111, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 46/601 [01:41<16:06,  1.74s/it, [0;92mdata_loading=0.078, iteration=2.111, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 46/601 [01:42<16:06,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.480, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 47/601 [01:42<15:21,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.480, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 47/601 [01:44<15:21,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.778, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 48/601 [01:44<15:39,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.778, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 48/601 [01:45<15:39,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.193, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 49/601 [01:45<14:14,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.193, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 49/601 [01:47<14:14,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.552, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 50/601 [01:47<14:15,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.552, train_acc=48.33, train_loss_cross_entropy=1.894, train_loss_seg=1.894, train_macc=14.58, train_miou=7.116[0m)]  8% 50/601 [01:48<14:15,  1.55s/it, [0;92mdata_loading=0.078, iteration=1.398, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  8% 51/601 [01:48<14:01,  1.53s/it, [0;92mdata_loading=0.078, iteration=1.398, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  8% 51/601 [01:50<14:01,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.544, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 52/601 [01:50<14:02,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.544, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 52/601 [01:52<14:02,  1.53s/it, [0;92mdata_loading=0.020, iteration=1.764, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 53/601 [01:52<14:42,  1.61s/it, [0;92mdata_loading=0.020, iteration=1.764, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 53/601 [01:53<14:42,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.134, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 54/601 [01:53<13:22,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.134, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 54/601 [01:54<13:22,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.225, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 55/601 [01:54<12:41,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.225, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 55/601 [01:56<12:41,  1.40s/it, [0;92mdata_loading=0.019, iteration=1.681, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 56/601 [01:56<13:30,  1.49s/it, [0;92mdata_loading=0.019, iteration=1.681, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 56/601 [01:57<13:30,  1.49s/it, [0;92mdata_loading=0.001, iteration=1.363, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 57/601 [01:57<13:08,  1.45s/it, [0;92mdata_loading=0.001, iteration=1.363, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)]  9% 57/601 [01:59<13:08,  1.45s/it, [0;92mdata_loading=0.018, iteration=1.641, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 58/601 [01:59<13:41,  1.51s/it, [0;92mdata_loading=0.018, iteration=1.641, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 58/601 [02:00<13:41,  1.51s/it, [0;92mdata_loading=0.011, iteration=1.501, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 59/601 [02:00<13:40,  1.51s/it, [0;92mdata_loading=0.011, iteration=1.501, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 59/601 [02:02<13:40,  1.51s/it, [0;92mdata_loading=0.011, iteration=1.413, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 60/601 [02:02<13:24,  1.49s/it, [0;92mdata_loading=0.011, iteration=1.413, train_acc=50.72, train_loss_cross_entropy=1.780, train_loss_seg=1.780, train_macc=13.35, train_miou=7.450[0m)] 10% 60/601 [02:03<13:24,  1.49s/it, [0;92mdata_loading=0.011, iteration=1.371, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 61/601 [02:03<13:05,  1.46s/it, [0;92mdata_loading=0.011, iteration=1.371, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 61/601 [02:05<13:05,  1.46s/it, [0;92mdata_loading=0.031, iteration=1.792, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 62/601 [02:05<14:04,  1.57s/it, [0;92mdata_loading=0.031, iteration=1.792, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 62/601 [02:07<14:04,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.606, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 63/601 [02:07<14:09,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.606, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 10% 63/601 [02:08<14:09,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.454, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 64/601 [02:08<13:47,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.454, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 64/601 [02:09<13:47,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.383, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 65/601 [02:09<13:22,  1.50s/it, [0;92mdata_loading=0.010, iteration=1.383, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 65/601 [02:11<13:22,  1.50s/it, [0;92mdata_loading=0.010, iteration=1.886, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 66/601 [02:11<14:25,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.886, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 66/601 [02:13<14:25,  1.62s/it, [0;92mdata_loading=0.096, iteration=1.699, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 67/601 [02:13<14:52,  1.67s/it, [0;92mdata_loading=0.096, iteration=1.699, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 67/601 [02:14<14:52,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.348, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 68/601 [02:14<13:59,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.348, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 68/601 [02:16<13:59,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.303, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 69/601 [02:16<13:14,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.303, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 11% 69/601 [02:17<13:14,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.237, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 12% 70/601 [02:17<12:32,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.237, train_acc=52.21, train_loss_cross_entropy=1.712, train_loss_seg=1.712, train_macc=12.71, train_miou=8.080[0m)] 12% 70/601 [02:19<12:32,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.760, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 71/601 [02:19<13:25,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.760, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 71/601 [02:20<13:25,  1.52s/it, [0;92mdata_loading=0.139, iteration=1.257, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 72/601 [02:20<13:04,  1.48s/it, [0;92mdata_loading=0.139, iteration=1.257, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 72/601 [02:22<13:04,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.408, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 73/601 [02:22<12:51,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.408, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 73/601 [02:23<12:51,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.742, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 74/601 [02:23<13:34,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.742, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 74/601 [02:25<13:34,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.396, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 75/601 [02:25<13:09,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.396, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 12% 75/601 [02:26<13:09,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.407, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 76/601 [02:26<12:53,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.407, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 76/601 [02:28<12:53,  1.47s/it, [0;92mdata_loading=0.072, iteration=1.447, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 77/601 [02:28<12:59,  1.49s/it, [0;92mdata_loading=0.072, iteration=1.447, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 77/601 [02:29<12:59,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.357, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 78/601 [02:29<12:37,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.357, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 78/601 [02:31<12:37,  1.45s/it, [0;92mdata_loading=0.010, iteration=1.732, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 79/601 [02:31<13:22,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.732, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 79/601 [02:32<13:22,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.070, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 80/601 [02:32<12:07,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.070, train_acc=55.30, train_loss_cross_entropy=1.622, train_loss_seg=1.622, train_macc=13.06, train_miou=8.498[0m)] 13% 80/601 [02:33<12:07,  1.40s/it, [0;92mdata_loading=0.017, iteration=1.570, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 13% 81/601 [02:33<12:36,  1.45s/it, [0;92mdata_loading=0.017, iteration=1.570, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 13% 81/601 [02:35<12:36,  1.45s/it, [0;92mdata_loading=0.072, iteration=1.273, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 82/601 [02:35<12:17,  1.42s/it, [0;92mdata_loading=0.072, iteration=1.273, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 82/601 [02:36<12:17,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.285, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 83/601 [02:36<11:55,  1.38s/it, [0;92mdata_loading=0.000, iteration=1.285, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 83/601 [02:37<11:55,  1.38s/it, [0;92mdata_loading=0.010, iteration=1.202, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 84/601 [02:37<11:27,  1.33s/it, [0;92mdata_loading=0.010, iteration=1.202, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 84/601 [02:39<11:27,  1.33s/it, [0;92mdata_loading=0.000, iteration=1.403, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 85/601 [02:39<11:37,  1.35s/it, [0;92mdata_loading=0.000, iteration=1.403, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 85/601 [02:40<11:37,  1.35s/it, [0;92mdata_loading=0.010, iteration=1.217, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 86/601 [02:40<11:17,  1.32s/it, [0;92mdata_loading=0.010, iteration=1.217, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 86/601 [02:41<11:17,  1.32s/it, [0;92mdata_loading=0.066, iteration=1.305, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 87/601 [02:41<11:24,  1.33s/it, [0;92mdata_loading=0.066, iteration=1.305, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 14% 87/601 [02:43<11:24,  1.33s/it, [0;92mdata_loading=0.000, iteration=1.832, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 88/601 [02:43<12:40,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.832, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 88/601 [02:44<12:40,  1.48s/it, [0;92mdata_loading=0.011, iteration=1.412, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 89/601 [02:44<12:30,  1.47s/it, [0;92mdata_loading=0.011, iteration=1.412, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 89/601 [02:46<12:30,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.172, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 90/601 [02:46<11:43,  1.38s/it, [0;92mdata_loading=0.000, iteration=1.172, train_acc=55.52, train_loss_cross_entropy=1.628, train_loss_seg=1.628, train_macc=13.47, train_miou=8.655[0m)] 15% 90/601 [02:47<11:43,  1.38s/it, [0;92mdata_loading=0.014, iteration=1.650, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 91/601 [02:47<12:26,  1.46s/it, [0;92mdata_loading=0.014, iteration=1.650, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 91/601 [02:49<12:26,  1.46s/it, [0;92mdata_loading=0.023, iteration=1.401, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 92/601 [02:49<12:19,  1.45s/it, [0;92mdata_loading=0.023, iteration=1.401, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 92/601 [02:50<12:19,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.548, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 93/601 [02:50<12:32,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.548, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 15% 93/601 [02:52<12:32,  1.48s/it, [0;92mdata_loading=0.011, iteration=1.351, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 94/601 [02:52<12:12,  1.45s/it, [0;92mdata_loading=0.011, iteration=1.351, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 94/601 [02:53<12:12,  1.45s/it, [0;92mdata_loading=0.008, iteration=1.460, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 95/601 [02:53<12:15,  1.45s/it, [0;92mdata_loading=0.008, iteration=1.460, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 95/601 [02:55<12:15,  1.45s/it, [0;92mdata_loading=0.008, iteration=1.715, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 96/601 [02:55<12:54,  1.53s/it, [0;92mdata_loading=0.008, iteration=1.715, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 96/601 [02:56<12:54,  1.53s/it, [0;92mdata_loading=0.021, iteration=1.267, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 97/601 [02:56<12:16,  1.46s/it, [0;92mdata_loading=0.021, iteration=1.267, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 97/601 [02:58<12:16,  1.46s/it, [0;92mdata_loading=0.000, iteration=2.046, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 98/601 [02:58<13:43,  1.64s/it, [0;92mdata_loading=0.000, iteration=2.046, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 98/601 [03:00<13:43,  1.64s/it, [0;92mdata_loading=0.016, iteration=1.638, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 99/601 [03:00<13:44,  1.64s/it, [0;92mdata_loading=0.016, iteration=1.638, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 16% 99/601 [03:01<13:44,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.378, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 17% 100/601 [03:01<13:03,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.378, train_acc=55.83, train_loss_cross_entropy=1.613, train_loss_seg=1.613, train_macc=13.71, train_miou=8.949[0m)] 17% 100/601 [03:03<13:03,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.628, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 101/601 [03:03<13:13,  1.59s/it, [0;92mdata_loading=0.010, iteration=1.628, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 101/601 [03:04<13:13,  1.59s/it, [0;92mdata_loading=0.016, iteration=1.500, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 102/601 [03:04<13:01,  1.57s/it, [0;92mdata_loading=0.016, iteration=1.500, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 102/601 [03:05<13:01,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.016, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 103/601 [03:05<11:37,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.016, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 103/601 [03:07<11:37,  1.40s/it, [0;92mdata_loading=0.010, iteration=1.221, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 104/601 [03:07<11:11,  1.35s/it, [0;92mdata_loading=0.010, iteration=1.221, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 104/601 [03:08<11:11,  1.35s/it, [0;92mdata_loading=0.011, iteration=1.732, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 105/601 [03:08<12:08,  1.47s/it, [0;92mdata_loading=0.011, iteration=1.732, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 17% 105/601 [03:10<12:08,  1.47s/it, [0;92mdata_loading=0.010, iteration=1.322, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 106/601 [03:10<11:46,  1.43s/it, [0;92mdata_loading=0.010, iteration=1.322, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 106/601 [03:11<11:46,  1.43s/it, [0;92mdata_loading=0.025, iteration=1.219, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 107/601 [03:11<11:18,  1.37s/it, [0;92mdata_loading=0.025, iteration=1.219, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 107/601 [03:13<11:18,  1.37s/it, [0;92mdata_loading=0.000, iteration=1.611, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 108/601 [03:13<11:52,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.611, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 108/601 [03:14<11:52,  1.45s/it, [0;92mdata_loading=0.010, iteration=1.457, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 109/601 [03:14<11:54,  1.45s/it, [0;92mdata_loading=0.010, iteration=1.457, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 109/601 [03:16<11:54,  1.45s/it, [0;92mdata_loading=0.015, iteration=1.531, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 110/601 [03:16<12:07,  1.48s/it, [0;92mdata_loading=0.015, iteration=1.531, train_acc=56.20, train_loss_cross_entropy=1.587, train_loss_seg=1.587, train_macc=13.92, train_miou=9.101[0m)] 18% 110/601 [03:17<12:07,  1.48s/it, [0;92mdata_loading=0.018, iteration=1.492, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 18% 111/601 [03:17<12:09,  1.49s/it, [0;92mdata_loading=0.018, iteration=1.492, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 18% 111/601 [03:19<12:09,  1.49s/it, [0;92mdata_loading=0.02 , iteration=1.802, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 112/601 [03:19<12:57,  1.59s/it, [0;92mdata_loading=0.02 , iteration=1.802, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 112/601 [03:20<12:57,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.179, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 113/601 [03:20<11:55,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.179, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 113/601 [03:22<11:55,  1.47s/it, [0;92mdata_loading=0.019, iteration=2.017, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 114/601 [03:22<13:17,  1.64s/it, [0;92mdata_loading=0.019, iteration=2.017, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 114/601 [03:23<13:17,  1.64s/it, [0;92mdata_loading=0.000, iteration=0.928, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 115/601 [03:23<11:32,  1.43s/it, [0;92mdata_loading=0.000, iteration=0.928, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 115/601 [03:25<11:32,  1.43s/it, [0;92mdata_loading=0.142, iteration=2.148, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 116/601 [03:25<13:37,  1.69s/it, [0;92mdata_loading=0.142, iteration=2.148, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 116/601 [03:27<13:37,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.393, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 117/601 [03:27<12:53,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.393, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 19% 117/601 [03:28<12:53,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.356, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 118/601 [03:28<12:16,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.356, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 118/601 [03:29<12:16,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.401, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 119/601 [03:29<11:57,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.401, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 119/601 [03:31<11:57,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.749, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 120/601 [03:31<12:33,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.749, train_acc=56.25, train_loss_cross_entropy=1.597, train_loss_seg=1.597, train_macc=14.76, train_miou=9.668[0m)] 20% 120/601 [03:33<12:33,  1.57s/it, [0;92mdata_loading=0.018, iteration=1.767, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 121/601 [03:33<13:03,  1.63s/it, [0;92mdata_loading=0.018, iteration=1.767, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 121/601 [03:35<13:03,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.681, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 122/601 [03:35<13:09,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.681, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 122/601 [03:36<13:09,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.548, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 123/601 [03:36<12:53,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.548, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 20% 123/601 [03:38<12:53,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.647, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 124/601 [03:38<12:57,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.647, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 124/601 [03:40<12:57,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.752, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 125/601 [03:40<13:15,  1.67s/it, [0;92mdata_loading=0.010, iteration=1.752, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 125/601 [03:41<13:15,  1.67s/it, [0;92mdata_loading=0.007, iteration=1.829, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 126/601 [03:41<13:37,  1.72s/it, [0;92mdata_loading=0.007, iteration=1.829, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 126/601 [03:43<13:37,  1.72s/it, [0;92mdata_loading=0.010, iteration=1.559, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 127/601 [03:43<13:14,  1.68s/it, [0;92mdata_loading=0.010, iteration=1.559, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 127/601 [03:45<13:14,  1.68s/it, [0;92mdata_loading=0.011, iteration=1.515, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 128/601 [03:45<12:51,  1.63s/it, [0;92mdata_loading=0.011, iteration=1.515, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 128/601 [03:46<12:51,  1.63s/it, [0;92mdata_loading=0.008, iteration=1.541, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 129/601 [03:46<12:38,  1.61s/it, [0;92mdata_loading=0.008, iteration=1.541, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 21% 129/601 [03:47<12:38,  1.61s/it, [0;92mdata_loading=0.011, iteration=0.981, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 22% 130/601 [03:47<11:09,  1.42s/it, [0;92mdata_loading=0.011, iteration=0.981, train_acc=57.21, train_loss_cross_entropy=1.573, train_loss_seg=1.573, train_macc=14.70, train_miou=10.24[0m)] 22% 130/601 [03:49<11:09,  1.42s/it, [0;92mdata_loading=0.012, iteration=1.713, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 131/601 [03:49<11:51,  1.51s/it, [0;92mdata_loading=0.012, iteration=1.713, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 131/601 [03:51<11:51,  1.51s/it, [0;92mdata_loading=0.013, iteration=2.096, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 132/601 [03:51<13:13,  1.69s/it, [0;92mdata_loading=0.013, iteration=2.096, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 132/601 [03:52<13:13,  1.69s/it, [0;92mdata_loading=0.008, iteration=1.147, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 133/601 [03:52<11:56,  1.53s/it, [0;92mdata_loading=0.008, iteration=1.147, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 133/601 [03:54<11:56,  1.53s/it, [0;92mdata_loading=0.011, iteration=1.680, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 134/601 [03:54<12:17,  1.58s/it, [0;92mdata_loading=0.011, iteration=1.680, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 134/601 [03:55<12:17,  1.58s/it, [0;92mdata_loading=0.010, iteration=1.472, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 135/601 [03:55<12:02,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.472, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 22% 135/601 [03:57<12:02,  1.55s/it, [0;92mdata_loading=0.007, iteration=1.835, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 136/601 [03:57<12:41,  1.64s/it, [0;92mdata_loading=0.007, iteration=1.835, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 136/601 [03:59<12:41,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.514, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 137/601 [03:59<12:24,  1.61s/it, [0;92mdata_loading=0.011, iteration=1.514, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 137/601 [04:00<12:24,  1.61s/it, [0;92mdata_loading=0.010, iteration=1.047, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 138/601 [04:00<11:07,  1.44s/it, [0;92mdata_loading=0.010, iteration=1.047, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 138/601 [04:02<11:07,  1.44s/it, [0;92mdata_loading=0.011, iteration=2.08 , train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 139/601 [04:02<12:35,  1.64s/it, [0;92mdata_loading=0.011, iteration=2.08 , train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 139/601 [04:03<12:35,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.145, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 140/601 [04:03<11:28,  1.49s/it, [0;92mdata_loading=0.011, iteration=1.145, train_acc=56.85, train_loss_cross_entropy=1.572, train_loss_seg=1.572, train_macc=14.97, train_miou=10.40[0m)] 23% 140/601 [04:04<11:28,  1.49s/it, [0;92mdata_loading=0.010, iteration=1.471, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 23% 141/601 [04:04<11:25,  1.49s/it, [0;92mdata_loading=0.010, iteration=1.471, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 23% 141/601 [04:06<11:25,  1.49s/it, [0;92mdata_loading=0.008, iteration=1.224, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 142/601 [04:06<10:48,  1.41s/it, [0;92mdata_loading=0.008, iteration=1.224, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 142/601 [04:07<10:48,  1.41s/it, [0;92mdata_loading=0.011, iteration=1.222, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 143/601 [04:07<10:22,  1.36s/it, [0;92mdata_loading=0.011, iteration=1.222, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 143/601 [04:08<10:22,  1.36s/it, [0;92mdata_loading=0.010, iteration=1.34 , train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 144/601 [04:08<10:19,  1.36s/it, [0;92mdata_loading=0.010, iteration=1.34 , train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 144/601 [04:10<10:19,  1.36s/it, [0;92mdata_loading=0.008, iteration=1.730, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 145/601 [04:10<11:10,  1.47s/it, [0;92mdata_loading=0.008, iteration=1.730, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 145/601 [04:12<11:10,  1.47s/it, [0;92mdata_loading=0.013, iteration=1.558, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 146/601 [04:12<11:23,  1.50s/it, [0;92mdata_loading=0.013, iteration=1.558, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 146/601 [04:13<11:23,  1.50s/it, [0;92mdata_loading=0.007, iteration=1.742, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 147/601 [04:13<11:55,  1.58s/it, [0;92mdata_loading=0.007, iteration=1.742, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 24% 147/601 [04:15<11:55,  1.58s/it, [0;92mdata_loading=0.010, iteration=1.627, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 148/601 [04:15<12:02,  1.60s/it, [0;92mdata_loading=0.010, iteration=1.627, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 148/601 [04:17<12:02,  1.60s/it, [0;92mdata_loading=0.011, iteration=1.776, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 149/601 [04:17<12:27,  1.65s/it, [0;92mdata_loading=0.011, iteration=1.776, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 149/601 [04:18<12:27,  1.65s/it, [0;92mdata_loading=0.012, iteration=1.434, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 150/601 [04:18<11:57,  1.59s/it, [0;92mdata_loading=0.012, iteration=1.434, train_acc=57.42, train_loss_cross_entropy=1.541, train_loss_seg=1.541, train_macc=15.07, train_miou=10.57[0m)] 25% 150/601 [04:20<11:57,  1.59s/it, [0;92mdata_loading=0.030, iteration=1.738, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 151/601 [04:20<12:20,  1.64s/it, [0;92mdata_loading=0.030, iteration=1.738, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 151/601 [04:21<12:20,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.282, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 152/601 [04:21<11:29,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.282, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 152/601 [04:22<11:29,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.137, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 153/601 [04:22<10:34,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.137, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 25% 153/601 [04:24<10:34,  1.42s/it, [0;92mdata_loading=0.010, iteration=1.42 , train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 154/601 [04:24<10:35,  1.42s/it, [0;92mdata_loading=0.010, iteration=1.42 , train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 154/601 [04:25<10:35,  1.42s/it, [0;92mdata_loading=0.014, iteration=1.501, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 155/601 [04:25<10:46,  1.45s/it, [0;92mdata_loading=0.014, iteration=1.501, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 155/601 [04:27<10:46,  1.45s/it, [0;92mdata_loading=0.013, iteration=1.758, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 156/601 [04:27<11:28,  1.55s/it, [0;92mdata_loading=0.013, iteration=1.758, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 156/601 [04:29<11:28,  1.55s/it, [0;92mdata_loading=0.078, iteration=2.099, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 157/601 [04:29<12:50,  1.74s/it, [0;92mdata_loading=0.078, iteration=2.099, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 157/601 [04:31<12:50,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.552, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 158/601 [04:31<12:24,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.552, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 158/601 [04:32<12:24,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.369, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 159/601 [04:32<11:41,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.369, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 26% 159/601 [04:34<11:41,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.363, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 27% 160/601 [04:34<11:10,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.363, train_acc=57.30, train_loss_cross_entropy=1.552, train_loss_seg=1.552, train_macc=15.27, train_miou=10.61[0m)] 27% 160/601 [04:35<11:10,  1.52s/it, [0;92mdata_loading=0.011, iteration=1.678, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 161/601 [04:35<11:31,  1.57s/it, [0;92mdata_loading=0.011, iteration=1.678, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 161/601 [04:37<11:31,  1.57s/it, [0;92mdata_loading=0.018, iteration=1.466, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 162/601 [04:37<11:18,  1.55s/it, [0;92mdata_loading=0.018, iteration=1.466, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 162/601 [04:39<11:18,  1.55s/it, [0;92mdata_loading=0.101, iteration=1.796, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 163/601 [04:39<12:03,  1.65s/it, [0;92mdata_loading=0.101, iteration=1.796, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 163/601 [04:41<12:03,  1.65s/it, [0;92mdata_loading=0.000, iteration=2.010, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 164/601 [04:41<12:48,  1.76s/it, [0;92mdata_loading=0.000, iteration=2.010, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 164/601 [04:42<12:48,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.797, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 165/601 [04:42<12:52,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.797, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 27% 165/601 [04:44<12:52,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.318, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 166/601 [04:44<11:51,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.318, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 166/601 [04:45<11:51,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.506, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 167/601 [04:45<11:33,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.506, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 167/601 [04:47<11:33,  1.60s/it, [0;92mdata_loading=0.074, iteration=1.884, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 168/601 [04:47<12:18,  1.71s/it, [0;92mdata_loading=0.074, iteration=1.884, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 168/601 [04:49<12:18,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.915, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 169/601 [04:49<12:44,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.915, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 169/601 [04:51<12:44,  1.77s/it, [0;92mdata_loading=0.008, iteration=1.548, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 170/601 [04:51<12:15,  1.71s/it, [0;92mdata_loading=0.008, iteration=1.548, train_acc=57.72, train_loss_cross_entropy=1.538, train_loss_seg=1.538, train_macc=16.29, train_miou=11.54[0m)] 28% 170/601 [04:52<12:15,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.700, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 28% 171/601 [04:52<12:12,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.700, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 28% 171/601 [04:54<12:12,  1.70s/it, [0;92mdata_loading=0.023, iteration=1.989, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 172/601 [04:54<12:50,  1.80s/it, [0;92mdata_loading=0.023, iteration=1.989, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 172/601 [04:56<12:50,  1.80s/it, [0;92mdata_loading=0.01 , iteration=1.447, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 173/601 [04:56<12:05,  1.70s/it, [0;92mdata_loading=0.01 , iteration=1.447, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 173/601 [04:58<12:05,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.792, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 174/601 [04:58<12:16,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.792, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 174/601 [04:59<12:16,  1.72s/it, [0;92mdata_loading=0.023, iteration=1.758, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 175/601 [04:59<12:22,  1.74s/it, [0;92mdata_loading=0.023, iteration=1.758, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 175/601 [05:01<12:22,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.395, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 176/601 [05:01<11:36,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.395, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 176/601 [05:03<11:36,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.837, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 177/601 [05:03<12:01,  1.70s/it, [0;92mdata_loading=0.011, iteration=1.837, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 29% 177/601 [05:04<12:01,  1.70s/it, [0;92mdata_loading=0.011, iteration=1.619, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 178/601 [05:04<11:50,  1.68s/it, [0;92mdata_loading=0.011, iteration=1.619, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 178/601 [05:07<11:50,  1.68s/it, [0;92mdata_loading=0.029, iteration=2.171, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 179/601 [05:07<12:55,  1.84s/it, [0;92mdata_loading=0.029, iteration=2.171, train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 179/601 [05:08<12:55,  1.84s/it, [0;92mdata_loading=0.000, iteration=1.49 , train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 180/601 [05:08<12:09,  1.73s/it, [0;92mdata_loading=0.000, iteration=1.49 , train_acc=57.88, train_loss_cross_entropy=1.529, train_loss_seg=1.529, train_macc=16.73, train_miou=11.82[0m)] 30% 180/601 [05:10<12:09,  1.73s/it, [0;92mdata_loading=0.072, iteration=2.156, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 181/601 [05:10<13:10,  1.88s/it, [0;92mdata_loading=0.072, iteration=2.156, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 181/601 [05:12<13:10,  1.88s/it, [0;92mdata_loading=0.000, iteration=1.662, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 182/601 [05:12<12:41,  1.82s/it, [0;92mdata_loading=0.000, iteration=1.662, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 182/601 [05:13<12:41,  1.82s/it, [0;92mdata_loading=0.000, iteration=1.153, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 183/601 [05:13<11:16,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.153, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 30% 183/601 [05:14<11:16,  1.62s/it, [0;92mdata_loading=0.021, iteration=1.181, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 184/601 [05:14<10:22,  1.49s/it, [0;92mdata_loading=0.021, iteration=1.181, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 184/601 [05:16<10:22,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.950, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 185/601 [05:16<11:18,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.950, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 185/601 [05:18<11:18,  1.63s/it, [0;92mdata_loading=0.079, iteration=1.294, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 186/601 [05:18<10:44,  1.55s/it, [0;92mdata_loading=0.079, iteration=1.294, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 186/601 [05:19<10:44,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.322, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 187/601 [05:19<10:14,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.322, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 187/601 [05:21<10:14,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.640, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 188/601 [05:21<10:32,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.640, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 188/601 [05:22<10:32,  1.53s/it, [0;92mdata_loading=0.024, iteration=1.437, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 189/601 [05:22<10:22,  1.51s/it, [0;92mdata_loading=0.024, iteration=1.437, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 31% 189/601 [05:23<10:22,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.276, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 32% 190/601 [05:23<09:52,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.276, train_acc=58.61, train_loss_cross_entropy=1.512, train_loss_seg=1.512, train_macc=16.80, train_miou=11.92[0m)] 32% 190/601 [05:25<09:52,  1.44s/it, [0;92mdata_loading=0.021, iteration=1.613, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 191/601 [05:25<10:14,  1.50s/it, [0;92mdata_loading=0.021, iteration=1.613, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 191/601 [05:27<10:14,  1.50s/it, [0;92mdata_loading=0.023, iteration=1.945, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 192/601 [05:27<11:10,  1.64s/it, [0;92mdata_loading=0.023, iteration=1.945, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 192/601 [05:28<11:10,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.351, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 193/601 [05:28<10:33,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.351, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 193/601 [05:30<10:33,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.450, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 194/601 [05:30<10:19,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.450, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 194/601 [05:31<10:19,  1.52s/it, [0;92mdata_loading=0.012, iteration=1.317, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 195/601 [05:31<09:54,  1.47s/it, [0;92mdata_loading=0.012, iteration=1.317, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 32% 195/601 [05:33<09:54,  1.47s/it, [0;92mdata_loading=0.040, iteration=2.052, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 196/601 [05:33<11:09,  1.65s/it, [0;92mdata_loading=0.040, iteration=2.052, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 196/601 [05:35<11:09,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.584, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 197/601 [05:35<10:59,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.584, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 197/601 [05:36<10:59,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.029, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 198/601 [05:36<09:45,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.029, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 198/601 [05:37<09:45,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.528, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 199/601 [05:37<09:53,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.528, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 199/601 [05:39<09:53,  1.48s/it, [0;92mdata_loading=0.014, iteration=1.427, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 200/601 [05:39<09:47,  1.47s/it, [0;92mdata_loading=0.014, iteration=1.427, train_acc=59.45, train_loss_cross_entropy=1.481, train_loss_seg=1.481, train_macc=17.63, train_miou=12.54[0m)] 33% 200/601 [05:40<09:47,  1.47s/it, [0;92mdata_loading=0.018, iteration=1.647, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 33% 201/601 [05:40<10:10,  1.53s/it, [0;92mdata_loading=0.018, iteration=1.647, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 33% 201/601 [05:42<10:10,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.817, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 202/601 [05:42<10:43,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.817, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 202/601 [05:44<10:43,  1.61s/it, [0;92mdata_loading=0.019, iteration=1.554, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 203/601 [05:44<10:37,  1.60s/it, [0;92mdata_loading=0.019, iteration=1.554, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 203/601 [05:46<10:37,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.743, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 204/601 [05:46<10:52,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.743, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 204/601 [05:47<10:52,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.783, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 205/601 [05:47<11:09,  1.69s/it, [0;92mdata_loading=0.011, iteration=1.783, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 205/601 [05:49<11:09,  1.69s/it, [0;92mdata_loading=0.011, iteration=1.671, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 206/601 [05:49<11:06,  1.69s/it, [0;92mdata_loading=0.011, iteration=1.671, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 206/601 [05:51<11:06,  1.69s/it, [0;92mdata_loading=0.009, iteration=1.841, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 207/601 [05:51<11:24,  1.74s/it, [0;92mdata_loading=0.009, iteration=1.841, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 34% 207/601 [05:53<11:24,  1.74s/it, [0;92mdata_loading=0.020, iteration=1.756, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 208/601 [05:53<11:27,  1.75s/it, [0;92mdata_loading=0.020, iteration=1.756, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 208/601 [05:54<11:27,  1.75s/it, [0;92mdata_loading=0.000, iteration=1.718, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 209/601 [05:54<11:21,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.718, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 209/601 [05:56<11:21,  1.74s/it, [0;92mdata_loading=0.010, iteration=1.319, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 210/601 [05:56<10:32,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.319, train_acc=60.43, train_loss_cross_entropy=1.446, train_loss_seg=1.446, train_macc=18.31, train_miou=13.08[0m)] 35% 210/601 [05:57<10:32,  1.62s/it, [0;92mdata_loading=0.009, iteration=1.363, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 211/601 [05:57<10:02,  1.54s/it, [0;92mdata_loading=0.009, iteration=1.363, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 211/601 [05:59<10:02,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.632, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 212/601 [05:59<10:12,  1.57s/it, [0;92mdata_loading=0.010, iteration=1.632, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 212/601 [06:00<10:12,  1.57s/it, [0;92mdata_loading=0.019, iteration=1.491, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 213/601 [06:00<10:03,  1.55s/it, [0;92mdata_loading=0.019, iteration=1.491, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 35% 213/601 [06:02<10:03,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.624, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 214/601 [06:02<10:09,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.624, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 214/601 [06:04<10:09,  1.58s/it, [0;92mdata_loading=0.014, iteration=1.648, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 215/601 [06:04<10:18,  1.60s/it, [0;92mdata_loading=0.014, iteration=1.648, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 215/601 [06:05<10:18,  1.60s/it, [0;92mdata_loading=0.013, iteration=1.428, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 216/601 [06:05<09:58,  1.55s/it, [0;92mdata_loading=0.013, iteration=1.428, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 216/601 [06:07<09:58,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.567, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 217/601 [06:07<09:59,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.567, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 217/601 [06:08<09:59,  1.56s/it, [0;92mdata_loading=0.021, iteration=1.465, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 218/601 [06:08<09:49,  1.54s/it, [0;92mdata_loading=0.021, iteration=1.465, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 218/601 [06:09<09:49,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.363, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 219/601 [06:09<09:27,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.363, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 36% 219/601 [06:11<09:27,  1.49s/it, [0;92mdata_loading=0.029, iteration=1.646, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 37% 220/601 [06:11<09:48,  1.54s/it, [0;92mdata_loading=0.029, iteration=1.646, train_acc=60.49, train_loss_cross_entropy=1.431, train_loss_seg=1.431, train_macc=18.37, train_miou=13.15[0m)] 37% 220/601 [06:13<09:48,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.875, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 221/601 [06:13<10:24,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.875, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 221/601 [06:14<10:24,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.336, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 222/601 [06:14<09:49,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.336, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 222/601 [06:16<09:49,  1.55s/it, [0;92mdata_loading=0.016, iteration=1.846, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 223/601 [06:16<10:22,  1.65s/it, [0;92mdata_loading=0.016, iteration=1.846, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 223/601 [06:18<10:22,  1.65s/it, [0;92mdata_loading=0.075, iteration=1.941, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 224/601 [06:18<11:02,  1.76s/it, [0;92mdata_loading=0.075, iteration=1.941, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 224/601 [06:19<11:02,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.321, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 225/601 [06:19<10:11,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.321, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 37% 225/601 [06:21<10:11,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.409, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 226/601 [06:21<09:45,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.409, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 226/601 [06:23<09:45,  1.56s/it, [0;92mdata_loading=0.011, iteration=1.650, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 227/601 [06:23<09:55,  1.59s/it, [0;92mdata_loading=0.011, iteration=1.650, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 227/601 [06:24<09:55,  1.59s/it, [0;92mdata_loading=0.011, iteration=1.682, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 228/601 [06:24<10:05,  1.62s/it, [0;92mdata_loading=0.011, iteration=1.682, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 228/601 [06:26<10:05,  1.62s/it, [0;92mdata_loading=0.079, iteration=1.721, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 229/601 [06:26<10:23,  1.68s/it, [0;92mdata_loading=0.079, iteration=1.721, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 229/601 [06:28<10:23,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.676, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 230/601 [06:28<10:22,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.676, train_acc=61.31, train_loss_cross_entropy=1.407, train_loss_seg=1.407, train_macc=19.59, train_miou=14.17[0m)] 38% 230/601 [06:29<10:22,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.546, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 38% 231/601 [06:29<10:05,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.546, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 38% 231/601 [06:31<10:05,  1.64s/it, [0;92mdata_loading=0.014, iteration=1.724, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 232/601 [06:31<10:15,  1.67s/it, [0;92mdata_loading=0.014, iteration=1.724, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 232/601 [06:33<10:15,  1.67s/it, [0;92mdata_loading=0.010, iteration=1.723, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 233/601 [06:33<10:21,  1.69s/it, [0;92mdata_loading=0.010, iteration=1.723, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 233/601 [06:34<10:21,  1.69s/it, [0;92mdata_loading=0.022, iteration=1.547, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 234/601 [06:34<10:06,  1.65s/it, [0;92mdata_loading=0.022, iteration=1.547, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 234/601 [06:36<10:06,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.354, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 235/601 [06:36<09:32,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.354, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 235/601 [06:37<09:32,  1.56s/it, [0;92mdata_loading=0.079, iteration=1.534, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 236/601 [06:37<09:36,  1.58s/it, [0;92mdata_loading=0.079, iteration=1.534, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 236/601 [06:39<09:36,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.442, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 237/601 [06:39<09:19,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.442, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 39% 237/601 [06:40<09:19,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.486, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 238/601 [06:40<09:12,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.486, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 238/601 [06:42<09:12,  1.52s/it, [0;92mdata_loading=0.022, iteration=1.686, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 239/601 [06:42<09:31,  1.58s/it, [0;92mdata_loading=0.022, iteration=1.686, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 239/601 [06:43<09:31,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.159, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 240/601 [06:43<08:44,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.159, train_acc=62.03, train_loss_cross_entropy=1.378, train_loss_seg=1.378, train_macc=19.94, train_miou=14.46[0m)] 40% 240/601 [06:45<08:44,  1.45s/it, [0;92mdata_loading=0.068, iteration=1.606, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 241/601 [06:45<09:07,  1.52s/it, [0;92mdata_loading=0.068, iteration=1.606, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 241/601 [06:47<09:07,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.731, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 242/601 [06:47<09:28,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.731, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 242/601 [06:48<09:28,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.168, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 243/601 [06:48<08:42,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.168, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 40% 243/601 [06:49<08:42,  1.46s/it, [0;92mdata_loading=0.010, iteration=1.429, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 244/601 [06:49<08:38,  1.45s/it, [0;92mdata_loading=0.010, iteration=1.429, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 244/601 [06:51<08:38,  1.45s/it, [0;92mdata_loading=0.018, iteration=1.487, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 245/601 [06:51<08:43,  1.47s/it, [0;92mdata_loading=0.018, iteration=1.487, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 245/601 [06:52<08:43,  1.47s/it, [0;92mdata_loading=0.092, iteration=1.588, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 246/601 [06:52<09:04,  1.53s/it, [0;92mdata_loading=0.092, iteration=1.588, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 246/601 [06:54<09:04,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.261, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 247/601 [06:54<08:33,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.261, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 247/601 [06:55<08:33,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.768, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 248/601 [06:55<09:06,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.768, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 248/601 [06:57<09:06,  1.55s/it, [0;92mdata_loading=0.02 , iteration=1.699, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 249/601 [06:57<09:22,  1.60s/it, [0;92mdata_loading=0.02 , iteration=1.699, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 41% 249/601 [06:59<09:22,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.448, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 42% 250/601 [06:59<09:05,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.448, train_acc=62.21, train_loss_cross_entropy=1.368, train_loss_seg=1.368, train_macc=20.20, train_miou=14.65[0m)] 42% 250/601 [07:00<09:05,  1.55s/it, [0;92mdata_loading=0.020, iteration=1.591, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 251/601 [07:00<09:10,  1.57s/it, [0;92mdata_loading=0.020, iteration=1.591, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 251/601 [07:02<09:10,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.449, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 252/601 [07:02<08:55,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.449, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 252/601 [07:03<08:55,  1.54s/it, [0;92mdata_loading=0.090, iteration=1.833, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 253/601 [07:03<09:34,  1.65s/it, [0;92mdata_loading=0.090, iteration=1.833, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 253/601 [07:05<09:34,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.39 , train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 254/601 [07:05<09:06,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.39 , train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 254/601 [07:07<09:06,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.735, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 255/601 [07:07<09:21,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.735, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 42% 255/601 [07:08<09:21,  1.62s/it, [0;92mdata_loading=0.026, iteration=1.427, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 256/601 [07:08<09:02,  1.57s/it, [0;92mdata_loading=0.026, iteration=1.427, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 256/601 [07:09<09:02,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.409, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 257/601 [07:09<08:44,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.409, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 257/601 [07:11<08:44,  1.52s/it, [0;92mdata_loading=0.102, iteration=1.512, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 258/601 [07:11<08:51,  1.55s/it, [0;92mdata_loading=0.102, iteration=1.512, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 258/601 [07:12<08:51,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.167, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 259/601 [07:12<08:11,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.167, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 259/601 [07:14<08:11,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.310, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 260/601 [07:14<07:56,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.310, train_acc=62.48, train_loss_cross_entropy=1.346, train_loss_seg=1.346, train_macc=20.24, train_miou=14.73[0m)] 43% 260/601 [07:15<07:56,  1.40s/it, [0;92mdata_loading=0.012, iteration=1.390, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 43% 261/601 [07:15<07:55,  1.40s/it, [0;92mdata_loading=0.012, iteration=1.390, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 43% 261/601 [07:17<07:55,  1.40s/it, [0;92mdata_loading=0.010, iteration=1.687, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 262/601 [07:17<08:24,  1.49s/it, [0;92mdata_loading=0.010, iteration=1.687, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 262/601 [07:19<08:24,  1.49s/it, [0;92mdata_loading=0.083, iteration=1.836, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 263/601 [07:19<09:07,  1.62s/it, [0;92mdata_loading=0.083, iteration=1.836, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 263/601 [07:20<09:07,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.189, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 264/601 [07:20<08:22,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.189, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 264/601 [07:22<08:22,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.725, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 265/601 [07:22<08:44,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.725, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 265/601 [07:23<08:44,  1.56s/it, [0;92mdata_loading=0.020, iteration=1.909, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 266/601 [07:23<09:19,  1.67s/it, [0;92mdata_loading=0.020, iteration=1.909, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 266/601 [07:25<09:19,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.451, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 267/601 [07:25<08:56,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.451, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 44% 267/601 [07:26<08:56,  1.61s/it, [0;92mdata_loading=0.070, iteration=1.511, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 268/601 [07:26<08:52,  1.60s/it, [0;92mdata_loading=0.070, iteration=1.511, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 268/601 [07:28<08:52,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.243, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 269/601 [07:28<08:15,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.243, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 269/601 [07:29<08:15,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.318, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 270/601 [07:29<07:56,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.318, train_acc=62.70, train_loss_cross_entropy=1.331, train_loss_seg=1.331, train_macc=20.25, train_miou=14.76[0m)] 45% 270/601 [07:30<07:56,  1.44s/it, [0;92mdata_loading=0.021, iteration=1.381, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 271/601 [07:30<07:51,  1.43s/it, [0;92mdata_loading=0.021, iteration=1.381, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 271/601 [07:32<07:51,  1.43s/it, [0;92mdata_loading=0.000, iteration=1.379, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 272/601 [07:32<07:45,  1.41s/it, [0;92mdata_loading=0.000, iteration=1.379, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 272/601 [07:33<07:45,  1.41s/it, [0;92mdata_loading=0.021, iteration=1.101, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 273/601 [07:33<07:15,  1.33s/it, [0;92mdata_loading=0.021, iteration=1.101, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 45% 273/601 [07:35<07:15,  1.33s/it, [0;92mdata_loading=0.000, iteration=1.795, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 274/601 [07:35<08:00,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.795, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 274/601 [07:37<08:00,  1.47s/it, [0;92mdata_loading=0.090, iteration=1.887, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 275/601 [07:37<08:48,  1.62s/it, [0;92mdata_loading=0.090, iteration=1.887, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 275/601 [07:38<08:48,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.575, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 276/601 [07:38<08:42,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.575, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 276/601 [07:40<08:42,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.787, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 277/601 [07:40<08:58,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.787, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 277/601 [07:42<08:58,  1.66s/it, [0;92mdata_loading=0.091, iteration=1.839, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 278/601 [07:42<09:22,  1.74s/it, [0;92mdata_loading=0.091, iteration=1.839, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 278/601 [07:43<09:22,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.377, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 279/601 [07:43<08:45,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.377, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 46% 279/601 [07:45<08:45,  1.63s/it, [0;92mdata_loading=0.019, iteration=1.880, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 47% 280/601 [07:45<09:10,  1.71s/it, [0;92mdata_loading=0.019, iteration=1.880, train_acc=62.86, train_loss_cross_entropy=1.322, train_loss_seg=1.322, train_macc=20.50, train_miou=14.95[0m)] 47% 280/601 [07:47<09:10,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.437, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 281/601 [07:47<08:41,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.437, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 281/601 [07:48<08:41,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.439, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 282/601 [07:48<08:21,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.439, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 282/601 [07:50<08:21,  1.57s/it, [0;92mdata_loading=0.020, iteration=1.315, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 283/601 [07:50<07:57,  1.50s/it, [0;92mdata_loading=0.020, iteration=1.315, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 283/601 [07:51<07:57,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.320, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 284/601 [07:51<07:39,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.320, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 284/601 [07:53<07:39,  1.45s/it, [0;92mdata_loading=0.012, iteration=1.734, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 285/601 [07:53<08:05,  1.54s/it, [0;92mdata_loading=0.012, iteration=1.734, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 47% 285/601 [07:54<08:05,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.845, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 286/601 [07:54<08:34,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.845, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 286/601 [07:56<08:34,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.223, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 287/601 [07:56<07:54,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.223, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 287/601 [07:57<07:54,  1.51s/it, [0;92mdata_loading=0.009, iteration=1.524, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 288/601 [07:57<07:55,  1.52s/it, [0;92mdata_loading=0.009, iteration=1.524, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 288/601 [07:59<07:55,  1.52s/it, [0;92mdata_loading=0.011, iteration=1.483, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 289/601 [07:59<07:51,  1.51s/it, [0;92mdata_loading=0.011, iteration=1.483, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 289/601 [08:00<07:51,  1.51s/it, [0;92mdata_loading=0.012, iteration=1.600, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 290/601 [08:00<07:59,  1.54s/it, [0;92mdata_loading=0.012, iteration=1.600, train_acc=62.94, train_loss_cross_entropy=1.316, train_loss_seg=1.316, train_macc=20.57, train_miou=15.01[0m)] 48% 290/601 [08:02<07:59,  1.54s/it, [0;92mdata_loading=0.011, iteration=2.027, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 48% 291/601 [08:02<08:44,  1.69s/it, [0;92mdata_loading=0.011, iteration=2.027, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 48% 291/601 [08:04<08:44,  1.69s/it, [0;92mdata_loading=0.008, iteration=1.628, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 292/601 [08:04<08:37,  1.67s/it, [0;92mdata_loading=0.008, iteration=1.628, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 292/601 [08:06<08:37,  1.67s/it, [0;92mdata_loading=0.015, iteration=1.499, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 293/601 [08:06<08:21,  1.63s/it, [0;92mdata_loading=0.015, iteration=1.499, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 293/601 [08:07<08:21,  1.63s/it, [0;92mdata_loading=0.011, iteration=1.409, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 294/601 [08:07<08:00,  1.57s/it, [0;92mdata_loading=0.011, iteration=1.409, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 294/601 [08:08<08:00,  1.57s/it, [0;92mdata_loading=0.011, iteration=1.491, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 295/601 [08:08<07:53,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.491, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 295/601 [08:10<07:53,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.510, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 296/601 [08:10<07:49,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.510, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 296/601 [08:12<07:49,  1.54s/it, [0;92mdata_loading=0.011, iteration=1.755, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 297/601 [08:12<08:08,  1.61s/it, [0;92mdata_loading=0.011, iteration=1.755, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 49% 297/601 [08:13<08:08,  1.61s/it, [0;92mdata_loading=0.008, iteration=1.280, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 298/601 [08:13<07:38,  1.51s/it, [0;92mdata_loading=0.008, iteration=1.280, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 298/601 [08:15<07:38,  1.51s/it, [0;92mdata_loading=0.015, iteration=1.769, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 299/601 [08:15<08:01,  1.59s/it, [0;92mdata_loading=0.015, iteration=1.769, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 299/601 [08:16<08:01,  1.59s/it, [0;92mdata_loading=0.011, iteration=1.376, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 300/601 [08:16<07:41,  1.53s/it, [0;92mdata_loading=0.011, iteration=1.376, train_acc=63.68, train_loss_cross_entropy=1.298, train_loss_seg=1.298, train_macc=21.12, train_miou=15.48[0m)] 50% 300/601 [08:18<07:41,  1.53s/it, [0;92mdata_loading=0.008, iteration=2.066, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 301/601 [08:18<08:28,  1.69s/it, [0;92mdata_loading=0.008, iteration=2.066, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 301/601 [08:20<08:28,  1.69s/it, [0;92mdata_loading=0.021, iteration=1.486, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 302/601 [08:20<08:10,  1.64s/it, [0;92mdata_loading=0.021, iteration=1.486, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 302/601 [08:21<08:10,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.560, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 303/601 [08:21<08:02,  1.62s/it, [0;92mdata_loading=0.011, iteration=1.560, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 50% 303/601 [08:23<08:02,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.508, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 304/601 [08:23<07:52,  1.59s/it, [0;92mdata_loading=0.010, iteration=1.508, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 304/601 [08:24<07:52,  1.59s/it, [0;92mdata_loading=0.011, iteration=1.477, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 305/601 [08:24<07:41,  1.56s/it, [0;92mdata_loading=0.011, iteration=1.477, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 305/601 [08:26<07:41,  1.56s/it, [0;92mdata_loading=0.008, iteration=1.579, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 306/601 [08:26<07:42,  1.57s/it, [0;92mdata_loading=0.008, iteration=1.579, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 306/601 [08:27<07:42,  1.57s/it, [0;92mdata_loading=0.015, iteration=1.102, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 307/601 [08:27<07:01,  1.43s/it, [0;92mdata_loading=0.015, iteration=1.102, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 307/601 [08:29<07:01,  1.43s/it, [0;92mdata_loading=0.010, iteration=1.541, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 308/601 [08:29<07:10,  1.47s/it, [0;92mdata_loading=0.010, iteration=1.541, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 308/601 [08:30<07:10,  1.47s/it, [0;92mdata_loading=0.012, iteration=1.535, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 309/601 [08:30<07:15,  1.49s/it, [0;92mdata_loading=0.012, iteration=1.535, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 51% 309/601 [08:32<07:15,  1.49s/it, [0;92mdata_loading=0.010, iteration=1.688, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 52% 310/601 [08:32<07:32,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.688, train_acc=64.03, train_loss_cross_entropy=1.288, train_loss_seg=1.288, train_macc=21.49, train_miou=15.76[0m)] 52% 310/601 [08:34<07:32,  1.55s/it, [0;92mdata_loading=0.01 , iteration=1.662, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 311/601 [08:34<07:41,  1.59s/it, [0;92mdata_loading=0.01 , iteration=1.662, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 311/601 [08:36<07:41,  1.59s/it, [0;92mdata_loading=0.057, iteration=1.985, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 312/601 [08:36<08:18,  1.73s/it, [0;92mdata_loading=0.057, iteration=1.985, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 312/601 [08:37<08:18,  1.73s/it, [0;92mdata_loading=0.000, iteration=1.917, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 313/601 [08:37<08:33,  1.78s/it, [0;92mdata_loading=0.000, iteration=1.917, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 313/601 [08:39<08:33,  1.78s/it, [0;92mdata_loading=0.000, iteration=1.467, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 314/601 [08:39<08:04,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.467, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 314/601 [08:40<08:04,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.513, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 315/601 [08:40<07:48,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.513, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 52% 315/601 [08:43<07:48,  1.64s/it, [0;92mdata_loading=0.010, iteration=2.202, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 316/601 [08:43<08:35,  1.81s/it, [0;92mdata_loading=0.010, iteration=2.202, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 316/601 [08:44<08:35,  1.81s/it, [0;92mdata_loading=0.085, iteration=1.397, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 317/601 [08:44<08:06,  1.71s/it, [0;92mdata_loading=0.085, iteration=1.397, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 317/601 [08:46<08:06,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.801, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 318/601 [08:46<08:12,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.801, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 318/601 [08:48<08:12,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.824, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 319/601 [08:48<08:17,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.824, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 319/601 [08:49<08:17,  1.77s/it, [0;92mdata_loading=0.000, iteration=1.676, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 320/601 [08:49<08:08,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.676, train_acc=64.29, train_loss_cross_entropy=1.273, train_loss_seg=1.273, train_macc=21.68, train_miou=15.91[0m)] 53% 320/601 [08:51<08:08,  1.74s/it, [0;92mdata_loading=0.023, iteration=1.757, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 53% 321/601 [08:51<08:10,  1.75s/it, [0;92mdata_loading=0.023, iteration=1.757, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 53% 321/601 [08:53<08:10,  1.75s/it, [0;92mdata_loading=0.105, iteration=1.805, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 322/601 [08:53<08:22,  1.80s/it, [0;92mdata_loading=0.105, iteration=1.805, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 322/601 [08:54<08:22,  1.80s/it, [0;92mdata_loading=0.000, iteration=1.113, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 323/601 [08:54<07:23,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.113, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 323/601 [08:56<07:23,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.578, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 324/601 [08:56<07:20,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.578, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 324/601 [08:58<07:20,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.682, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 325/601 [08:58<07:26,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.682, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 325/601 [08:59<07:26,  1.62s/it, [0;92mdata_loading=0.017, iteration=1.637, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 326/601 [08:59<07:27,  1.63s/it, [0;92mdata_loading=0.017, iteration=1.637, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 326/601 [09:01<07:27,  1.63s/it, [0;92mdata_loading=0.082, iteration=1.606, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 327/601 [09:01<07:31,  1.65s/it, [0;92mdata_loading=0.082, iteration=1.606, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 54% 327/601 [09:02<07:31,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.561, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 328/601 [09:02<07:22,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.561, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 328/601 [09:04<07:22,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.449, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 329/601 [09:04<07:07,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.449, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 329/601 [09:06<07:07,  1.57s/it, [0;92mdata_loading=0.012, iteration=1.687, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 330/601 [09:06<07:16,  1.61s/it, [0;92mdata_loading=0.012, iteration=1.687, train_acc=64.51, train_loss_cross_entropy=1.265, train_loss_seg=1.265, train_macc=21.67, train_miou=15.93[0m)] 55% 330/601 [09:07<07:16,  1.61s/it, [0;92mdata_loading=0.010, iteration=1.622, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 331/601 [09:07<07:16,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.622, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 331/601 [09:09<07:16,  1.62s/it, [0;92mdata_loading=0.081, iteration=1.537, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 332/601 [09:09<07:15,  1.62s/it, [0;92mdata_loading=0.081, iteration=1.537, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 332/601 [09:10<07:15,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.283, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 333/601 [09:10<06:46,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.283, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 55% 333/601 [09:12<06:46,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.436, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 334/601 [09:12<06:38,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.436, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 334/601 [09:13<06:38,  1.49s/it, [0;92mdata_loading=0.012, iteration=1.433, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 335/601 [09:13<06:33,  1.48s/it, [0;92mdata_loading=0.012, iteration=1.433, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 335/601 [09:14<06:33,  1.48s/it, [0;92mdata_loading=0.018, iteration=1.354, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 336/601 [09:14<06:23,  1.45s/it, [0;92mdata_loading=0.018, iteration=1.354, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 336/601 [09:16<06:23,  1.45s/it, [0;92mdata_loading=0.019, iteration=1.505, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 337/601 [09:16<06:28,  1.47s/it, [0;92mdata_loading=0.019, iteration=1.505, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 337/601 [09:18<06:28,  1.47s/it, [0;92mdata_loading=0.010, iteration=1.823, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 338/601 [09:18<06:55,  1.58s/it, [0;92mdata_loading=0.010, iteration=1.823, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 338/601 [09:19<06:55,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.534, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 339/601 [09:19<06:50,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.534, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 56% 339/601 [09:21<06:50,  1.57s/it, [0;92mdata_loading=0.009, iteration=2.085, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 57% 340/601 [09:21<07:30,  1.73s/it, [0;92mdata_loading=0.009, iteration=2.085, train_acc=65.09, train_loss_cross_entropy=1.245, train_loss_seg=1.245, train_macc=21.78, train_miou=16.07[0m)] 57% 340/601 [09:24<07:30,  1.73s/it, [0;92mdata_loading=0.057, iteration=2.286, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 341/601 [09:24<08:16,  1.91s/it, [0;92mdata_loading=0.057, iteration=2.286, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 341/601 [09:25<08:16,  1.91s/it, [0;92mdata_loading=0.000, iteration=1.380, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 342/601 [09:25<07:33,  1.75s/it, [0;92mdata_loading=0.000, iteration=1.380, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 342/601 [09:26<07:33,  1.75s/it, [0;92mdata_loading=0.000, iteration=1.262, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 343/601 [09:26<06:54,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.262, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 343/601 [09:28<06:54,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.944, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 344/601 [09:28<07:18,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.944, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 344/601 [09:30<07:18,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.376, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 345/601 [09:30<06:51,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.376, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 57% 345/601 [09:31<06:51,  1.61s/it, [0;92mdata_loading=0.02 , iteration=1.616, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 346/601 [09:31<06:52,  1.62s/it, [0;92mdata_loading=0.02 , iteration=1.616, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 346/601 [09:33<06:52,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.209, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 347/601 [09:33<06:19,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.209, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 347/601 [09:34<06:19,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.092, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 348/601 [09:34<05:47,  1.37s/it, [0;92mdata_loading=0.000, iteration=1.092, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 348/601 [09:35<05:47,  1.37s/it, [0;92mdata_loading=0.018, iteration=1.733, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 349/601 [09:35<06:14,  1.49s/it, [0;92mdata_loading=0.018, iteration=1.733, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 349/601 [09:37<06:14,  1.49s/it, [0;92mdata_loading=0.094, iteration=1.983, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 350/601 [09:37<06:57,  1.67s/it, [0;92mdata_loading=0.094, iteration=1.983, train_acc=65.78, train_loss_cross_entropy=1.234, train_loss_seg=1.234, train_macc=22.47, train_miou=16.65[0m)] 58% 350/601 [09:39<06:57,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.207, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 58% 351/601 [09:39<06:22,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.207, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 58% 351/601 [09:40<06:22,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.809, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 352/601 [09:40<06:41,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.809, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 352/601 [09:42<06:41,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.526, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 353/601 [09:42<06:33,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.526, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 353/601 [09:44<06:33,  1.59s/it, [0;92mdata_loading=0.009, iteration=1.756, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 354/601 [09:44<06:45,  1.64s/it, [0;92mdata_loading=0.009, iteration=1.756, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 354/601 [09:46<06:45,  1.64s/it, [0;92mdata_loading=0.082, iteration=1.743, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 355/601 [09:46<06:57,  1.70s/it, [0;92mdata_loading=0.082, iteration=1.743, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 355/601 [09:47<06:57,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.532, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 356/601 [09:47<06:43,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.532, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 356/601 [09:49<06:43,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.618, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 357/601 [09:49<06:39,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.618, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 59% 357/601 [09:50<06:39,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.385, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 358/601 [09:50<06:19,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.385, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 358/601 [09:52<06:19,  1.56s/it, [0;92mdata_loading=0.008, iteration=1.607, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 359/601 [09:52<06:22,  1.58s/it, [0;92mdata_loading=0.008, iteration=1.607, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 359/601 [09:53<06:22,  1.58s/it, [0;92mdata_loading=0.088, iteration=1.148, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 360/601 [09:53<05:55,  1.48s/it, [0;92mdata_loading=0.088, iteration=1.148, train_acc=65.70, train_loss_cross_entropy=1.238, train_loss_seg=1.238, train_macc=22.50, train_miou=16.65[0m)] 60% 360/601 [09:55<05:55,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.667, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 361/601 [09:55<06:08,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.667, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 361/601 [09:57<06:08,  1.53s/it, [0;92mdata_loading=0.068, iteration=2.097, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 362/601 [09:57<06:51,  1.72s/it, [0;92mdata_loading=0.068, iteration=2.097, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 362/601 [09:58<06:51,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.344, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 363/601 [09:58<06:23,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.344, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 60% 363/601 [10:00<06:23,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.659, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 364/601 [10:00<06:25,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.659, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 364/601 [10:02<06:25,  1.63s/it, [0;92mdata_loading=0.083, iteration=1.865, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 365/601 [10:02<06:46,  1.72s/it, [0;92mdata_loading=0.083, iteration=1.865, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 365/601 [10:03<06:46,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.516, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 366/601 [10:03<06:30,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.516, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 366/601 [10:04<06:30,  1.66s/it, [0;92mdata_loading=0.010, iteration=0.970, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 367/601 [10:04<05:40,  1.46s/it, [0;92mdata_loading=0.010, iteration=0.970, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 367/601 [10:06<05:40,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.476, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 368/601 [10:06<05:40,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.476, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 368/601 [10:07<05:40,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.346, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 369/601 [10:07<05:31,  1.43s/it, [0;92mdata_loading=0.000, iteration=1.346, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 61% 369/601 [10:09<05:31,  1.43s/it, [0;92mdata_loading=0.094, iteration=1.435, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 62% 370/601 [10:09<05:37,  1.46s/it, [0;92mdata_loading=0.094, iteration=1.435, train_acc=66.11, train_loss_cross_entropy=1.224, train_loss_seg=1.224, train_macc=22.89, train_miou=16.96[0m)] 62% 370/601 [10:10<05:37,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.443, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 371/601 [10:10<05:34,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.443, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 371/601 [10:11<05:34,  1.45s/it, [0;92mdata_loading=0.011, iteration=1.381, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 372/601 [10:11<05:28,  1.44s/it, [0;92mdata_loading=0.011, iteration=1.381, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 372/601 [10:13<05:28,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.566, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 373/601 [10:13<05:36,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.566, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 373/601 [10:14<05:36,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.180, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 374/601 [10:14<05:14,  1.39s/it, [0;92mdata_loading=0.000, iteration=1.180, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 374/601 [10:15<05:14,  1.39s/it, [0;92mdata_loading=0.015, iteration=1.235, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 375/601 [10:15<05:04,  1.35s/it, [0;92mdata_loading=0.015, iteration=1.235, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 62% 375/601 [10:17<05:04,  1.35s/it, [0;92mdata_loading=0.000, iteration=1.737, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 376/601 [10:17<05:29,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.737, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 376/601 [10:19<05:29,  1.46s/it, [0;92mdata_loading=0.009, iteration=1.974, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 377/601 [10:19<06:02,  1.62s/it, [0;92mdata_loading=0.009, iteration=1.974, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 377/601 [10:21<06:02,  1.62s/it, [0;92mdata_loading=0.010, iteration=1.751, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 378/601 [10:21<06:10,  1.66s/it, [0;92mdata_loading=0.010, iteration=1.751, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 378/601 [10:23<06:10,  1.66s/it, [0;92mdata_loading=0.022, iteration=1.689, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 379/601 [10:23<06:12,  1.68s/it, [0;92mdata_loading=0.022, iteration=1.689, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 379/601 [10:24<06:12,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.177, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 380/601 [10:24<05:37,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.177, train_acc=66.18, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=23.06, train_miou=17.09[0m)] 63% 380/601 [10:26<05:37,  1.53s/it, [0;92mdata_loading=0.091, iteration=2.058, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 63% 381/601 [10:26<06:17,  1.71s/it, [0;92mdata_loading=0.091, iteration=2.058, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 63% 381/601 [10:28<06:17,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.706, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 382/601 [10:28<06:14,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.706, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 382/601 [10:29<06:14,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.649, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 383/601 [10:29<06:09,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.649, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 383/601 [10:31<06:09,  1.69s/it, [0;92mdata_loading=0.018, iteration=1.489, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 384/601 [10:31<05:55,  1.64s/it, [0;92mdata_loading=0.018, iteration=1.489, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 384/601 [10:33<05:55,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.653, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 385/601 [10:33<05:54,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.653, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 385/601 [10:34<05:54,  1.64s/it, [0;92mdata_loading=0.018, iteration=1.701, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 386/601 [10:34<05:58,  1.67s/it, [0;92mdata_loading=0.018, iteration=1.701, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 386/601 [10:36<05:58,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.502, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 387/601 [10:36<05:46,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.502, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 64% 387/601 [10:38<05:46,  1.62s/it, [0;92mdata_loading=0.020, iteration=1.875, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 388/601 [10:38<06:02,  1.70s/it, [0;92mdata_loading=0.020, iteration=1.875, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 388/601 [10:39<06:02,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.401, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 389/601 [10:39<05:41,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.401, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 389/601 [10:41<05:41,  1.61s/it, [0;92mdata_loading=0.080, iteration=1.384, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 390/601 [10:41<05:30,  1.57s/it, [0;92mdata_loading=0.080, iteration=1.384, train_acc=66.08, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.10, train_miou=17.80[0m)] 65% 390/601 [10:42<05:30,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.507, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 391/601 [10:42<05:25,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.507, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 391/601 [10:44<05:25,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.56 , train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 392/601 [10:44<05:24,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.56 , train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 392/601 [10:45<05:24,  1.55s/it, [0;92mdata_loading=0.012, iteration=1.345, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 393/601 [10:45<05:10,  1.49s/it, [0;92mdata_loading=0.012, iteration=1.345, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 65% 393/601 [10:47<05:10,  1.49s/it, [0;92mdata_loading=0.012, iteration=1.810, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 394/601 [10:47<05:29,  1.59s/it, [0;92mdata_loading=0.012, iteration=1.810, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 394/601 [10:48<05:29,  1.59s/it, [0;92mdata_loading=0.031, iteration=1.363, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 395/601 [10:48<05:15,  1.53s/it, [0;92mdata_loading=0.031, iteration=1.363, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 395/601 [10:50<05:15,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.675, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 396/601 [10:50<05:23,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.675, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 396/601 [10:51<05:23,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.355, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 397/601 [10:51<05:08,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.355, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 397/601 [10:53<05:08,  1.51s/it, [0;92mdata_loading=0.015, iteration=1.315, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 398/601 [10:53<04:55,  1.46s/it, [0;92mdata_loading=0.015, iteration=1.315, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 398/601 [10:54<04:55,  1.46s/it, [0;92mdata_loading=0.029, iteration=1.580, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 399/601 [10:54<05:03,  1.50s/it, [0;92mdata_loading=0.029, iteration=1.580, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 66% 399/601 [10:56<05:03,  1.50s/it, [0;92mdata_loading=0.039, iteration=2.145, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 67% 400/601 [10:56<05:43,  1.71s/it, [0;92mdata_loading=0.039, iteration=2.145, train_acc=66.06, train_loss_cross_entropy=1.219, train_loss_seg=1.219, train_macc=24.09, train_miou=17.74[0m)] 67% 400/601 [10:58<05:43,  1.71s/it, [0;92mdata_loading=0.000, iteration=1.469, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 401/601 [10:58<05:27,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.469, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 401/601 [10:59<05:27,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.304, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 402/601 [10:59<05:05,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.304, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 402/601 [11:00<05:05,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.382, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 403/601 [11:00<04:55,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.382, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 403/601 [11:02<04:55,  1.49s/it, [0;92mdata_loading=0.018, iteration=1.752, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 404/601 [11:02<05:10,  1.58s/it, [0;92mdata_loading=0.018, iteration=1.752, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 404/601 [11:04<05:10,  1.58s/it, [0;92mdata_loading=0.024, iteration=1.926, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 405/601 [11:04<05:30,  1.69s/it, [0;92mdata_loading=0.024, iteration=1.926, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 67% 405/601 [11:05<05:30,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.16 , train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 406/601 [11:05<04:58,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.16 , train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 406/601 [11:07<04:58,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.763, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 407/601 [11:07<05:10,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.763, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 407/601 [11:09<05:10,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.496, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 408/601 [11:09<05:02,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.496, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 408/601 [11:10<05:02,  1.57s/it, [0;92mdata_loading=0.022, iteration=1.604, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 409/601 [11:10<05:04,  1.59s/it, [0;92mdata_loading=0.022, iteration=1.604, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 409/601 [11:12<05:04,  1.59s/it, [0;92mdata_loading=0.007, iteration=1.623, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 410/601 [11:12<05:05,  1.60s/it, [0;92mdata_loading=0.007, iteration=1.623, train_acc=65.87, train_loss_cross_entropy=1.225, train_loss_seg=1.225, train_macc=24.09, train_miou=17.71[0m)] 68% 410/601 [11:13<05:05,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.126, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 68% 411/601 [11:13<04:37,  1.46s/it, [0;92mdata_loading=0.000, iteration=1.126, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 68% 411/601 [11:15<04:37,  1.46s/it, [0;92mdata_loading=0.011, iteration=1.530, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 412/601 [11:15<04:40,  1.48s/it, [0;92mdata_loading=0.011, iteration=1.530, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 412/601 [11:16<04:40,  1.48s/it, [0;92mdata_loading=0.010, iteration=1.733, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 413/601 [11:16<04:53,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.733, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 413/601 [11:18<04:53,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.533, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 414/601 [11:18<04:51,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.533, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 414/601 [11:19<04:51,  1.56s/it, [0;92mdata_loading=0.022, iteration=1.522, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 415/601 [11:19<04:48,  1.55s/it, [0;92mdata_loading=0.022, iteration=1.522, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 415/601 [11:21<04:48,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.687, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 416/601 [11:21<04:54,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.687, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 416/601 [11:23<04:54,  1.59s/it, [0;92mdata_loading=0.010, iteration=1.689, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 417/601 [11:23<04:59,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.689, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 69% 417/601 [11:24<04:59,  1.63s/it, [0;92mdata_loading=0.011, iteration=1.305, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 418/601 [11:24<04:40,  1.53s/it, [0;92mdata_loading=0.011, iteration=1.305, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 418/601 [11:26<04:40,  1.53s/it, [0;92mdata_loading=0.015, iteration=1.556, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 419/601 [11:26<04:41,  1.55s/it, [0;92mdata_loading=0.015, iteration=1.556, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 419/601 [11:27<04:41,  1.55s/it, [0;92mdata_loading=0.028, iteration=1.277, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 420/601 [11:27<04:26,  1.47s/it, [0;92mdata_loading=0.028, iteration=1.277, train_acc=65.95, train_loss_cross_entropy=1.218, train_loss_seg=1.218, train_macc=24.09, train_miou=17.75[0m)] 70% 420/601 [11:28<04:26,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.378, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 421/601 [11:28<04:20,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.378, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 421/601 [11:29<04:20,  1.45s/it, [0;92mdata_loading=0.010, iteration=1.135, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 422/601 [11:29<04:02,  1.36s/it, [0;92mdata_loading=0.010, iteration=1.135, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 422/601 [11:31<04:02,  1.36s/it, [0;92mdata_loading=0.011, iteration=1.661, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 423/601 [11:31<04:18,  1.45s/it, [0;92mdata_loading=0.011, iteration=1.661, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 70% 423/601 [11:33<04:18,  1.45s/it, [0;92mdata_loading=0.008, iteration=1.786, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 424/601 [11:33<04:35,  1.55s/it, [0;92mdata_loading=0.008, iteration=1.786, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 424/601 [11:35<04:35,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.715, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 425/601 [11:35<04:42,  1.61s/it, [0;92mdata_loading=0.010, iteration=1.715, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 425/601 [11:36<04:42,  1.61s/it, [0;92mdata_loading=0.011, iteration=1.730, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 426/601 [11:36<04:48,  1.65s/it, [0;92mdata_loading=0.011, iteration=1.730, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 426/601 [11:39<04:48,  1.65s/it, [0;92mdata_loading=0.018, iteration=2.069, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 427/601 [11:39<05:09,  1.78s/it, [0;92mdata_loading=0.018, iteration=2.069, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 427/601 [11:40<05:09,  1.78s/it, [0;92mdata_loading=0.000, iteration=1.467, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 428/601 [11:40<04:51,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.467, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 428/601 [11:42<04:51,  1.69s/it, [0;92mdata_loading=0.011, iteration=1.565, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 429/601 [11:42<04:44,  1.65s/it, [0;92mdata_loading=0.011, iteration=1.565, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 71% 429/601 [11:43<04:44,  1.65s/it, [0;92mdata_loading=0.008, iteration=1.577, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 72% 430/601 [11:43<04:39,  1.63s/it, [0;92mdata_loading=0.008, iteration=1.577, train_acc=66.25, train_loss_cross_entropy=1.199, train_loss_seg=1.199, train_macc=24.20, train_miou=17.86[0m)] 72% 430/601 [11:45<04:39,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.617, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 431/601 [11:45<04:37,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.617, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 431/601 [11:47<04:37,  1.63s/it, [0;92mdata_loading=0.019, iteration=2.031, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 432/601 [11:47<04:57,  1.76s/it, [0;92mdata_loading=0.019, iteration=2.031, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 432/601 [11:48<04:57,  1.76s/it, [0;92mdata_loading=0.000, iteration=1.658, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 433/601 [11:48<04:50,  1.73s/it, [0;92mdata_loading=0.000, iteration=1.658, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 433/601 [11:50<04:50,  1.73s/it, [0;92mdata_loading=0.010, iteration=1.598, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 434/601 [11:50<04:42,  1.69s/it, [0;92mdata_loading=0.010, iteration=1.598, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 434/601 [11:52<04:42,  1.69s/it, [0;92mdata_loading=0.012, iteration=1.519, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 435/601 [11:52<04:32,  1.64s/it, [0;92mdata_loading=0.012, iteration=1.519, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 72% 435/601 [11:53<04:32,  1.64s/it, [0;92mdata_loading=0.010, iteration=1.623, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 436/601 [11:53<04:30,  1.64s/it, [0;92mdata_loading=0.010, iteration=1.623, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 436/601 [11:55<04:30,  1.64s/it, [0;92mdata_loading=0.019, iteration=1.678, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 437/601 [11:55<04:32,  1.66s/it, [0;92mdata_loading=0.019, iteration=1.678, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 437/601 [11:57<04:32,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.653, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 438/601 [11:57<04:30,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.653, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 438/601 [11:58<04:30,  1.66s/it, [0;92mdata_loading=0.01 , iteration=1.643, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 439/601 [11:58<04:28,  1.66s/it, [0;92mdata_loading=0.01 , iteration=1.643, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 439/601 [12:00<04:28,  1.66s/it, [0;92mdata_loading=0.019, iteration=1.606, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 440/601 [12:00<04:25,  1.65s/it, [0;92mdata_loading=0.019, iteration=1.606, train_acc=66.29, train_loss_cross_entropy=1.196, train_loss_seg=1.196, train_macc=24.24, train_miou=17.95[0m)] 73% 440/601 [12:01<04:25,  1.65s/it, [0;92mdata_loading=0.010, iteration=1.504, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 73% 441/601 [12:01<04:17,  1.61s/it, [0;92mdata_loading=0.010, iteration=1.504, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 73% 441/601 [12:03<04:17,  1.61s/it, [0;92mdata_loading=0.010, iteration=1.389, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 442/601 [12:03<04:05,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.389, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 442/601 [12:04<04:05,  1.55s/it, [0;92mdata_loading=0.096, iteration=1.454, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 443/601 [12:04<04:04,  1.55s/it, [0;92mdata_loading=0.096, iteration=1.454, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 443/601 [12:06<04:04,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.437, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 444/601 [12:06<03:57,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.437, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 444/601 [12:07<03:57,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.536, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 445/601 [12:07<03:57,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.536, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 445/601 [12:09<03:57,  1.52s/it, [0;92mdata_loading=0.011, iteration=1.467, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 446/601 [12:09<03:53,  1.51s/it, [0;92mdata_loading=0.011, iteration=1.467, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 446/601 [12:11<03:53,  1.51s/it, [0;92mdata_loading=0.009, iteration=1.993, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 447/601 [12:11<04:15,  1.66s/it, [0;92mdata_loading=0.009, iteration=1.993, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 74% 447/601 [12:13<04:15,  1.66s/it, [0;92mdata_loading=0.090, iteration=1.853, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 448/601 [12:13<04:26,  1.74s/it, [0;92mdata_loading=0.090, iteration=1.853, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 448/601 [12:14<04:26,  1.74s/it, [0;92mdata_loading=0.000, iteration=1.664, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 449/601 [12:14<04:21,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.664, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 449/601 [12:16<04:21,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.389, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 450/601 [12:16<04:04,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.389, train_acc=66.51, train_loss_cross_entropy=1.182, train_loss_seg=1.182, train_macc=24.50, train_miou=18.20[0m)] 75% 450/601 [12:17<04:04,  1.62s/it, [0;92mdata_loading=0.012, iteration=1.398, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 451/601 [12:17<03:53,  1.56s/it, [0;92mdata_loading=0.012, iteration=1.398, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 451/601 [12:19<03:53,  1.56s/it, [0;92mdata_loading=0.011, iteration=1.812, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 452/601 [12:19<04:04,  1.64s/it, [0;92mdata_loading=0.011, iteration=1.812, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 452/601 [12:21<04:04,  1.64s/it, [0;92mdata_loading=0.077, iteration=1.590, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 453/601 [12:21<04:03,  1.65s/it, [0;92mdata_loading=0.077, iteration=1.590, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 75% 453/601 [12:23<04:03,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.809, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 454/601 [12:23<04:09,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.809, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 454/601 [12:24<04:09,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.349, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 455/601 [12:24<03:52,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.349, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 455/601 [12:26<03:52,  1.59s/it, [0;92mdata_loading=0.088, iteration=1.596, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 456/601 [12:26<03:54,  1.62s/it, [0;92mdata_loading=0.088, iteration=1.596, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 456/601 [12:27<03:54,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.341, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 457/601 [12:27<03:41,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.341, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 457/601 [12:28<03:41,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.369, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 458/601 [12:28<03:32,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.369, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 458/601 [12:30<03:32,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.499, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 459/601 [12:30<03:31,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.499, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 76% 459/601 [12:32<03:31,  1.49s/it, [0;92mdata_loading=0.096, iteration=2.144, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 77% 460/601 [12:32<04:01,  1.72s/it, [0;92mdata_loading=0.096, iteration=2.144, train_acc=66.68, train_loss_cross_entropy=1.171, train_loss_seg=1.171, train_macc=24.68, train_miou=18.35[0m)] 77% 460/601 [12:34<04:01,  1.72s/it, [0;92mdata_loading=0.000, iteration=1.512, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 461/601 [12:34<03:51,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.512, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 461/601 [12:35<03:51,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.481, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 462/601 [12:35<03:42,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.481, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 462/601 [12:36<03:42,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.281, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 463/601 [12:36<03:27,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.281, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 463/601 [12:38<03:27,  1.51s/it, [0;92mdata_loading=0.010, iteration=1.765, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 464/601 [12:38<03:37,  1.59s/it, [0;92mdata_loading=0.010, iteration=1.765, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 464/601 [12:40<03:37,  1.59s/it, [0;92mdata_loading=0.087, iteration=1.659, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 465/601 [12:40<03:42,  1.64s/it, [0;92mdata_loading=0.087, iteration=1.659, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 77% 465/601 [12:42<03:42,  1.64s/it, [0;92mdata_loading=0.000, iteration=1.848, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 466/601 [12:42<03:49,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.848, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 466/601 [12:43<03:49,  1.70s/it, [0;92mdata_loading=0.000, iteration=1.322, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 467/601 [12:43<03:32,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.322, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 467/601 [12:45<03:32,  1.59s/it, [0;92mdata_loading=0.022, iteration=2.107, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 468/601 [12:45<03:52,  1.75s/it, [0;92mdata_loading=0.022, iteration=2.107, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 468/601 [12:46<03:52,  1.75s/it, [0;92mdata_loading=0.000, iteration=1.167, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 469/601 [12:46<03:27,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.167, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 469/601 [12:48<03:27,  1.58s/it, [0;92mdata_loading=0.085, iteration=1.855, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 470/601 [12:48<03:40,  1.69s/it, [0;92mdata_loading=0.085, iteration=1.855, train_acc=66.86, train_loss_cross_entropy=1.164, train_loss_seg=1.164, train_macc=25.17, train_miou=18.73[0m)] 78% 470/601 [12:50<03:40,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.366, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 78% 471/601 [12:50<03:26,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.366, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 78% 471/601 [12:51<03:26,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.504, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 472/601 [12:51<03:21,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.504, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 472/601 [12:52<03:21,  1.56s/it, [0;92mdata_loading=0.011, iteration=1.041, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 473/601 [12:52<03:00,  1.41s/it, [0;92mdata_loading=0.011, iteration=1.041, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 473/601 [12:54<03:00,  1.41s/it, [0;92mdata_loading=0.009, iteration=1.826, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 474/601 [12:54<03:15,  1.54s/it, [0;92mdata_loading=0.009, iteration=1.826, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 474/601 [12:56<03:15,  1.54s/it, [0;92mdata_loading=0.092, iteration=1.524, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 475/601 [12:56<03:16,  1.56s/it, [0;92mdata_loading=0.092, iteration=1.524, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 475/601 [12:57<03:16,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.489, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 476/601 [12:57<03:12,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.489, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 476/601 [12:59<03:12,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.629, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 477/601 [12:59<03:14,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.629, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 79% 477/601 [13:00<03:14,  1.57s/it, [0;92mdata_loading=0.000, iteration=1.259, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 478/601 [13:00<03:01,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.259, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 478/601 [13:02<03:01,  1.48s/it, [0;92mdata_loading=0.011, iteration=1.681, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 479/601 [13:02<03:07,  1.54s/it, [0;92mdata_loading=0.011, iteration=1.681, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 479/601 [13:03<03:07,  1.54s/it, [0;92mdata_loading=0.101, iteration=1.237, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 480/601 [13:03<02:59,  1.48s/it, [0;92mdata_loading=0.101, iteration=1.237, train_acc=66.95, train_loss_cross_entropy=1.160, train_loss_seg=1.160, train_macc=25.19, train_miou=18.73[0m)] 80% 480/601 [13:05<02:59,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.501, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 481/601 [13:05<02:58,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.501, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 481/601 [13:06<02:58,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.444, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 482/601 [13:06<02:55,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.444, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 482/601 [13:07<02:55,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.056, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 483/601 [13:07<02:39,  1.35s/it, [0;92mdata_loading=0.000, iteration=1.056, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 80% 483/601 [13:09<02:39,  1.35s/it, [0;92mdata_loading=0.019, iteration=2.138, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 484/601 [13:09<03:06,  1.59s/it, [0;92mdata_loading=0.019, iteration=2.138, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 484/601 [13:11<03:06,  1.59s/it, [0;92mdata_loading=0.022, iteration=1.591, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 485/601 [13:11<03:05,  1.60s/it, [0;92mdata_loading=0.022, iteration=1.591, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 485/601 [13:12<03:05,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.304, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 486/601 [13:12<02:53,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.304, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 486/601 [13:14<02:53,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.803, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 487/601 [13:14<03:02,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.803, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 487/601 [13:16<03:02,  1.60s/it, [0;92mdata_loading=0.011, iteration=1.691, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 488/601 [13:16<03:04,  1.63s/it, [0;92mdata_loading=0.011, iteration=1.691, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 488/601 [13:17<03:04,  1.63s/it, [0;92mdata_loading=0.010, iteration=1.834, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 489/601 [13:17<03:09,  1.69s/it, [0;92mdata_loading=0.010, iteration=1.834, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 81% 489/601 [13:19<03:09,  1.69s/it, [0;92mdata_loading=0.085, iteration=1.030, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 82% 490/601 [13:19<02:48,  1.52s/it, [0;92mdata_loading=0.085, iteration=1.030, train_acc=67.09, train_loss_cross_entropy=1.153, train_loss_seg=1.153, train_macc=25.25, train_miou=18.77[0m)] 82% 490/601 [13:20<02:48,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.463, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 491/601 [13:20<02:45,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.463, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 491/601 [13:21<02:45,  1.50s/it, [0;92mdata_loading=0.000, iteration=0.982, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 492/601 [13:21<02:26,  1.35s/it, [0;92mdata_loading=0.000, iteration=0.982, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 492/601 [13:23<02:26,  1.35s/it, [0;92mdata_loading=0.012, iteration=1.651, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 493/601 [13:23<02:35,  1.44s/it, [0;92mdata_loading=0.012, iteration=1.651, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 493/601 [13:25<02:35,  1.44s/it, [0;92mdata_loading=0.010, iteration=1.835, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 494/601 [13:25<02:47,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.835, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 494/601 [13:26<02:47,  1.56s/it, [0;92mdata_loading=0.085, iteration=1.370, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 495/601 [13:26<02:42,  1.53s/it, [0;92mdata_loading=0.085, iteration=1.370, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 82% 495/601 [13:27<02:42,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.389, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 496/601 [13:27<02:36,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.389, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 496/601 [13:29<02:36,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.591, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 497/601 [13:29<02:38,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.591, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 497/601 [13:31<02:38,  1.52s/it, [0;92mdata_loading=0.011, iteration=1.765, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 498/601 [13:31<02:44,  1.60s/it, [0;92mdata_loading=0.011, iteration=1.765, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 498/601 [13:32<02:44,  1.60s/it, [0;92mdata_loading=0.013, iteration=1.383, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 499/601 [13:32<02:36,  1.54s/it, [0;92mdata_loading=0.013, iteration=1.383, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 499/601 [13:34<02:36,  1.54s/it, [0;92mdata_loading=0.106, iteration=1.646, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 500/601 [13:34<02:41,  1.60s/it, [0;92mdata_loading=0.106, iteration=1.646, train_acc=67.07, train_loss_cross_entropy=1.155, train_loss_seg=1.155, train_macc=25.23, train_miou=18.74[0m)] 83% 500/601 [13:36<02:41,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.775, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 83% 501/601 [13:36<02:45,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.775, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 83% 501/601 [13:37<02:45,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.483, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 502/601 [13:37<02:38,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.483, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 502/601 [13:39<02:38,  1.60s/it, [0;92mdata_loading=0.021, iteration=1.784, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 503/601 [13:39<02:43,  1.66s/it, [0;92mdata_loading=0.021, iteration=1.784, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 503/601 [13:40<02:43,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.137, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 504/601 [13:40<02:26,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.137, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 504/601 [13:42<02:26,  1.51s/it, [0;92mdata_loading=0.101, iteration=1.970, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 505/601 [13:42<02:40,  1.68s/it, [0;92mdata_loading=0.101, iteration=1.970, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 505/601 [13:44<02:40,  1.68s/it, [0;92mdata_loading=0.000, iteration=1.413, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 506/601 [13:44<02:31,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.413, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 506/601 [13:45<02:31,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.701, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 507/601 [13:45<02:33,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.701, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 84% 507/601 [13:47<02:33,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.366, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 508/601 [13:47<02:24,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.366, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 508/601 [13:48<02:24,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.496, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 509/601 [13:48<02:21,  1.54s/it, [0;92mdata_loading=0.011, iteration=1.496, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 509/601 [13:50<02:21,  1.54s/it, [0;92mdata_loading=0.092, iteration=1.455, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 510/601 [13:50<02:20,  1.54s/it, [0;92mdata_loading=0.092, iteration=1.455, train_acc=66.86, train_loss_cross_entropy=1.162, train_loss_seg=1.162, train_macc=25.61, train_miou=19.07[0m)] 85% 510/601 [13:51<02:20,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.206, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 511/601 [13:51<02:09,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.206, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 511/601 [13:52<02:09,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.461, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 512/601 [13:52<02:08,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.461, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 512/601 [13:54<02:08,  1.45s/it, [0;92mdata_loading=0.012, iteration=1.616, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 513/601 [13:54<02:12,  1.50s/it, [0;92mdata_loading=0.012, iteration=1.616, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 85% 513/601 [13:56<02:12,  1.50s/it, [0;92mdata_loading=0.010, iteration=1.640, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 514/601 [13:56<02:14,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.640, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 514/601 [13:57<02:14,  1.55s/it, [0;92mdata_loading=0.082, iteration=1.677, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 515/601 [13:57<02:18,  1.61s/it, [0;92mdata_loading=0.082, iteration=1.677, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 515/601 [13:59<02:18,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.742, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 516/601 [13:59<02:20,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.742, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 516/601 [14:01<02:20,  1.65s/it, [0;92mdata_loading=0.000, iteration=1.423, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 517/601 [14:01<02:12,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.423, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 517/601 [14:02<02:12,  1.58s/it, [0;92mdata_loading=0.022, iteration=1.724, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 518/601 [14:02<02:15,  1.63s/it, [0;92mdata_loading=0.022, iteration=1.724, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 518/601 [14:04<02:15,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.581, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 519/601 [14:04<02:12,  1.62s/it, [0;92mdata_loading=0.000, iteration=1.581, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 86% 519/601 [14:05<02:12,  1.62s/it, [0;92mdata_loading=0.093, iteration=1.307, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 87% 520/601 [14:05<02:05,  1.55s/it, [0;92mdata_loading=0.093, iteration=1.307, train_acc=66.86, train_loss_cross_entropy=1.167, train_loss_seg=1.167, train_macc=26.12, train_miou=19.48[0m)] 87% 520/601 [14:06<02:05,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.124, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 521/601 [14:06<01:53,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.124, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 521/601 [14:08<01:53,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.479, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 522/601 [14:08<01:53,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.479, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 522/601 [14:09<01:53,  1.44s/it, [0;92mdata_loading=0.011, iteration=1.306, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 523/601 [14:09<01:49,  1.40s/it, [0;92mdata_loading=0.011, iteration=1.306, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 523/601 [14:11<01:49,  1.40s/it, [0;92mdata_loading=0.009, iteration=1.969, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 524/601 [14:11<02:01,  1.58s/it, [0;92mdata_loading=0.009, iteration=1.969, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 524/601 [14:13<02:01,  1.58s/it, [0;92mdata_loading=0.084, iteration=1.787, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 525/601 [14:13<02:06,  1.67s/it, [0;92mdata_loading=0.084, iteration=1.787, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 87% 525/601 [14:15<02:06,  1.67s/it, [0;92mdata_loading=0.000, iteration=1.427, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 526/601 [14:15<01:59,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.427, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 526/601 [14:15<01:59,  1.59s/it, [0;92mdata_loading=0.000, iteration=0.946, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 527/601 [14:15<01:43,  1.40s/it, [0;92mdata_loading=0.000, iteration=0.946, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 527/601 [14:17<01:43,  1.40s/it, [0;92mdata_loading=0.010, iteration=1.478, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 528/601 [14:17<01:44,  1.43s/it, [0;92mdata_loading=0.010, iteration=1.478, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 528/601 [14:19<01:44,  1.43s/it, [0;92mdata_loading=0.010, iteration=1.827, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 529/601 [14:19<01:51,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.827, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 529/601 [14:20<01:51,  1.55s/it, [0;92mdata_loading=0.087, iteration=1.594, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 530/601 [14:20<01:52,  1.59s/it, [0;92mdata_loading=0.087, iteration=1.594, train_acc=66.89, train_loss_cross_entropy=1.165, train_loss_seg=1.165, train_macc=26.16, train_miou=19.53[0m)] 88% 530/601 [14:22<01:52,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.934, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 88% 531/601 [14:22<01:58,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.934, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 88% 531/601 [14:24<01:58,  1.69s/it, [0;92mdata_loading=0.000, iteration=1.400, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 532/601 [14:24<01:50,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.400, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 532/601 [14:25<01:50,  1.61s/it, [0;92mdata_loading=0.009, iteration=1.261, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 533/601 [14:25<01:42,  1.51s/it, [0;92mdata_loading=0.009, iteration=1.261, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 533/601 [14:27<01:42,  1.51s/it, [0;92mdata_loading=0.010, iteration=2.058, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 534/601 [14:27<01:52,  1.67s/it, [0;92mdata_loading=0.010, iteration=2.058, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 534/601 [14:29<01:52,  1.67s/it, [0;92mdata_loading=0.043, iteration=1.407, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 535/601 [14:29<01:46,  1.61s/it, [0;92mdata_loading=0.043, iteration=1.407, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 535/601 [14:30<01:46,  1.61s/it, [0;92mdata_loading=0.000, iteration=1.428, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 536/601 [14:30<01:41,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.428, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 536/601 [14:32<01:41,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.508, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 537/601 [14:32<01:38,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.508, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 89% 537/601 [14:33<01:38,  1.54s/it, [0;92mdata_loading=0.036, iteration=1.659, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 538/601 [14:33<01:40,  1.59s/it, [0;92mdata_loading=0.036, iteration=1.659, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 538/601 [14:35<01:40,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.633, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 539/601 [14:35<01:39,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.633, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 539/601 [14:36<01:39,  1.60s/it, [0;92mdata_loading=0.106, iteration=1.425, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 540/601 [14:36<01:36,  1.58s/it, [0;92mdata_loading=0.106, iteration=1.425, train_acc=67.24, train_loss_cross_entropy=1.157, train_loss_seg=1.157, train_macc=26.49, train_miou=19.82[0m)] 90% 540/601 [14:38<01:36,  1.58s/it, [0;92mdata_loading=0.000, iteration=1.347, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 541/601 [14:38<01:30,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.347, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 541/601 [14:39<01:30,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.152, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 542/601 [14:39<01:22,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.152, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 542/601 [14:40<01:22,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.441, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 543/601 [14:40<01:22,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.441, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 90% 543/601 [14:42<01:22,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.591, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 544/601 [14:42<01:23,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.591, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 544/601 [14:43<01:23,  1.47s/it, [0;92mdata_loading=0.095, iteration=1.296, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 545/601 [14:43<01:20,  1.45s/it, [0;92mdata_loading=0.095, iteration=1.296, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 545/601 [14:45<01:20,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.316, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 546/601 [14:45<01:17,  1.41s/it, [0;92mdata_loading=0.000, iteration=1.316, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 546/601 [14:46<01:17,  1.41s/it, [0;92mdata_loading=0.000, iteration=1.265, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 547/601 [14:46<01:13,  1.36s/it, [0;92mdata_loading=0.000, iteration=1.265, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 547/601 [14:48<01:13,  1.36s/it, [0;92mdata_loading=0.011, iteration=1.653, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 548/601 [14:48<01:17,  1.45s/it, [0;92mdata_loading=0.011, iteration=1.653, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 548/601 [14:49<01:17,  1.45s/it, [0;92mdata_loading=0.000, iteration=1.568, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 549/601 [14:49<01:17,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.568, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 91% 549/601 [14:51<01:17,  1.49s/it, [0;92mdata_loading=0.086, iteration=1.432, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 92% 550/601 [14:51<01:16,  1.50s/it, [0;92mdata_loading=0.086, iteration=1.432, train_acc=67.33, train_loss_cross_entropy=1.150, train_loss_seg=1.150, train_macc=26.66, train_miou=19.94[0m)] 92% 550/601 [14:52<01:16,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.625, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 551/601 [14:52<01:16,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.625, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 551/601 [14:54<01:16,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.511, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 552/601 [14:54<01:14,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.511, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 552/601 [14:55<01:14,  1.53s/it, [0;92mdata_loading=0.010, iteration=1.586, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 553/601 [14:55<01:14,  1.55s/it, [0;92mdata_loading=0.010, iteration=1.586, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 553/601 [14:57<01:14,  1.55s/it, [0;92mdata_loading=0.011, iteration=1.764, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 554/601 [14:57<01:16,  1.62s/it, [0;92mdata_loading=0.011, iteration=1.764, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 554/601 [14:59<01:16,  1.62s/it, [0;92mdata_loading=0.092, iteration=1.462, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 555/601 [14:59<01:13,  1.60s/it, [0;92mdata_loading=0.092, iteration=1.462, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 92% 555/601 [15:00<01:13,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.425, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 556/601 [15:00<01:09,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.425, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 556/601 [15:02<01:09,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.517, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 557/601 [15:02<01:07,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.517, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 557/601 [15:03<01:07,  1.54s/it, [0;92mdata_loading=0.014, iteration=1.546, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 558/601 [15:03<01:06,  1.55s/it, [0;92mdata_loading=0.014, iteration=1.546, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 558/601 [15:05<01:06,  1.55s/it, [0;92mdata_loading=0.009, iteration=1.542, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 559/601 [15:05<01:04,  1.55s/it, [0;92mdata_loading=0.009, iteration=1.542, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 559/601 [15:06<01:04,  1.55s/it, [0;92mdata_loading=0.085, iteration=1.515, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 560/601 [15:06<01:04,  1.56s/it, [0;92mdata_loading=0.085, iteration=1.515, train_acc=67.52, train_loss_cross_entropy=1.145, train_loss_seg=1.145, train_macc=26.93, train_miou=20.17[0m)] 93% 560/601 [15:08<01:04,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.373, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 93% 561/601 [15:08<01:00,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.373, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 93% 561/601 [15:09<01:00,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.421, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 562/601 [15:09<00:57,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.421, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 562/601 [15:11<00:57,  1.48s/it, [0;92mdata_loading=0.016, iteration=1.458, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 563/601 [15:11<00:56,  1.48s/it, [0;92mdata_loading=0.016, iteration=1.458, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 563/601 [15:12<00:56,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.566, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 564/601 [15:12<00:55,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.566, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 564/601 [15:14<00:55,  1.51s/it, [0;92mdata_loading=0.095, iteration=1.583, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 565/601 [15:14<00:56,  1.56s/it, [0;92mdata_loading=0.095, iteration=1.583, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 565/601 [15:16<00:56,  1.56s/it, [0;92mdata_loading=0.000, iteration=1.703, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 566/601 [15:16<00:56,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.703, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 566/601 [15:17<00:56,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.294, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 567/601 [15:17<00:51,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.294, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 94% 567/601 [15:19<00:51,  1.51s/it, [0;92mdata_loading=0.010, iteration=1.600, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 568/601 [15:19<00:50,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.600, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 568/601 [15:20<00:50,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.360, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 569/601 [15:20<00:47,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.360, train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 569/601 [15:21<00:47,  1.49s/it, [0;92mdata_loading=0.091, iteration=1.37 , train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 570/601 [15:21<00:45,  1.48s/it, [0;92mdata_loading=0.091, iteration=1.37 , train_acc=67.66, train_loss_cross_entropy=1.139, train_loss_seg=1.139, train_macc=27.31, train_miou=20.48[0m)] 95% 570/601 [15:23<00:45,  1.48s/it, [0;92mdata_loading=0.000, iteration=1.244, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 571/601 [15:23<00:42,  1.41s/it, [0;92mdata_loading=0.000, iteration=1.244, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 571/601 [15:24<00:42,  1.41s/it, [0;92mdata_loading=0.000, iteration=1.384, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 572/601 [15:24<00:40,  1.40s/it, [0;92mdata_loading=0.000, iteration=1.384, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 572/601 [15:26<00:40,  1.40s/it, [0;92mdata_loading=0.012, iteration=1.579, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 573/601 [15:26<00:40,  1.46s/it, [0;92mdata_loading=0.012, iteration=1.579, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 95% 573/601 [15:27<00:40,  1.46s/it, [0;92mdata_loading=0.010, iteration=1.666, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 574/601 [15:27<00:41,  1.52s/it, [0;92mdata_loading=0.010, iteration=1.666, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 574/601 [15:29<00:41,  1.52s/it, [0;92mdata_loading=0.019, iteration=1.516, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 575/601 [15:29<00:39,  1.53s/it, [0;92mdata_loading=0.019, iteration=1.516, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 575/601 [15:30<00:39,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.412, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 576/601 [15:30<00:37,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.412, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 576/601 [15:32<00:37,  1.49s/it, [0;92mdata_loading=0.253, iteration=1.789, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 577/601 [15:32<00:39,  1.66s/it, [0;92mdata_loading=0.253, iteration=1.789, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 577/601 [15:34<00:39,  1.66s/it, [0;92mdata_loading=0.000, iteration=1.473, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 578/601 [15:34<00:36,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.473, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 578/601 [15:35<00:36,  1.60s/it, [0;92mdata_loading=0.000, iteration=1.427, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 579/601 [15:35<00:34,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.427, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 96% 579/601 [15:37<00:34,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.365, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 97% 580/601 [15:37<00:31,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.365, train_acc=67.77, train_loss_cross_entropy=1.133, train_loss_seg=1.133, train_macc=28.04, train_miou=21.13[0m)] 97% 580/601 [15:38<00:31,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.621, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 581/601 [15:38<00:30,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.621, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 581/601 [15:40<00:30,  1.53s/it, [0;92mdata_loading=0.021, iteration=1.452, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 582/601 [15:40<00:28,  1.52s/it, [0;92mdata_loading=0.021, iteration=1.452, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 582/601 [15:41<00:28,  1.52s/it, [0;92mdata_loading=0.000, iteration=1.367, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 583/601 [15:41<00:26,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.367, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 583/601 [15:43<00:26,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.725, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 584/601 [15:43<00:26,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.725, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 584/601 [15:44<00:26,  1.55s/it, [0;92mdata_loading=0.000, iteration=1.494, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 585/601 [15:44<00:24,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.494, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 97% 585/601 [15:46<00:24,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.458, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 586/601 [15:46<00:22,  1.51s/it, [0;92mdata_loading=0.000, iteration=1.458, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 586/601 [15:47<00:22,  1.51s/it, [0;92mdata_loading=0.008, iteration=1.179, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 587/601 [15:47<00:19,  1.41s/it, [0;92mdata_loading=0.008, iteration=1.179, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 587/601 [15:49<00:19,  1.41s/it, [0;92mdata_loading=0.007, iteration=1.757, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 588/601 [15:49<00:19,  1.52s/it, [0;92mdata_loading=0.007, iteration=1.757, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 588/601 [15:51<00:19,  1.52s/it, [0;92mdata_loading=0.164, iteration=1.717, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 589/601 [15:51<00:19,  1.63s/it, [0;92mdata_loading=0.164, iteration=1.717, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 589/601 [15:52<00:19,  1.63s/it, [0;92mdata_loading=0.000, iteration=1.329, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 590/601 [15:52<00:16,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.329, train_acc=67.85, train_loss_cross_entropy=1.129, train_loss_seg=1.129, train_macc=28.05, train_miou=21.12[0m)] 98% 590/601 [15:54<00:16,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.695, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 98% 591/601 [15:54<00:15,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.695, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 98% 591/601 [15:55<00:15,  1.59s/it, [0;92mdata_loading=0.000, iteration=1.295, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 592/601 [15:55<00:13,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.295, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 592/601 [15:56<00:13,  1.50s/it, [0;92mdata_loading=0.000, iteration=1.453, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 593/601 [15:56<00:11,  1.49s/it, [0;92mdata_loading=0.000, iteration=1.453, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 593/601 [15:58<00:11,  1.49s/it, [0;92mdata_loading=0.092, iteration=1.341, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 594/601 [15:58<00:10,  1.47s/it, [0;92mdata_loading=0.092, iteration=1.341, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 594/601 [15:59<00:10,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.316, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 595/601 [15:59<00:08,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.316, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 595/601 [16:01<00:08,  1.42s/it, [0;92mdata_loading=0.000, iteration=1.477, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 596/601 [16:01<00:07,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.477, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 596/601 [16:02<00:07,  1.44s/it, [0;92mdata_loading=0.000, iteration=1.773, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 597/601 [16:02<00:06,  1.54s/it, [0;92mdata_loading=0.000, iteration=1.773, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)] 99% 597/601 [16:04<00:06,  1.54s/it, [0;92mdata_loading=0.010, iteration=1.598, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 598/601 [16:04<00:04,  1.56s/it, [0;92mdata_loading=0.010, iteration=1.598, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 598/601 [16:05<00:04,  1.56s/it, [0;92mdata_loading=0.026, iteration=1.241, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 599/601 [16:05<00:02,  1.47s/it, [0;92mdata_loading=0.026, iteration=1.241, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 599/601 [16:07<00:02,  1.47s/it, [0;92mdata_loading=0.000, iteration=1.663, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 600/601 [16:07<00:01,  1.53s/it, [0;92mdata_loading=0.000, iteration=1.663, train_acc=67.69, train_loss_cross_entropy=1.137, train_loss_seg=1.137, train_macc=28.08, train_miou=21.11[0m)]100% 600/601 [16:08<00:01,  1.53s/it, [0;92mdata_loading=0.000, iteration=0.785, train_acc=67.83, train_loss_cross_entropy=1.125, train_loss_seg=1.125, train_macc=28.11, train_miou=21.15[0m)]100% 601/601 [16:08<00:00,  1.31s/it, [0;92mdata_loading=0.000, iteration=0.785, train_acc=67.83, train_loss_cross_entropy=1.125, train_loss_seg=1.125, train_macc=28.11, train_miou=21.15[0m)]100% 601/601 [16:08<00:00,  1.61s/it, [0;92mdata_loading=0.000, iteration=0.785, train_acc=67.83, train_loss_cross_entropy=1.125, train_loss_seg=1.125, train_macc=28.11, train_miou=21.15[0m)]this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a train dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
[2022-10-18 14:35:52,928][torch_points3d.trainer][INFO] - Learning rate = 0.098850
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.

  0% 0/156 [00:00<?, ?it/s]  0% 0/156 [00:26<?, ?it/s, [0;93mval_acc=76.92, val_loss_cross_entropy=0.836, val_loss_seg=0.836, val_macc=50.03, val_miou=29.89[0m)]  1% 1/156 [00:26<1:08:31, 26.53s/it, [0;93mval_acc=76.92, val_loss_cross_entropy=0.836, val_loss_seg=0.836, val_macc=50.03, val_miou=29.89[0m)]  1% 1/156 [00:27<1:08:31, 26.53s/it, [0;93mval_acc=81.08, val_loss_cross_entropy=0.659, val_loss_seg=0.659, val_macc=50.90, val_miou=31.99[0m)]  1% 2/156 [00:27<29:04, 11.33s/it, [0;93mval_acc=81.08, val_loss_cross_entropy=0.659, val_loss_seg=0.659, val_macc=50.90, val_miou=31.99[0m)]    1% 2/156 [00:27<29:04, 11.33s/it, [0;93mval_acc=80.32, val_loss_cross_entropy=0.668, val_loss_seg=0.668, val_macc=46.63, val_miou=27.36[0m)]  2% 3/156 [00:27<16:27,  6.45s/it, [0;93mval_acc=80.32, val_loss_cross_entropy=0.668, val_loss_seg=0.668, val_macc=46.63, val_miou=27.36[0m)]  2% 3/156 [00:28<16:27,  6.45s/it, [0;93mval_acc=79.15, val_loss_cross_entropy=0.695, val_loss_seg=0.695, val_macc=47.32, val_miou=27.17[0m)]  3% 4/156 [00:28<10:34,  4.17s/it, [0;93mval_acc=79.15, val_loss_cross_entropy=0.695, val_loss_seg=0.695, val_macc=47.32, val_miou=27.17[0m)]  3% 4/156 [00:29<10:34,  4.17s/it, [0;93mval_acc=80.85, val_loss_cross_entropy=0.658, val_loss_seg=0.658, val_macc=50.24, val_miou=31.81[0m)]  3% 5/156 [00:29<07:28,  2.97s/it, [0;93mval_acc=80.85, val_loss_cross_entropy=0.658, val_loss_seg=0.658, val_macc=50.24, val_miou=31.81[0m)]  3% 5/156 [00:31<07:28,  2.97s/it, [0;93mval_acc=80.44, val_loss_cross_entropy=0.666, val_loss_seg=0.666, val_macc=45.83, val_miou=37.40[0m)]  4% 6/156 [00:31<06:24,  2.56s/it, [0;93mval_acc=80.44, val_loss_cross_entropy=0.666, val_loss_seg=0.666, val_macc=45.83, val_miou=37.40[0m)]  4% 6/156 [00:31<06:24,  2.56s/it, [0;93mval_acc=79.36, val_loss_cross_entropy=0.713, val_loss_seg=0.713, val_macc=46.37, val_miou=37.53[0m)]  4% 7/156 [00:31<04:48,  1.94s/it, [0;93mval_acc=79.36, val_loss_cross_entropy=0.713, val_loss_seg=0.713, val_macc=46.37, val_miou=37.53[0m)]  4% 7/156 [00:32<04:48,  1.94s/it, [0;93mval_acc=77.50, val_loss_cross_entropy=0.763, val_loss_seg=0.763, val_macc=45.76, val_miou=36.25[0m)]  5% 8/156 [00:32<03:44,  1.52s/it, [0;93mval_acc=77.50, val_loss_cross_entropy=0.763, val_loss_seg=0.763, val_macc=45.76, val_miou=36.25[0m)]  5% 8/156 [00:32<03:44,  1.52s/it, [0;93mval_acc=76.74, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=45.58, val_miou=35.74[0m)]  6% 9/156 [00:32<02:58,  1.22s/it, [0;93mval_acc=76.74, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=45.58, val_miou=35.74[0m)]  6% 9/156 [00:33<02:58,  1.22s/it, [0;93mval_acc=76.80, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=45.36, val_miou=35.67[0m)]  6% 10/156 [00:33<02:37,  1.08s/it, [0;93mval_acc=76.80, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=45.36, val_miou=35.67[0m)]  6% 10/156 [00:34<02:37,  1.08s/it, [0;93mval_acc=76.77, val_loss_cross_entropy=0.782, val_loss_seg=0.782, val_macc=45.65, val_miou=36.15[0m)]  7% 11/156 [00:34<02:15,  1.07it/s, [0;93mval_acc=76.77, val_loss_cross_entropy=0.782, val_loss_seg=0.782, val_macc=45.65, val_miou=36.15[0m)]  7% 11/156 [00:34<02:15,  1.07it/s, [0;93mval_acc=76.65, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=45.17, val_miou=35.29[0m)]  8% 12/156 [00:34<02:00,  1.20it/s, [0;93mval_acc=76.65, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=45.17, val_miou=35.29[0m)]  8% 12/156 [00:35<02:00,  1.20it/s, [0;93mval_acc=77.13, val_loss_cross_entropy=0.768, val_loss_seg=0.768, val_macc=45.17, val_miou=35.29[0m)]  8% 13/156 [00:35<01:48,  1.32it/s, [0;93mval_acc=77.13, val_loss_cross_entropy=0.768, val_loss_seg=0.768, val_macc=45.17, val_miou=35.29[0m)]  8% 13/156 [00:36<01:48,  1.32it/s, [0;93mval_acc=77.57, val_loss_cross_entropy=0.747, val_loss_seg=0.747, val_macc=44.87, val_miou=34.99[0m)]  9% 14/156 [00:36<01:39,  1.42it/s, [0;93mval_acc=77.57, val_loss_cross_entropy=0.747, val_loss_seg=0.747, val_macc=44.87, val_miou=34.99[0m)]  9% 14/156 [00:36<01:39,  1.42it/s, [0;93mval_acc=77.54, val_loss_cross_entropy=0.741, val_loss_seg=0.741, val_macc=45.16, val_miou=35.10[0m)] 10% 15/156 [00:36<01:35,  1.48it/s, [0;93mval_acc=77.54, val_loss_cross_entropy=0.741, val_loss_seg=0.741, val_macc=45.16, val_miou=35.10[0m)] 10% 15/156 [00:37<01:35,  1.48it/s, [0;93mval_acc=78.07, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.15, val_miou=35.07[0m)] 10% 16/156 [00:37<01:34,  1.48it/s, [0;93mval_acc=78.07, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.15, val_miou=35.07[0m)] 10% 16/156 [00:38<01:34,  1.48it/s, [0;93mval_acc=78.48, val_loss_cross_entropy=0.713, val_loss_seg=0.713, val_macc=45.09, val_miou=35.0 [0m)] 11% 17/156 [00:38<01:32,  1.50it/s, [0;93mval_acc=78.48, val_loss_cross_entropy=0.713, val_loss_seg=0.713, val_macc=45.09, val_miou=35.0 [0m)] 11% 17/156 [00:38<01:32,  1.50it/s, [0;93mval_acc=78.92, val_loss_cross_entropy=0.711, val_loss_seg=0.711, val_macc=45.00, val_miou=34.97[0m)] 12% 18/156 [00:38<01:31,  1.50it/s, [0;93mval_acc=78.92, val_loss_cross_entropy=0.711, val_loss_seg=0.711, val_macc=45.00, val_miou=34.97[0m)] 12% 18/156 [00:39<01:31,  1.50it/s, [0;93mval_acc=79.23, val_loss_cross_entropy=0.700, val_loss_seg=0.700, val_macc=45.31, val_miou=35.16[0m)] 12% 19/156 [00:39<01:26,  1.59it/s, [0;93mval_acc=79.23, val_loss_cross_entropy=0.700, val_loss_seg=0.700, val_macc=45.31, val_miou=35.16[0m)] 12% 19/156 [00:39<01:26,  1.59it/s, [0;93mval_acc=79.07, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.75, val_miou=35.39[0m)] 13% 20/156 [00:39<01:17,  1.75it/s, [0;93mval_acc=79.07, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.75, val_miou=35.39[0m)] 13% 20/156 [00:40<01:17,  1.75it/s, [0;93mval_acc=78.59, val_loss_cross_entropy=0.730, val_loss_seg=0.730, val_macc=45.70, val_miou=34.75[0m)] 13% 21/156 [00:40<01:23,  1.61it/s, [0;93mval_acc=78.59, val_loss_cross_entropy=0.730, val_loss_seg=0.730, val_macc=45.70, val_miou=34.75[0m)] 13% 21/156 [00:40<01:23,  1.61it/s, [0;93mval_acc=78.39, val_loss_cross_entropy=0.736, val_loss_seg=0.736, val_macc=45.67, val_miou=34.03[0m)] 14% 22/156 [00:40<01:20,  1.67it/s, [0;93mval_acc=78.39, val_loss_cross_entropy=0.736, val_loss_seg=0.736, val_macc=45.67, val_miou=34.03[0m)] 14% 22/156 [00:41<01:20,  1.67it/s, [0;93mval_acc=78.35, val_loss_cross_entropy=0.740, val_loss_seg=0.740, val_macc=45.50, val_miou=34.10[0m)] 15% 23/156 [00:41<01:18,  1.69it/s, [0;93mval_acc=78.35, val_loss_cross_entropy=0.740, val_loss_seg=0.740, val_macc=45.50, val_miou=34.10[0m)] 15% 23/156 [00:42<01:18,  1.69it/s, [0;93mval_acc=78.58, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.86, val_miou=34.45[0m)] 15% 24/156 [00:42<01:15,  1.75it/s, [0;93mval_acc=78.58, val_loss_cross_entropy=0.720, val_loss_seg=0.720, val_macc=45.86, val_miou=34.45[0m)] 15% 24/156 [00:42<01:15,  1.75it/s, [0;93mval_acc=78.47, val_loss_cross_entropy=0.725, val_loss_seg=0.725, val_macc=45.92, val_miou=34.63[0m)] 16% 25/156 [00:42<01:13,  1.78it/s, [0;93mval_acc=78.47, val_loss_cross_entropy=0.725, val_loss_seg=0.725, val_macc=45.92, val_miou=34.63[0m)] 16% 25/156 [00:43<01:13,  1.78it/s, [0;93mval_acc=78.34, val_loss_cross_entropy=0.738, val_loss_seg=0.738, val_macc=46.28, val_miou=34.81[0m)] 17% 26/156 [00:43<01:09,  1.87it/s, [0;93mval_acc=78.34, val_loss_cross_entropy=0.738, val_loss_seg=0.738, val_macc=46.28, val_miou=34.81[0m)] 17% 26/156 [00:43<01:09,  1.87it/s, [0;93mval_acc=78.24, val_loss_cross_entropy=0.746, val_loss_seg=0.746, val_macc=45.89, val_miou=35.54[0m)] 17% 27/156 [00:43<01:06,  1.93it/s, [0;93mval_acc=78.24, val_loss_cross_entropy=0.746, val_loss_seg=0.746, val_macc=45.89, val_miou=35.54[0m)] 17% 27/156 [00:44<01:06,  1.93it/s, [0;93mval_acc=78.22, val_loss_cross_entropy=0.749, val_loss_seg=0.749, val_macc=46.14, val_miou=36.19[0m)] 18% 28/156 [00:44<01:07,  1.90it/s, [0;93mval_acc=78.22, val_loss_cross_entropy=0.749, val_loss_seg=0.749, val_macc=46.14, val_miou=36.19[0m)] 18% 28/156 [00:45<01:07,  1.90it/s, [0;93mval_acc=78.27, val_loss_cross_entropy=0.749, val_loss_seg=0.749, val_macc=44.47, val_miou=35.29[0m)] 19% 29/156 [00:45<01:37,  1.30it/s, [0;93mval_acc=78.27, val_loss_cross_entropy=0.749, val_loss_seg=0.749, val_macc=44.47, val_miou=35.29[0m)] 19% 29/156 [00:46<01:37,  1.30it/s, [0;93mval_acc=78.93, val_loss_cross_entropy=0.733, val_loss_seg=0.733, val_macc=44.48, val_miou=35.45[0m)] 19% 30/156 [00:46<01:43,  1.22it/s, [0;93mval_acc=78.93, val_loss_cross_entropy=0.733, val_loss_seg=0.733, val_macc=44.48, val_miou=35.45[0m)] 19% 30/156 [00:46<01:43,  1.22it/s, [0;93mval_acc=78.82, val_loss_cross_entropy=0.736, val_loss_seg=0.736, val_macc=44.33, val_miou=35.38[0m)] 20% 31/156 [00:46<01:32,  1.35it/s, [0;93mval_acc=78.82, val_loss_cross_entropy=0.736, val_loss_seg=0.736, val_macc=44.33, val_miou=35.38[0m)] 20% 31/156 [00:47<01:32,  1.35it/s, [0;93mval_acc=78.79, val_loss_cross_entropy=0.741, val_loss_seg=0.741, val_macc=43.94, val_miou=35.03[0m)] 21% 32/156 [00:47<01:28,  1.41it/s, [0;93mval_acc=78.79, val_loss_cross_entropy=0.741, val_loss_seg=0.741, val_macc=43.94, val_miou=35.03[0m)] 21% 32/156 [00:48<01:28,  1.41it/s, [0;93mval_acc=78.40, val_loss_cross_entropy=0.752, val_loss_seg=0.752, val_macc=43.41, val_miou=34.49[0m)] 21% 33/156 [00:48<01:26,  1.42it/s, [0;93mval_acc=78.40, val_loss_cross_entropy=0.752, val_loss_seg=0.752, val_macc=43.41, val_miou=34.49[0m)] 21% 33/156 [00:50<01:26,  1.42it/s, [0;93mval_acc=77.62, val_loss_cross_entropy=0.768, val_loss_seg=0.768, val_macc=42.13, val_miou=33.51[0m)] 22% 34/156 [00:50<02:08,  1.05s/it, [0;93mval_acc=77.62, val_loss_cross_entropy=0.768, val_loss_seg=0.768, val_macc=42.13, val_miou=33.51[0m)] 22% 34/156 [00:54<02:08,  1.05s/it, [0;93mval_acc=76.96, val_loss_cross_entropy=0.777, val_loss_seg=0.777, val_macc=41.40, val_miou=32.97[0m)] 22% 35/156 [00:54<03:51,  1.91s/it, [0;93mval_acc=76.96, val_loss_cross_entropy=0.777, val_loss_seg=0.777, val_macc=41.40, val_miou=32.97[0m)] 22% 35/156 [00:54<03:51,  1.91s/it, [0;93mval_acc=76.86, val_loss_cross_entropy=0.780, val_loss_seg=0.780, val_macc=41.11, val_miou=32.85[0m)] 23% 36/156 [00:54<03:04,  1.54s/it, [0;93mval_acc=76.86, val_loss_cross_entropy=0.780, val_loss_seg=0.780, val_macc=41.11, val_miou=32.85[0m)] 23% 36/156 [00:55<03:04,  1.54s/it, [0;93mval_acc=76.51, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=40.94, val_miou=32.68[0m)] 24% 37/156 [00:55<02:32,  1.28s/it, [0;93mval_acc=76.51, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=40.94, val_miou=32.68[0m)] 24% 37/156 [00:56<02:32,  1.28s/it, [0;93mval_acc=76.13, val_loss_cross_entropy=0.800, val_loss_seg=0.800, val_macc=40.78, val_miou=32.57[0m)] 24% 38/156 [00:56<02:15,  1.15s/it, [0;93mval_acc=76.13, val_loss_cross_entropy=0.800, val_loss_seg=0.800, val_macc=40.78, val_miou=32.57[0m)] 24% 38/156 [01:01<02:15,  1.15s/it, [0;93mval_acc=75.82, val_loss_cross_entropy=0.806, val_loss_seg=0.806, val_macc=40.42, val_miou=32.26[0m)] 25% 39/156 [01:01<04:48,  2.47s/it, [0;93mval_acc=75.82, val_loss_cross_entropy=0.806, val_loss_seg=0.806, val_macc=40.42, val_miou=32.26[0m)] 25% 39/156 [01:02<04:48,  2.47s/it, [0;93mval_acc=76.09, val_loss_cross_entropy=0.802, val_loss_seg=0.802, val_macc=40.32, val_miou=32.27[0m)] 26% 40/156 [01:02<03:47,  1.96s/it, [0;93mval_acc=76.09, val_loss_cross_entropy=0.802, val_loss_seg=0.802, val_macc=40.32, val_miou=32.27[0m)] 26% 40/156 [01:03<03:47,  1.96s/it, [0;93mval_acc=76.14, val_loss_cross_entropy=0.801, val_loss_seg=0.801, val_macc=40.33, val_miou=32.31[0m)] 26% 41/156 [01:03<03:00,  1.57s/it, [0;93mval_acc=76.14, val_loss_cross_entropy=0.801, val_loss_seg=0.801, val_macc=40.33, val_miou=32.31[0m)] 26% 41/156 [01:03<03:00,  1.57s/it, [0;93mval_acc=76.01, val_loss_cross_entropy=0.809, val_loss_seg=0.809, val_macc=40.31, val_miou=32.31[0m)] 27% 42/156 [01:03<02:24,  1.27s/it, [0;93mval_acc=76.01, val_loss_cross_entropy=0.809, val_loss_seg=0.809, val_macc=40.31, val_miou=32.31[0m)] 27% 42/156 [01:04<02:24,  1.27s/it, [0;93mval_acc=76.17, val_loss_cross_entropy=0.802, val_loss_seg=0.802, val_macc=40.38, val_miou=32.36[0m)] 28% 43/156 [01:04<02:01,  1.07s/it, [0;93mval_acc=76.17, val_loss_cross_entropy=0.802, val_loss_seg=0.802, val_macc=40.38, val_miou=32.36[0m)] 28% 43/156 [01:04<02:01,  1.07s/it, [0;93mval_acc=76.17, val_loss_cross_entropy=0.801, val_loss_seg=0.801, val_macc=40.51, val_miou=32.44[0m)] 28% 44/156 [01:04<01:43,  1.09it/s, [0;93mval_acc=76.17, val_loss_cross_entropy=0.801, val_loss_seg=0.801, val_macc=40.51, val_miou=32.44[0m)] 28% 44/156 [01:05<01:43,  1.09it/s, [0;93mval_acc=76.25, val_loss_cross_entropy=0.797, val_loss_seg=0.797, val_macc=40.61, val_miou=32.52[0m)] 29% 45/156 [01:05<01:29,  1.24it/s, [0;93mval_acc=76.25, val_loss_cross_entropy=0.797, val_loss_seg=0.797, val_macc=40.61, val_miou=32.52[0m)] 29% 45/156 [01:06<01:29,  1.24it/s, [0;93mval_acc=76.00, val_loss_cross_entropy=0.807, val_loss_seg=0.807, val_macc=40.57, val_miou=32.48[0m)] 29% 46/156 [01:06<01:23,  1.32it/s, [0;93mval_acc=76.00, val_loss_cross_entropy=0.807, val_loss_seg=0.807, val_macc=40.57, val_miou=32.48[0m)] 29% 46/156 [01:06<01:23,  1.32it/s, [0;93mval_acc=75.91, val_loss_cross_entropy=0.810, val_loss_seg=0.810, val_macc=40.50, val_miou=32.37[0m)] 30% 47/156 [01:06<01:22,  1.32it/s, [0;93mval_acc=75.91, val_loss_cross_entropy=0.810, val_loss_seg=0.810, val_macc=40.50, val_miou=32.37[0m)] 30% 47/156 [01:07<01:22,  1.32it/s, [0;93mval_acc=75.53, val_loss_cross_entropy=0.819, val_loss_seg=0.819, val_macc=40.26, val_miou=32.13[0m)] 31% 48/156 [01:07<01:27,  1.23it/s, [0;93mval_acc=75.53, val_loss_cross_entropy=0.819, val_loss_seg=0.819, val_macc=40.26, val_miou=32.13[0m)] 31% 48/156 [01:08<01:27,  1.23it/s, [0;93mval_acc=75.68, val_loss_cross_entropy=0.811, val_loss_seg=0.811, val_macc=40.29, val_miou=32.19[0m)] 31% 49/156 [01:08<01:20,  1.32it/s, [0;93mval_acc=75.68, val_loss_cross_entropy=0.811, val_loss_seg=0.811, val_macc=40.29, val_miou=32.19[0m)] 31% 49/156 [01:09<01:20,  1.32it/s, [0;93mval_acc=75.75, val_loss_cross_entropy=0.809, val_loss_seg=0.809, val_macc=40.27, val_miou=32.12[0m)] 32% 50/156 [01:09<01:21,  1.31it/s, [0;93mval_acc=75.75, val_loss_cross_entropy=0.809, val_loss_seg=0.809, val_macc=40.27, val_miou=32.12[0m)] 32% 50/156 [01:10<01:21,  1.31it/s, [0;93mval_acc=75.93, val_loss_cross_entropy=0.806, val_loss_seg=0.806, val_macc=40.11, val_miou=31.97[0m)] 33% 51/156 [01:10<01:25,  1.23it/s, [0;93mval_acc=75.93, val_loss_cross_entropy=0.806, val_loss_seg=0.806, val_macc=40.11, val_miou=31.97[0m)] 33% 51/156 [01:11<01:25,  1.23it/s, [0;93mval_acc=75.88, val_loss_cross_entropy=0.805, val_loss_seg=0.805, val_macc=39.98, val_miou=31.68[0m)] 33% 52/156 [01:11<01:26,  1.21it/s, [0;93mval_acc=75.88, val_loss_cross_entropy=0.805, val_loss_seg=0.805, val_macc=39.98, val_miou=31.68[0m)] 33% 52/156 [01:11<01:26,  1.21it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.803, val_loss_seg=0.803, val_macc=39.92, val_miou=31.58[0m)] 34% 53/156 [01:11<01:20,  1.27it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.803, val_loss_seg=0.803, val_macc=39.92, val_miou=31.58[0m)] 34% 53/156 [01:12<01:20,  1.27it/s, [0;93mval_acc=76.06, val_loss_cross_entropy=0.796, val_loss_seg=0.796, val_macc=40.07, val_miou=31.76[0m)] 35% 54/156 [01:12<01:11,  1.42it/s, [0;93mval_acc=76.06, val_loss_cross_entropy=0.796, val_loss_seg=0.796, val_macc=40.07, val_miou=31.76[0m)] 35% 54/156 [01:12<01:11,  1.42it/s, [0;93mval_acc=76.24, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=40.05, val_miou=31.80[0m)] 35% 55/156 [01:12<01:07,  1.49it/s, [0;93mval_acc=76.24, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=40.05, val_miou=31.80[0m)] 35% 55/156 [01:13<01:07,  1.49it/s, [0;93mval_acc=76.21, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.40, val_miou=32.13[0m)] 36% 56/156 [01:13<01:07,  1.49it/s, [0;93mval_acc=76.21, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.40, val_miou=32.13[0m)] 36% 56/156 [01:14<01:07,  1.49it/s, [0;93mval_acc=75.89, val_loss_cross_entropy=0.798, val_loss_seg=0.798, val_macc=40.12, val_miou=31.92[0m)] 37% 57/156 [01:14<01:08,  1.44it/s, [0;93mval_acc=75.89, val_loss_cross_entropy=0.798, val_loss_seg=0.798, val_macc=40.12, val_miou=31.92[0m)] 37% 57/156 [01:14<01:08,  1.44it/s, [0;93mval_acc=75.76, val_loss_cross_entropy=0.804, val_loss_seg=0.804, val_macc=39.86, val_miou=31.72[0m)] 37% 58/156 [01:14<01:04,  1.51it/s, [0;93mval_acc=75.76, val_loss_cross_entropy=0.804, val_loss_seg=0.804, val_macc=39.86, val_miou=31.72[0m)] 37% 58/156 [01:15<01:04,  1.51it/s, [0;93mval_acc=75.96, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=39.89, val_miou=31.77[0m)] 38% 59/156 [01:15<01:02,  1.55it/s, [0;93mval_acc=75.96, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=39.89, val_miou=31.77[0m)] 38% 59/156 [01:15<01:02,  1.55it/s, [0;93mval_acc=75.98, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=40.01, val_miou=31.88[0m)] 38% 60/156 [01:15<00:58,  1.63it/s, [0;93mval_acc=75.98, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=40.01, val_miou=31.88[0m)] 38% 60/156 [01:16<00:58,  1.63it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.794, val_loss_seg=0.794, val_macc=40.04, val_miou=31.89[0m)] 39% 61/156 [01:16<00:56,  1.68it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.794, val_loss_seg=0.794, val_macc=40.04, val_miou=31.89[0m)] 39% 61/156 [01:17<00:56,  1.68it/s, [0;93mval_acc=75.93, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.00, val_miou=31.85[0m)] 40% 62/156 [01:17<00:56,  1.66it/s, [0;93mval_acc=75.93, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.00, val_miou=31.85[0m)] 40% 62/156 [01:17<00:56,  1.66it/s, [0;93mval_acc=76.05, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.01, val_miou=31.86[0m)] 40% 63/156 [01:17<00:55,  1.68it/s, [0;93mval_acc=76.05, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.01, val_miou=31.86[0m)] 40% 63/156 [01:18<00:55,  1.68it/s, [0;93mval_acc=75.87, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.06, val_miou=31.85[0m)] 41% 64/156 [01:18<00:55,  1.65it/s, [0;93mval_acc=75.87, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.06, val_miou=31.85[0m)] 41% 64/156 [01:18<00:55,  1.65it/s, [0;93mval_acc=75.79, val_loss_cross_entropy=0.794, val_loss_seg=0.794, val_macc=40.10, val_miou=31.85[0m)] 42% 65/156 [01:18<00:53,  1.69it/s, [0;93mval_acc=75.79, val_loss_cross_entropy=0.794, val_loss_seg=0.794, val_macc=40.10, val_miou=31.85[0m)] 42% 65/156 [01:19<00:53,  1.69it/s, [0;93mval_acc=75.80, val_loss_cross_entropy=0.796, val_loss_seg=0.796, val_macc=40.14, val_miou=31.89[0m)] 42% 66/156 [01:19<00:53,  1.68it/s, [0;93mval_acc=75.80, val_loss_cross_entropy=0.796, val_loss_seg=0.796, val_macc=40.14, val_miou=31.89[0m)] 42% 66/156 [01:19<00:53,  1.68it/s, [0;93mval_acc=75.75, val_loss_cross_entropy=0.799, val_loss_seg=0.799, val_macc=40.44, val_miou=32.14[0m)] 43% 67/156 [01:19<00:48,  1.83it/s, [0;93mval_acc=75.75, val_loss_cross_entropy=0.799, val_loss_seg=0.799, val_macc=40.44, val_miou=32.14[0m)] 43% 67/156 [01:20<00:48,  1.83it/s, [0;93mval_acc=75.76, val_loss_cross_entropy=0.799, val_loss_seg=0.799, val_macc=40.55, val_miou=32.23[0m)] 44% 68/156 [01:20<00:48,  1.82it/s, [0;93mval_acc=75.76, val_loss_cross_entropy=0.799, val_loss_seg=0.799, val_macc=40.55, val_miou=32.23[0m)] 44% 68/156 [01:21<00:48,  1.82it/s, [0;93mval_acc=75.78, val_loss_cross_entropy=0.800, val_loss_seg=0.800, val_macc=40.54, val_miou=32.25[0m)] 44% 69/156 [01:21<00:51,  1.70it/s, [0;93mval_acc=75.78, val_loss_cross_entropy=0.800, val_loss_seg=0.800, val_macc=40.54, val_miou=32.25[0m)] 44% 69/156 [01:21<00:51,  1.70it/s, [0;93mval_acc=75.83, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=40.52, val_miou=32.05[0m)] 45% 70/156 [01:21<00:49,  1.75it/s, [0;93mval_acc=75.83, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=40.52, val_miou=32.05[0m)] 45% 70/156 [01:22<00:49,  1.75it/s, [0;93mval_acc=75.87, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.53, val_miou=31.91[0m)] 46% 71/156 [01:22<00:47,  1.78it/s, [0;93mval_acc=75.87, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.53, val_miou=31.91[0m)] 46% 71/156 [01:22<00:47,  1.78it/s, [0;93mval_acc=75.89, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.55, val_miou=31.93[0m)] 46% 72/156 [01:22<00:46,  1.82it/s, [0;93mval_acc=75.89, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.55, val_miou=31.93[0m)] 46% 72/156 [01:23<00:46,  1.82it/s, [0;93mval_acc=75.98, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.60, val_miou=31.97[0m)] 47% 73/156 [01:23<00:44,  1.85it/s, [0;93mval_acc=75.98, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=40.60, val_miou=31.97[0m)] 47% 73/156 [01:24<00:44,  1.85it/s, [0;93mval_acc=76.26, val_loss_cross_entropy=0.782, val_loss_seg=0.782, val_macc=40.65, val_miou=32.07[0m)] 47% 74/156 [01:24<00:48,  1.70it/s, [0;93mval_acc=76.26, val_loss_cross_entropy=0.782, val_loss_seg=0.782, val_macc=40.65, val_miou=32.07[0m)] 47% 74/156 [01:24<00:48,  1.70it/s, [0;93mval_acc=76.29, val_loss_cross_entropy=0.78 , val_loss_seg=0.78 , val_macc=40.62, val_miou=32.05[0m)] 48% 75/156 [01:24<00:47,  1.72it/s, [0;93mval_acc=76.29, val_loss_cross_entropy=0.78 , val_loss_seg=0.78 , val_macc=40.62, val_miou=32.05[0m)] 48% 75/156 [01:27<00:47,  1.72it/s, [0;93mval_acc=76.15, val_loss_cross_entropy=0.783, val_loss_seg=0.783, val_macc=40.58, val_miou=31.98[0m)] 49% 76/156 [01:27<01:32,  1.16s/it, [0;93mval_acc=76.15, val_loss_cross_entropy=0.783, val_loss_seg=0.783, val_macc=40.58, val_miou=31.98[0m)] 49% 76/156 [01:27<01:32,  1.16s/it, [0;93mval_acc=76.14, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.72, val_miou=32.10[0m)] 49% 77/156 [01:27<01:21,  1.03s/it, [0;93mval_acc=76.14, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.72, val_miou=32.10[0m)] 49% 77/156 [01:28<01:21,  1.03s/it, [0;93mval_acc=76.15, val_loss_cross_entropy=0.783, val_loss_seg=0.783, val_macc=40.83, val_miou=32.17[0m)] 50% 78/156 [01:28<01:08,  1.14it/s, [0;93mval_acc=76.15, val_loss_cross_entropy=0.783, val_loss_seg=0.783, val_macc=40.83, val_miou=32.17[0m)] 50% 78/156 [01:28<01:08,  1.14it/s, [0;93mval_acc=76.14, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.89, val_miou=32.23[0m)] 51% 79/156 [01:28<00:58,  1.31it/s, [0;93mval_acc=76.14, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.89, val_miou=32.23[0m)] 51% 79/156 [01:29<00:58,  1.31it/s, [0;93mval_acc=76.17, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.96, val_miou=32.26[0m)] 51% 80/156 [01:29<00:55,  1.38it/s, [0;93mval_acc=76.17, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=40.96, val_miou=32.26[0m)] 51% 80/156 [01:31<00:55,  1.38it/s, [0;93mval_acc=76.09, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=40.95, val_miou=32.18[0m)] 52% 81/156 [01:31<01:16,  1.02s/it, [0;93mval_acc=76.09, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=40.95, val_miou=32.18[0m)] 52% 81/156 [01:31<01:16,  1.02s/it, [0;93mval_acc=75.99, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.86, val_miou=32.04[0m)] 53% 82/156 [01:31<01:06,  1.12it/s, [0;93mval_acc=75.99, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=40.86, val_miou=32.04[0m)] 53% 82/156 [01:32<01:06,  1.12it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=41.04, val_miou=32.19[0m)] 53% 83/156 [01:32<00:58,  1.25it/s, [0;93mval_acc=75.94, val_loss_cross_entropy=0.795, val_loss_seg=0.795, val_macc=41.04, val_miou=32.19[0m)] 53% 83/156 [01:33<00:58,  1.25it/s, [0;93mval_acc=76.02, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.21, val_miou=32.38[0m)] 54% 84/156 [01:33<00:53,  1.34it/s, [0;93mval_acc=76.02, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.21, val_miou=32.38[0m)] 54% 84/156 [01:33<00:53,  1.34it/s, [0;93mval_acc=76.16, val_loss_cross_entropy=0.788, val_loss_seg=0.788, val_macc=41.24, val_miou=32.42[0m)] 54% 85/156 [01:33<00:50,  1.41it/s, [0;93mval_acc=76.16, val_loss_cross_entropy=0.788, val_loss_seg=0.788, val_macc=41.24, val_miou=32.42[0m)] 54% 85/156 [01:38<00:50,  1.41it/s, [0;93mval_acc=76.23, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.20, val_miou=32.43[0m)] 55% 86/156 [01:38<02:18,  1.98s/it, [0;93mval_acc=76.23, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.20, val_miou=32.43[0m)] 55% 86/156 [01:39<02:18,  1.98s/it, [0;93mval_acc=76.12, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.13, val_miou=32.32[0m)] 56% 87/156 [01:39<01:46,  1.55s/it, [0;93mval_acc=76.12, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.13, val_miou=32.32[0m)] 56% 87/156 [01:39<01:46,  1.55s/it, [0;93mval_acc=76.15, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.18, val_miou=32.36[0m)] 56% 88/156 [01:39<01:26,  1.27s/it, [0;93mval_acc=76.15, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.18, val_miou=32.36[0m)] 56% 88/156 [01:40<01:26,  1.27s/it, [0;93mval_acc=76.17, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.25, val_miou=32.41[0m)] 57% 89/156 [01:40<01:11,  1.07s/it, [0;93mval_acc=76.17, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.25, val_miou=32.41[0m)] 57% 89/156 [01:40<01:11,  1.07s/it, [0;93mval_acc=76.21, val_loss_cross_entropy=0.79 , val_loss_seg=0.79 , val_macc=41.30, val_miou=32.46[0m)] 58% 90/156 [01:40<01:01,  1.08it/s, [0;93mval_acc=76.21, val_loss_cross_entropy=0.79 , val_loss_seg=0.79 , val_macc=41.30, val_miou=32.46[0m)] 58% 90/156 [01:41<01:01,  1.08it/s, [0;93mval_acc=76.27, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.37, val_miou=32.53[0m)] 58% 91/156 [01:41<00:51,  1.25it/s, [0;93mval_acc=76.27, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.37, val_miou=32.53[0m)] 58% 91/156 [01:41<00:51,  1.25it/s, [0;93mval_acc=76.29, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.37, val_miou=32.54[0m)] 59% 92/156 [01:41<00:45,  1.40it/s, [0;93mval_acc=76.29, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.37, val_miou=32.54[0m)] 59% 92/156 [01:42<00:45,  1.40it/s, [0;93mval_acc=76.21, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.27, val_miou=32.44[0m)] 60% 93/156 [01:42<00:42,  1.47it/s, [0;93mval_acc=76.21, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.27, val_miou=32.44[0m)] 60% 93/156 [01:43<00:42,  1.47it/s, [0;93mval_acc=76.23, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.28, val_miou=32.42[0m)] 60% 94/156 [01:43<00:40,  1.52it/s, [0;93mval_acc=76.23, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.28, val_miou=32.42[0m)] 60% 94/156 [01:43<00:40,  1.52it/s, [0;93mval_acc=76.25, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.31, val_miou=32.43[0m)] 61% 95/156 [01:43<00:40,  1.50it/s, [0;93mval_acc=76.25, val_loss_cross_entropy=0.785, val_loss_seg=0.785, val_macc=41.31, val_miou=32.43[0m)] 61% 95/156 [01:44<00:40,  1.50it/s, [0;93mval_acc=76.38, val_loss_cross_entropy=0.781, val_loss_seg=0.781, val_macc=41.41, val_miou=32.54[0m)] 62% 96/156 [01:44<00:42,  1.40it/s, [0;93mval_acc=76.38, val_loss_cross_entropy=0.781, val_loss_seg=0.781, val_macc=41.41, val_miou=32.54[0m)] 62% 96/156 [01:45<00:42,  1.40it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.778, val_loss_seg=0.778, val_macc=41.47, val_miou=32.60[0m)] 62% 97/156 [01:45<00:40,  1.46it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.778, val_loss_seg=0.778, val_macc=41.47, val_miou=32.60[0m)] 62% 97/156 [01:45<00:40,  1.46it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.779, val_loss_seg=0.779, val_macc=41.46, val_miou=32.59[0m)] 63% 98/156 [01:45<00:35,  1.64it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.779, val_loss_seg=0.779, val_macc=41.46, val_miou=32.59[0m)] 63% 98/156 [01:47<00:35,  1.64it/s, [0;93mval_acc=76.64, val_loss_cross_entropy=0.776, val_loss_seg=0.776, val_macc=41.49, val_miou=32.64[0m)] 63% 99/156 [01:47<01:00,  1.05s/it, [0;93mval_acc=76.64, val_loss_cross_entropy=0.776, val_loss_seg=0.776, val_macc=41.49, val_miou=32.64[0m)] 63% 99/156 [01:48<01:00,  1.05s/it, [0;93mval_acc=76.78, val_loss_cross_entropy=0.773, val_loss_seg=0.773, val_macc=41.50, val_miou=32.67[0m)] 64% 100/156 [01:48<00:52,  1.06it/s, [0;93mval_acc=76.78, val_loss_cross_entropy=0.773, val_loss_seg=0.773, val_macc=41.50, val_miou=32.67[0m)] 64% 100/156 [01:49<00:52,  1.06it/s, [0;93mval_acc=76.89, val_loss_cross_entropy=0.769, val_loss_seg=0.769, val_macc=41.51, val_miou=32.69[0m)] 65% 101/156 [01:49<00:46,  1.18it/s, [0;93mval_acc=76.89, val_loss_cross_entropy=0.769, val_loss_seg=0.769, val_macc=41.51, val_miou=32.69[0m)] 65% 101/156 [01:49<00:46,  1.18it/s, [0;93mval_acc=76.76, val_loss_cross_entropy=0.774, val_loss_seg=0.774, val_macc=41.36, val_miou=32.56[0m)] 65% 102/156 [01:49<00:40,  1.32it/s, [0;93mval_acc=76.76, val_loss_cross_entropy=0.774, val_loss_seg=0.774, val_macc=41.36, val_miou=32.56[0m)] 65% 102/156 [01:50<00:40,  1.32it/s, [0;93mval_acc=76.64, val_loss_cross_entropy=0.781, val_loss_seg=0.781, val_macc=41.42, val_miou=32.57[0m)] 66% 103/156 [01:50<00:36,  1.43it/s, [0;93mval_acc=76.64, val_loss_cross_entropy=0.781, val_loss_seg=0.781, val_macc=41.42, val_miou=32.57[0m)] 66% 103/156 [01:50<00:36,  1.43it/s, [0;93mval_acc=76.52, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.39, val_miou=32.50[0m)] 67% 104/156 [01:50<00:35,  1.46it/s, [0;93mval_acc=76.52, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.39, val_miou=32.50[0m)] 67% 104/156 [01:51<00:35,  1.46it/s, [0;93mval_acc=76.38, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.34, val_miou=32.39[0m)] 67% 105/156 [01:51<00:34,  1.46it/s, [0;93mval_acc=76.38, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.34, val_miou=32.39[0m)] 67% 105/156 [01:52<00:34,  1.46it/s, [0;93mval_acc=76.40, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.40, val_miou=32.41[0m)] 68% 106/156 [01:52<00:33,  1.49it/s, [0;93mval_acc=76.40, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.40, val_miou=32.41[0m)] 68% 106/156 [01:52<00:33,  1.49it/s, [0;93mval_acc=76.35, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.38, val_miou=32.37[0m)] 69% 107/156 [01:52<00:32,  1.53it/s, [0;93mval_acc=76.35, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.38, val_miou=32.37[0m)] 69% 107/156 [01:53<00:32,  1.53it/s, [0;93mval_acc=76.37, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.36, val_miou=32.41[0m)] 69% 108/156 [01:53<00:30,  1.59it/s, [0;93mval_acc=76.37, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.36, val_miou=32.41[0m)] 69% 108/156 [01:54<00:30,  1.59it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.79 , val_loss_seg=0.79 , val_macc=41.38, val_miou=32.43[0m)] 70% 109/156 [01:54<00:40,  1.16it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.79 , val_loss_seg=0.79 , val_macc=41.38, val_miou=32.43[0m)] 70% 109/156 [01:55<00:40,  1.16it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.35, val_miou=32.44[0m)] 71% 110/156 [01:55<00:36,  1.27it/s, [0;93mval_acc=76.45, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.35, val_miou=32.44[0m)] 71% 110/156 [01:56<00:36,  1.27it/s, [0;93mval_acc=76.43, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.30, val_miou=32.43[0m)] 71% 111/156 [01:56<00:33,  1.35it/s, [0;93mval_acc=76.43, val_loss_cross_entropy=0.790, val_loss_seg=0.790, val_macc=41.30, val_miou=32.43[0m)] 71% 111/156 [01:56<00:33,  1.35it/s, [0;93mval_acc=76.49, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.37, val_miou=32.50[0m)] 72% 112/156 [01:56<00:30,  1.45it/s, [0;93mval_acc=76.49, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.37, val_miou=32.50[0m)] 72% 112/156 [01:57<00:30,  1.45it/s, [0;93mval_acc=76.48, val_loss_cross_entropy=0.788, val_loss_seg=0.788, val_macc=41.46, val_miou=32.60[0m)] 72% 113/156 [01:57<00:29,  1.47it/s, [0;93mval_acc=76.48, val_loss_cross_entropy=0.788, val_loss_seg=0.788, val_macc=41.46, val_miou=32.60[0m)] 72% 113/156 [01:57<00:29,  1.47it/s, [0;93mval_acc=76.49, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.50, val_miou=32.65[0m)] 73% 114/156 [01:57<00:28,  1.48it/s, [0;93mval_acc=76.49, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.50, val_miou=32.65[0m)] 73% 114/156 [01:58<00:28,  1.48it/s, [0;93mval_acc=76.58, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.49, val_miou=32.67[0m)] 74% 115/156 [01:58<00:26,  1.53it/s, [0;93mval_acc=76.58, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.49, val_miou=32.67[0m)] 74% 115/156 [01:59<00:26,  1.53it/s, [0;93mval_acc=76.59, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.37, val_miou=32.56[0m)] 74% 116/156 [01:59<00:26,  1.52it/s, [0;93mval_acc=76.59, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.37, val_miou=32.56[0m)] 74% 116/156 [02:00<00:26,  1.52it/s, [0;93mval_acc=76.63, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.31, val_miou=32.51[0m)] 75% 117/156 [02:00<00:33,  1.16it/s, [0;93mval_acc=76.63, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.31, val_miou=32.51[0m)] 75% 117/156 [02:02<00:33,  1.16it/s, [0;93mval_acc=76.76, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.30, val_miou=32.50[0m)] 76% 118/156 [02:02<00:45,  1.19s/it, [0;93mval_acc=76.76, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.30, val_miou=32.50[0m)] 76% 118/156 [02:03<00:45,  1.19s/it, [0;93mval_acc=76.76, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.23, val_miou=32.43[0m)] 76% 119/156 [02:03<00:39,  1.06s/it, [0;93mval_acc=76.76, val_loss_cross_entropy=0.784, val_loss_seg=0.784, val_macc=41.23, val_miou=32.43[0m)] 76% 119/156 [02:03<00:39,  1.06s/it, [0;93mval_acc=76.72, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.22, val_miou=32.41[0m)] 77% 120/156 [02:03<00:32,  1.09it/s, [0;93mval_acc=76.72, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.22, val_miou=32.41[0m)] 77% 120/156 [02:04<00:32,  1.09it/s, [0;93mval_acc=76.71, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.22, val_miou=32.40[0m)] 78% 121/156 [02:04<00:29,  1.17it/s, [0;93mval_acc=76.71, val_loss_cross_entropy=0.786, val_loss_seg=0.786, val_macc=41.22, val_miou=32.40[0m)] 78% 121/156 [02:17<00:29,  1.17it/s, [0;93mval_acc=76.69, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.45, val_miou=32.64[0m)] 78% 122/156 [02:17<02:28,  4.37s/it, [0;93mval_acc=76.69, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.45, val_miou=32.64[0m)] 78% 122/156 [02:17<02:28,  4.37s/it, [0;93mval_acc=76.67, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.37, val_miou=32.58[0m)] 79% 123/156 [02:17<01:48,  3.29s/it, [0;93mval_acc=76.67, val_loss_cross_entropy=0.787, val_loss_seg=0.787, val_macc=41.37, val_miou=32.58[0m)] 79% 123/156 [02:18<01:48,  3.29s/it, [0;93mval_acc=76.62, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=41.30, val_miou=32.53[0m)] 79% 124/156 [02:18<01:20,  2.50s/it, [0;93mval_acc=76.62, val_loss_cross_entropy=0.789, val_loss_seg=0.789, val_macc=41.30, val_miou=32.53[0m)] 79% 124/156 [02:19<01:20,  2.50s/it, [0;93mval_acc=76.56, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.28, val_miou=32.52[0m)] 80% 125/156 [02:19<00:59,  1.90s/it, [0;93mval_acc=76.56, val_loss_cross_entropy=0.792, val_loss_seg=0.792, val_macc=41.28, val_miou=32.52[0m)] 80% 125/156 [02:19<00:59,  1.90s/it, [0;93mval_acc=76.58, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.32, val_miou=32.59[0m)] 81% 126/156 [02:19<00:44,  1.50s/it, [0;93mval_acc=76.58, val_loss_cross_entropy=0.791, val_loss_seg=0.791, val_macc=41.32, val_miou=32.59[0m)] 81% 126/156 [02:22<00:44,  1.50s/it, [0;93mval_acc=76.50, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.32, val_miou=32.55[0m)] 81% 127/156 [02:22<00:52,  1.80s/it, [0;93mval_acc=76.50, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.32, val_miou=32.55[0m)] 81% 127/156 [02:22<00:32,  1.12s/it, [0;93mval_acc=76.50, val_loss_cross_entropy=0.793, val_loss_seg=0.793, val_macc=41.32, val_miou=32.55[0m)]this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.
this is a val dataset object
 DeepViewAgg/torch_points3d/datasets/segmentation/scannet.py,
        line 1118:
        (Feng) on my conda installation, this block causes a max 
        depth recursion error. Return super().indices() for now as it 
        results in no problems on my torch_geometric=1.7.2 and 
        pytorch=1.12.1 installation.

Error executing job with overrides: ['data=segmentation/multimodal/Feng/scannet-neucon-smallres', 'models=segmentation/multimodal/sparseconv3d', 'model_name=Res16UNet34-PointPyramid-early-ade20k-interpolate', 'task=segmentation', 'training=Feng/minkowski-pretrained-pyramid-0', 'lr_scheduler=exponential', 'eval_frequency=1', 'data.dataroot=/project/fsun/dvata', 'training.cuda=0', 'training.batch_size=2', 'training.epochs=300', 'training.num_workers=5', 'training.optim.base_lr=0.1', 'training.wandb.log=True', 'training.wandb.name=Res16UNet34-PointPyramid-early-ade20k-interpolate', 'tracker_options.make_submission=False', 'training.checkpoint_dir=']
Traceback (most recent call last):
  File "train.py", line 23, in <module>
    main()
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/main.py", line 95, in decorated_main
    config_name=config_name,
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/utils.py", line 396, in _run_hydra
    overrides=overrides,
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/utils.py", line 453, in _run_app
    lambda: hydra.run(
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/utils.py", line 216, in run_and_report
    raise ex
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/utils.py", line 213, in run_and_report
    return func()
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/utils.py", line 456, in <lambda>
    overrides=overrides,
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/_internal/hydr
wandb: Waiting for W&B process to finish, PID 7476
a.py", line 132, in run
    _ = ret.return_value
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "train.py", line 15, in main
    trainer.train()
  File "/home/fsun/DeepViewAgg/torch_points3d/trainer.py", line 159, in train
    self._test_epoch(epoch, "val")
  File "/home/fsun/DeepViewAgg/torch_points3d/trainer.py", line 257, in _test_epoch
    for data in tq_loader:
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/tqdm/std.py", line 1195, in __iter__
    for obj in iterable:
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 681, in __next__
    data = self._next_data()
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1356, in _next_data
    return self._process_data(data)
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 1402, in _process_data
    data.reraise()
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/_utils.py", line 461, in reraise
    raise exception
RuntimeError: Caught RuntimeError in DataLoader worker process 2.
Original Traceback (most recent call last):
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/_utils/worker.py", line 302, in _worker_loop
    data = fetcher.fetch(index)
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 49, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/fsun/.conda/envs/pytorch3d/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 49, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/fsun/DeepViewAgg/torch_points3d/datasets/segmentation/multimodal/scannet.py", line 284, in __getitem__
    data, images = self.transform_image(data, images)
  File "/home/fsun/DeepViewAgg/torch_points3d/core/data_transform/multimodal/compose.py", line 13, in __call__
    args = t(*args)
  File "/home/fsun/DeepViewAgg/torch_points3d/core/data_transform/multimodal/image.py", line 56, in __call__
    data_out, images_out = self._process(data, images)
  File "/home/fsun/DeepViewAgg/torch_points3d/core/data_transform/multimodal/image.py", line 638, in _process
    images = images.select_points(data[self.key], mode='pick')
  File "/home/fsun/DeepViewAgg/torch_points3d/core/multimodal/image.py", line 886, in select_points
    images.mappings = mappings.select_images(seen_image_idx)
  File "/home/fsun/DeepViewAgg/torch_points3d/core/multimodal/image.py", line 2049, in select_images
    view_idx = torch.where((self.images[..., None] == idx).any(-1))[0]
RuntimeError: [enforce fail at alloc_cpu.cpp:66] . DefaultCPUAllocator: can't allocate memory: you tried to allocate 1183104720 bytes. Error code 12 (Cannot allocate memory)

wandb: Program failed with code 1. Press ctrl-c to abort syncing.
wandb: You can sync this run to the cloud by running: 
wandb: wandb sync wandb/run-20221018_121859-1dvcp624
