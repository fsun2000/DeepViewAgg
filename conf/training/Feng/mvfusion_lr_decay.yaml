# @package training
# Ref: https://github.com/chrischoy/SpatioTemporalSegmentation/blob/master/config.py
epochs: 300
num_workers: 4
batch_size: 8
test_batch_size: 1
shuffle: True
cuda: 0
precompute_multi_scale: False # Compute multiscate features on cpu for faster training / inference
optim:
  base_lr: 0.1
#   accumulated_gradient: -1 # Accumulate gradient accumulated_gradient * batch_size
  grad_clip: -1
  optimizer:
    class: SGD
    params:
#       params:
#         - 'head'
#         - 'backbone'
#       lr:
#         - ${training.optim.base_lr}
#         - ${training.optim.base_lr}
      lr: ${training.optim.base_lr}
      momentum: 0.9
      weight_decay: 1e-4
      dampening: 0.1
  lr_scheduler:
    class: ExponentialLR
    params:
      gamma: 0.955  #0.97725  # in 200 epochs, LR decays by 1/100th  following 1 * (0.9885)^100 where lr = 1
  bn_scheduler:
    bn_policy: "step_decay"
    params:
      bn_momentum: 0.02
      bn_decay: 1
      decay_step: 2000
      bn_clip: 1e-2
weight_name: "miou" # Used during resume, select with model to load from [miou, macc, acc..., latest]
enable_cudnn: True
checkpoint_dir: ""

# Those arguments within experiment defines which model, dataset and task to be created for benchmarking
# parameters for Weights and Biases
wandb:
  entity: ""
  project: scannet-benchmark
  log: True
  notes: "Minkowski baseline"
  name: "Res16UNet34"
  id:
  public: True # It will be display the model within wandb log, else not.
  config:
    model_name: ${model_name}

  # parameters for TensorBoard Visualization
tensorboard:
  log: False
